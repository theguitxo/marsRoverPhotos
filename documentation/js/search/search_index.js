var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/APIPhotoCameraResponse.html",[0,0.366,1,1.597]],["body/interfaces/APIPhotoCameraResponse.html",[0,0.717,1,2.378,2,0.953,3,0.406,4,0.252,5,0.225,6,1.583,7,0.369,8,1.926,9,1.605,10,2.461,11,1.58,12,0.339,13,0.703,14,2.966,15,2.539,16,1.205,17,2.966,18,1.476,19,0.644,20,0.024,21,1.597,22,1.887,23,0.725,24,0.432,25,2.372,26,1.217,27,1.331,28,1.076,29,0.976,30,1.384,31,0.492,32,1.81,33,1.534,34,1.384,35,2.097,36,1.858,37,2.377,38,1.331,39,1.931,40,2.211,41,0.844,42,1.702,43,2.064,44,2.211,45,1.702,46,2.211,47,1.81,48,1.583,49,1.583,50,1.043,51,2.377,52,1.296,53,1.583,54,0.658,55,1.702,56,1.702,57,2.064,58,1.477,59,2.064,60,2.064,61,1.076,62,1.583,63,1.702,64,1.296,65,1.477,66,0.015,67,0.015]],["title/interfaces/APIPhotoDataReponse.html",[0,0.366,59,1.597]],["body/interfaces/APIPhotoDataReponse.html",[0,0.715,1,2.547,2,0.93,3,0.401,4,0.246,5,0.22,6,1.544,7,0.36,8,2.01,9,1.585,10,2.442,11,1.617,12,0.331,13,0.691,14,1.66,15,2.505,16,1.118,17,1.66,18,1.489,19,0.696,20,0.024,21,1.116,22,1.879,23,0.732,24,0.424,25,2.356,26,1.187,27,1.308,28,1.049,29,0.972,30,1.369,31,0.489,32,1.779,33,1.643,34,1.57,35,2.126,36,1.884,37,3.092,38,1.308,39,1.898,40,2.173,41,0.824,42,1.66,43,2.028,44,2.173,45,1.66,46,2.173,47,1.779,48,1.544,49,1.544,50,1.025,51,2.337,52,1.264,53,1.544,54,0.642,55,1.66,56,1.66,57,2.547,58,1.441,59,2.347,60,2.547,61,1.477,62,2.173,63,2.934,64,1.264,65,1.441,66,0.015,67,0.015]],["title/interfaces/APIPhotoResponse.html",[0,0.366,64,1.401]],["body/interfaces/APIPhotoResponse.html",[0,0.72,1,2.107,2,0.982,3,0.413,4,0.26,5,0.232,6,1.631,7,0.381,8,1.909,9,1.553,10,2.547,11,1.591,12,0.349,13,0.717,14,1.753,15,2.392,16,1.135,17,1.753,18,1.459,19,0.381,20,0.024,21,1.178,22,1.825,23,0.724,24,0.441,25,2.392,26,1.253,27,1.359,28,1.108,29,1.009,30,1.402,31,0.496,32,1.848,33,1.559,34,1.402,35,2.114,36,1.873,37,2.427,38,1.359,39,1.971,40,2.258,41,0.87,42,1.753,43,2.107,44,2.258,45,1.753,46,2.258,47,1.848,48,1.631,49,1.631,50,1.221,51,2.784,52,1.335,53,1.631,54,0.678,55,1.753,56,1.753,57,2.107,58,1.522,59,2.608,60,2.107,61,1.108,62,1.631,63,1.753,64,1.848,65,2.107,66,0.015,67,0.015]],["title/interfaces/APIPhotoRoverResponse.html",[0,0.366,57,1.597]],["body/interfaces/APIPhotoRoverResponse.html",[0,0.716,1,2.049,2,0.943,3,0.438,4,0.25,5,0.223,6,1.567,7,0.366,8,1.891,9,1.542,10,2.367,11,1.544,12,0.335,13,0.698,14,1.685,15,2.512,16,1.192,17,1.685,18,1.506,19,0.675,20,0.024,21,1.132,22,1.852,23,0.733,24,0.429,25,2.555,26,1.204,27,1.322,28,1.065,29,0.975,30,1.378,31,0.491,32,1.797,33,1.526,34,1.378,35,2.169,36,1.921,37,2.36,38,1.322,39,1.917,40,2.196,41,0.836,42,1.685,43,2.365,44,2.892,45,1.685,46,2.892,47,1.797,48,1.567,49,1.567,50,1.036,51,2.36,52,1.283,53,1.567,54,0.652,55,1.685,56,2.36,57,2.365,58,2.049,59,2.049,60,2.049,61,1.065,62,1.567,63,1.685,64,1.283,65,1.462,66,0.015,67,0.015]],["title/interfaces/ApiManifest.html",[0,0.366,52,1.401]],["body/interfaces/ApiManifest.html",[0,0.72,1,2.107,2,0.982,3,0.413,4,0.26,5,0.232,6,1.631,7,0.381,8,1.938,9,1.553,10,2.485,11,1.561,12,0.349,13,0.717,14,1.753,15,2.392,16,1.135,17,1.753,18,1.459,19,0.381,20,0.024,21,1.178,22,1.825,23,0.731,24,0.441,25,2.392,26,1.253,27,1.359,28,1.108,29,0.981,30,1.561,31,0.496,32,1.848,33,1.559,34,1.402,35,2.114,36,1.873,37,2.427,38,1.359,39,1.971,40,2.258,41,0.87,42,1.753,43,2.107,44,2.258,45,1.753,46,2.258,47,1.848,48,1.631,49,1.631,50,1.065,51,2.784,52,1.848,53,2.258,54,0.939,55,3.004,56,1.753,57,2.107,58,1.522,59,2.107,60,2.107,61,1.108,62,1.631,63,1.753,64,1.335,65,1.522,66,0.015,67,0.015]],["title/injectables/ApiService.html",[68,2.158,69,2.364]],["body/injectables/ApiService.html",[3,0.286,4,0.286,5,0.256,7,0.679,9,1.372,10,2.382,12,0.384,13,0.766,16,1.164,18,1.456,19,0.679,20,0.024,23,0.73,24,0.593,29,0.86,30,1.568,31,0.286,33,1.452,34,1.21,39,2.105,50,1.137,52,1.47,54,1.003,61,1.638,64,1.47,66,0.016,67,0.016,68,3.041,69,3.331,70,2.752,71,3.115,72,4.317,73,4.182,74,3.695,75,3.041,76,5.555,77,2.105,78,3.331,79,4.921,80,2.715,81,3.666,82,5.937,83,2.236,84,4.921,85,2.092,86,1.827,87,6.193,88,2.411,89,4.921,90,4.921,91,3.666,92,4.458,93,2.715,94,2.382,95,4.145,96,4.921,97,5.937,98,2.832,99,3.666,100,4.182,101,2.799,102,2.752,103,1.931,104,4.921,105,4.921,106,3.041,107,3.695,108,4.921,109,3.115,110,0.901,111,1.796,112,2.482,113,2.265,114,3.666,115,3.115,116,0.747,117,2.54,118,1.931,119,1.931,120,2.722,121,4.921,122,3.666,123,2.799,124,4.921,125,3.666,126,3.666,127,3.666,128,3.666,129,3.666,130,3.666]],["title/components/AppComponent.html",[131,0.758,132,1.236]],["body/components/AppComponent.html",[3,0.291,4,0.291,5,0.26,7,0.569,12,0.391,13,0.775,16,1.001,19,0.569,20,0.024,23,0.522,24,0.636,28,1.99,29,0.54,31,0.291,54,1.306,66,0.016,67,0.016,77,2.129,80,2.733,83,2.11,85,1.404,86,1.1,92,3.737,94,1.495,95,3.462,110,0.917,111,2.438,113,2.304,115,5.445,116,0.76,117,1.595,118,1.964,119,1.964,131,1.421,132,2.116,133,2.129,134,1.705,135,1.705,136,1.705,137,3.168,138,2.352,139,2.622,140,3.187,141,1.705,142,2.75,143,2.438,144,4.976,145,5.602,146,3.4,147,2.799,148,2.283,149,4.976,150,3.728,151,4.047,152,2.438,153,4.976,154,3.737,155,2.799,156,4.976,157,1.595,158,1.705,159,2.524,160,2.524,161,2.524,162,1.964,163,2.799,164,3.728,165,3.728,166,3.728,167,3.728,168,3.728,169,3.728,170,3.728,171,3.728,172,3.728,173,4.206,174,3.728,175,3.369,176,3.728,177,3.728,178,1.705,179,2.276,180,2.276,181,1.705,182,2.733,183,1.705,184,1.705,185,1.241,186,1.705,187,1.241,188,1.705,189,1.32,190,1.224,191,1.382,192,1.705,193,1.32,194,1.705,195,1.32,196,1.705,197,1.32,198,1.705,199,1.32,200,1.705,201,1.32,202,1.705,203,1.705]],["title/modules/AppModule.html",[204,1.315,205,2.364]],["body/modules/AppModule.html",[3,0.342,4,0.342,5,0.305,20,0.024,24,0.679,31,0.342,66,0.018,67,0.018,109,3.716,110,1.075,116,0.891,132,2.501,138,1.456,148,1.838,157,2.362,205,4.695,206,1.871,207,2.705,208,3.716,209,3.716,210,3.716,211,3.716,212,4.134,213,3.411,214,2.303,215,2.702,216,4.373,217,3.737,218,2.908,219,5.52,220,2.908,221,5.52,222,4.691,223,2.96,224,3.283,225,4.373,226,5.52,227,4.373,228,4.373,229,4.373,230,4.373,231,4.373,232,3.716,233,4.373,234,3.283,235,5.52,236,4.373,237,3.283,238,4.691,239,4.373,240,2.96,241,4.373,242,5.52,243,4.373,244,3.283,245,4.373,246,4.373,247,4.373,248,3.716,249,4.373,250,4.373,251,4.373,252,3.716,253,4.373,254,3.716]],["title/modules/AppRoutingModule.html",[204,1.315,212,2.158]],["body/modules/AppRoutingModule.html",[3,0.381,4,0.381,5,0.34,20,0.024,21,1.728,24,0.565,31,0.381,66,0.019,67,0.019,110,1.2,116,0.995,120,2.392,206,2.088,212,3.651,218,2.571,220,3.112,255,4.881,256,3.665,257,4.436,258,3.347,259,2.776,260,5.077,261,3.651,262,6.603,263,4.881,264,4.881,265,2.776,266,6.354,267,6.354,268,4.881,269,4.881,270,4.881,271,4.881,272,4.881,273,3.304]],["title/components/DashboardComponent.html",[131,0.758,185,1.163]],["body/components/DashboardComponent.html",[3,0.288,4,0.288,5,0.257,7,0.565,10,1.981,12,0.386,13,0.769,16,0.996,19,0.565,20,0.024,23,0.67,24,0.594,28,1.981,29,0.898,31,0.288,50,1.375,54,1.006,65,2.258,66,0.016,67,0.016,74,3.708,75,3.677,77,2.113,80,2.721,83,2.097,85,1.388,86,1.087,88,2.419,94,1.478,95,3.442,110,0.906,111,1.805,116,0.751,117,1.576,118,1.941,119,1.941,131,1.416,132,1.304,133,2.546,134,1.685,135,1.685,136,1.685,138,2.308,139,2.601,140,3.168,141,1.685,142,2.744,143,2.419,146,3.384,147,2.767,148,2.259,152,2.419,157,1.576,158,1.685,159,2.494,160,2.494,161,2.494,178,1.685,179,2.258,180,2.258,181,1.685,182,2.721,183,1.685,184,1.685,185,1.981,186,1.685,187,1.227,188,1.685,189,1.304,190,1.214,191,1.371,192,1.685,193,1.304,194,1.685,195,1.304,196,1.685,197,1.304,198,1.685,199,1.304,200,1.685,201,1.304,202,1.685,203,1.685,261,3.677,274,3.131,275,3.051,276,3.051,277,4.938,278,4.897,279,4.938,280,3.684,281,2.809,282,2.809,283,4.196,284,2.277,285,3.684,286,3.684,287,4.467,288,4.196,289,4.196,290,4.196,291,4.938,292,4.196,293,1.457,294,3.708,295,4.938,296,3.708,297,4.938]],["title/modules/DashboardModule.html",[204,1.315,298,2.364]],["body/modules/DashboardModule.html",[3,0.357,4,0.357,5,0.319,7,0.523,11,1.396,20,0.024,24,0.647,28,1.891,31,0.357,66,0.019,67,0.019,110,1.125,116,0.933,185,2.253,199,2.395,201,2.395,204,2.139,206,1.958,207,2.783,213,3.509,214,2.41,215,2.828,217,3.844,218,2.992,220,2.992,224,3.436,261,3.816,298,4.846,299,3.888,300,3.888,301,3.888,302,4.181,303,3.849,304,4.576,305,1.675,306,4.264,307,3.888,308,3.888,309,5.679,310,3.436,311,4.576,312,3.436,313,4.576]],["title/modules/DashboardRoutingModule.html",[204,1.315,302,2.158]],["body/modules/DashboardRoutingModule.html",[3,0.398,4,0.398,5,0.355,20,0.024,24,0.619,31,0.398,66,0.02,67,0.02,110,1.251,116,1.037,120,2.494,131,1.105,185,2.017,204,2.436,206,2.178,218,2.681,220,3.191,256,3.821,257,4.549,258,3.603,259,2.895,260,3.821,261,3.744,273,3.445,302,3.744,308,4.325,314,5.089,315,3.821,316,4.325]],["title/components/DetailsComponent.html",[131,0.758,187,1.163]],["body/components/DetailsComponent.html",[3,0.27,4,0.176,5,0.157,7,0.482,8,1.02,11,1.163,12,0.236,13,0.538,16,0.846,18,0.488,19,0.706,20,0.024,22,1.61,23,0.535,24,0.569,29,0.781,31,0.176,34,0.85,36,1.02,38,1.02,50,1.467,54,1.237,62,1.102,66,0.011,67,0.011,72,2.341,77,1.48,80,2.163,83,2.46,85,1.302,86,1.02,88,2.318,93,2.163,94,2.325,95,4.067,110,0.553,111,1.102,116,0.458,117,1.803,118,3.053,119,1.822,123,1.279,131,1.378,132,0.796,133,1.48,134,2.163,135,1.028,136,1.028,138,2.113,139,1.822,140,2.397,141,1.028,142,2.477,143,1.694,146,2.691,148,2.191,152,2.974,155,1.689,157,0.962,158,1.028,159,1.522,161,1.522,162,2.492,163,1.689,178,1.028,179,1.581,180,1.581,181,1.028,182,2.163,183,1.028,184,1.028,185,0.749,186,1.028,187,1.575,188,1.028,189,0.796,190,1.326,191,0.96,192,1.028,193,0.796,194,1.028,195,0.796,196,1.028,197,0.796,198,1.028,199,0.796,200,1.028,201,0.796,202,1.028,203,1.028,244,4.352,258,1.822,259,1.279,261,2.923,265,1.967,281,1.967,282,1.967,293,0.663,296,2.597,305,1.59,317,1.279,318,1.911,319,4.73,320,1.967,321,4.214,322,3.458,323,2.853,324,4.214,325,3.581,326,3.164,327,4.214,328,4.214,329,2.048,330,2.048,331,2.853,332,4.73,333,3.458,334,4.73,335,4.02,336,2.939,337,3.581,338,1.911,339,2.249,340,2.939,341,3.458,342,3.458,343,2.249,344,2.597,345,2.186,346,3.458,347,2.249,348,2.341,349,2.137,350,2.249,351,4.048,352,2.939,353,2.249,354,2.341,355,2.939,356,2.939,357,2.249,358,2.249,359,1.967,360,3.458,361,2.249,362,2.249,363,1.822,364,2.249,365,2.325,366,1.48,367,2.939,368,2.249,369,2.597,370,2.905,371,2.249,372,3.458,373,2.249,374,2.249,375,2.249,376,1.581,377,1.911,378,2.249,379,2.597,380,1.102,381,1.522,382,1.911,383,1.911,384,1.028,385,2.249,386,1.911,387,1.911,388,2.249,389,2.249,390,2.249,391,2.249,392,2.249,393,2.249,394,2.249,395,2.249,396,2.249,397,2.249,398,2.249,399,2.249,400,1.911,401,2.249,402,2.249,403,2.249,404,2.249,405,2.249,406,1.689,407,2.249,408,1.911,409,2.249,410,2.249,411,2.249,412,3.458,413,3.458,414,3.458,415,3.458,416,2.597,417,3.458,418,3.458,419,3.458,420,2.249,421,2.397,422,1.911,423,1.689,424,2.604,425,2.137,426,2.137,427,1.967,428,2.137,429,2.137,430,2.604,431,2.939,432,2.939,433,2.249,434,1.39,435,1.689,436,4.02,437,2.939,438,5.106,439,1.911,440,2.939,441,1.689,442,1.911,443,1.689,444,2.341,445,1.689,446,2.341,447,1.911,448,2.137,449,2.249,450,1.911,451,1.522,452,1.689,453,1.39,454,2.341,455,1.911,456,2.249,457,1.522,458,1.689,459,1.911]],["title/modules/DetailsModule.html",[204,1.315,460,2.364]],["body/modules/DetailsModule.html",[3,0.374,4,0.374,5,0.334,7,0.548,9,1.35,20,0.024,23,0.613,24,0.628,29,0.846,31,0.374,39,2.499,66,0.019,67,0.019,110,1.178,116,0.976,187,2.278,204,2.2,206,2.05,207,2.862,213,3.61,214,2.524,215,2.961,217,3.955,218,3.077,220,3.077,224,3.597,265,3.585,303,3.892,305,1.723,307,4.071,460,4.796,461,4.071,462,4.071,463,4.071,464,4.228,465,4.791,466,4.071]],["title/modules/DetailsRoutingModule.html",[204,1.315,464,2.158]],["body/modules/DetailsRoutingModule.html",[3,0.398,4,0.398,5,0.355,20,0.024,24,0.619,31,0.398,66,0.02,67,0.02,110,1.251,116,1.037,120,2.494,131,1.105,187,2.017,204,2.436,206,2.178,218,2.681,220,3.191,256,3.821,257,4.549,258,3.603,259,2.895,260,3.821,265,2.895,273,3.445,315,3.821,316,4.325,464,3.744,466,4.325,467,5.089,468,5.089]],["title/interfaces/ErrorDialogData.html",[0,0.366,380,1.711]],["body/interfaces/ErrorDialogData.html",[0,0.534,2,1.501,3,0.398,4,0.398,5,0.355,7,0.582,12,0.534,13,0.943,18,1.507,19,0.693,20,0.024,31,0.398,66,0.02,67,0.02,190,1.682,191,1.413,293,1.787,305,1.975,363,3.603,380,2.969,469,4.325,470,5.089,471,2.865,472,2.865,473,2.969]],["title/components/ErrorDialogLauncherComponent.html",[131,0.758,189,1.236]],["body/components/ErrorDialogLauncherComponent.html",[3,0.271,4,0.271,5,0.242,7,0.543,12,0.364,13,0.739,16,0.966,19,0.664,20,0.024,23,0.498,24,0.582,29,0.503,31,0.271,53,2.325,54,0.708,66,0.016,67,0.016,72,3.658,77,2.03,80,2.656,83,2.29,85,1.308,86,1.025,88,2.325,94,1.393,110,0.854,116,0.708,117,1.486,120,1.702,131,1.395,132,1.23,133,2.03,134,1.589,135,1.589,136,1.589,138,2.255,139,2.5,140,3.458,141,1.589,142,2.717,146,3.304,152,2.325,155,2.608,178,1.589,179,2.17,180,2.17,181,1.589,182,2.656,183,1.589,184,1.589,185,1.157,186,1.589,187,1.157,188,1.589,189,2.056,190,1.631,191,1.99,192,1.589,193,1.68,194,1.589,195,1.23,196,1.589,197,1.23,198,1.589,199,1.23,200,1.589,201,1.23,202,1.589,203,1.589,252,2.952,281,2.699,282,2.699,293,1.4,305,1.4,325,4.592,349,2.147,363,3.306,370,2.699,380,2.648,381,2.352,400,2.952,473,2.846,474,4.712,475,4.249,476,4.712,477,2.952,478,4.745,479,4.592,480,2.932,481,4.032,482,5.404,483,3.474,484,6.276,485,4.745,486,5.404,487,5.404,488,3.474,489,4.592,490,4.032,491,4.745,492,3.474,493,4.745,494,3.474,495,2.932,496,4.032,497,2.608,498,2.352,499,2.952,500,3.474,501,2.952,502,3.474,503,3.474,504,3.474,505,3.474]],["title/components/ErrorDialogPopupComponent.html",[131,0.758,193,1.236]],["body/components/ErrorDialogPopupComponent.html",[3,0.271,4,0.271,5,0.242,7,0.542,12,0.364,13,0.738,16,0.965,19,0.618,20,0.024,23,0.497,24,0.517,29,0.502,31,0.271,54,1.351,66,0.016,67,0.016,80,2.654,83,2.034,85,1.307,86,1.023,110,0.853,116,0.707,117,2.029,131,1.395,132,1.228,133,2.029,134,1.587,135,1.587,136,1.587,138,2.254,141,1.587,142,2.716,143,2.323,162,1.828,178,1.587,179,2.168,180,2.168,181,1.587,182,2.654,183,1.587,184,1.587,185,1.155,186,1.587,187,1.155,188,1.587,189,1.228,190,1.665,191,1.982,192,1.587,193,2.055,194,1.587,195,1.228,196,1.587,197,1.228,198,1.587,199,1.228,200,1.587,201,1.228,202,1.587,203,1.587,305,1.793,317,1.974,320,2.697,363,2.498,379,4.055,380,3.074,381,2.349,421,1.974,423,3.56,424,2.144,425,2.144,426,2.93,427,1.974,428,3.587,429,2.93,430,3.587,435,2.605,444,2.349,446,2.349,448,2.144,451,2.349,453,2.93,457,2.349,458,2.605,474,4.358,475,3.929,479,5.331,497,2.605,498,3.929,501,5.164,506,2.949,507,4.741,508,4.741,509,5.401,510,4.741,511,3.47,512,6.273,513,3.47,514,5.401,515,3.47,516,4.741,517,3.47,518,3.47,519,3.47,520,3.47,521,4.741,522,4.741,523,4.741,524,4.741,525,3.47,526,3.47,527,3.21,528,3.47,529,3.47,530,3.47,531,3.56,532,3.47,533,4.741,534,3.47,535,2.605,536,3.47,537,3.47]],["title/components/LoaderComponent.html",[131,0.758,195,1.236]],["body/components/LoaderComponent.html",[3,0.296,4,0.296,5,0.264,7,0.434,12,0.398,16,0.9,19,0.576,20,0.024,23,0.528,24,0.541,29,0.549,31,0.296,54,1.36,66,0.017,67,0.017,77,2.154,83,2.128,88,2.466,93,2.944,94,1.521,110,0.932,116,0.773,131,1.227,132,1.342,133,2.154,134,1.734,135,1.734,136,1.734,138,2.289,139,2.652,140,3.214,141,1.734,142,2.758,143,2.466,146,3.424,148,2.221,152,2.466,157,1.623,178,1.734,179,2.302,180,2.302,181,1.734,182,2.752,183,1.734,184,1.734,185,1.263,186,1.734,187,1.263,188,1.734,189,1.342,190,1.238,191,1.398,192,1.734,193,1.342,194,1.734,195,2.13,196,1.734,197,1.342,198,1.734,199,1.342,200,1.734,201,1.342,202,1.734,203,1.734,275,3.111,276,3.111,281,2.863,282,2.863,284,2.343,317,2.157,320,2.863,330,2.512,367,4.277,370,3.841,421,2.863,424,2.343,425,3.111,426,2.343,427,2.157,428,3.111,429,2.343,430,2.343,454,2.567,457,2.567,480,3.111,495,3.492,531,2.847,535,2.847,538,3.223,539,3.408,540,4.277,541,5.033,542,5.65,543,5.65,544,5.033,545,4.801,546,3.792,547,3.792,548,4.277,549,3.792,550,4.277,551,4.277,552,3.223,553,3.792,554,3.223,555,3.223,556,3.792,557,2.847,558,4.277,559,3.792,560,3.792]],["title/interfaces/Manifest.html",[0,0.366,30,0.859]],["body/interfaces/Manifest.html",[0,0.706,1,1.979,2,0.898,3,0.393,4,0.238,5,0.212,6,1.492,7,0.348,8,1.867,9,1.527,10,2.324,11,1.556,12,0.319,13,0.674,14,1.604,15,2.332,16,1.181,17,1.604,18,1.509,19,0.724,20,0.024,21,1.078,22,1.868,23,0.731,24,0.414,25,2.534,26,1.147,27,1.277,28,1.014,29,0.998,30,1.424,31,0.484,32,2.2,33,1.618,34,1.348,35,2.175,36,1.926,37,2.28,38,1.485,39,2.155,40,2.839,41,0.796,42,1.604,43,2.303,44,2.839,45,2.28,46,2.839,47,2.2,48,2.687,49,2.687,50,1.164,51,2.28,52,1.221,53,1.492,54,0.62,55,1.604,56,1.604,57,1.979,58,1.392,59,1.979,60,1.979,61,1.014,62,1.492,63,1.604,64,1.221,65,1.392,66,0.014,67,0.014,86,2.023]],["title/interfaces/ManifestPhoto.html",[0,0.366,32,1.401]],["body/interfaces/ManifestPhoto.html",[0,0.715,1,2.028,2,0.93,3,0.435,4,0.246,5,0.22,6,1.544,7,0.36,8,1.884,9,1.585,10,2.354,11,1.57,12,0.331,13,0.691,14,1.66,15,2.356,16,1.118,17,1.66,18,1.47,19,0.671,20,0.024,21,1.116,22,1.879,23,0.723,24,0.424,25,2.356,26,1.187,27,1.643,28,1.049,29,1.007,30,1.443,31,0.489,32,2.059,33,1.643,34,1.57,35,2.126,36,1.884,37,3.092,38,1.514,39,2.196,40,2.876,41,1.456,42,2.934,43,2.028,44,2.173,45,1.66,46,2.173,47,1.779,48,1.544,49,1.544,50,1.025,51,2.337,52,1.264,53,1.544,54,0.642,55,1.66,56,1.66,57,2.028,58,1.441,59,2.028,60,2.028,61,1.049,62,1.544,63,1.66,64,1.264,65,1.441,66,0.015,67,0.015,86,1.941]],["title/components/PaginatorComponent.html",[131,0.758,197,1.236]],["body/components/PaginatorComponent.html",[3,0.175,4,0.175,5,0.156,7,0.256,12,0.44,13,0.536,16,0.751,19,0.74,20,0.024,22,1.494,23,0.361,24,0.487,29,0.324,31,0.175,38,1.391,47,2.321,50,1.338,54,0.702,66,0.018,67,0.011,77,1.473,83,2.522,85,0.842,86,0.66,88,1.687,94,2.158,103,2.485,106,2.915,107,1.679,110,0.55,116,0.456,131,1.106,132,0.792,133,1.473,134,1.023,135,1.023,136,1.023,138,2.054,139,1.814,141,1.023,142,2.724,143,1.687,148,2.173,152,3.067,157,0.957,178,1.023,179,1.575,180,1.575,181,1.023,182,2.157,183,1.023,184,1.023,185,0.745,186,1.023,187,0.745,188,1.023,189,0.792,190,0.847,191,0.956,192,1.023,193,0.792,194,1.023,195,0.792,196,1.023,197,1.67,198,1.023,199,0.792,200,1.023,201,0.792,202,1.023,203,1.023,275,2.128,276,2.128,281,1.959,282,1.959,284,1.382,290,2.926,305,1.016,317,1.272,320,1.959,323,3.448,331,3.794,344,2.586,345,2.358,348,3.193,349,2.128,365,2.321,370,3.766,376,3.027,406,1.679,421,1.272,424,1.382,425,2.595,426,1.382,427,1.272,428,1.382,429,1.382,430,1.382,434,4.033,441,1.679,443,1.679,444,1.514,445,1.679,448,2.595,453,2.595,454,1.514,480,2.128,481,2.926,489,4.008,490,2.926,495,3.868,496,2.926,527,1.514,539,2.331,545,5.044,552,1.9,554,1.9,555,1.9,561,1.9,562,4.917,563,2.586,564,4.199,565,4.571,566,4.199,567,3.444,568,4.199,569,4.199,570,3.444,571,4.717,572,4.717,573,4.717,574,4.717,575,4.717,576,4.199,577,4.199,578,4.199,579,4.199,580,4.199,581,4.199,582,4.199,583,4.199,584,4.199,585,2.236,586,4.345,587,5.786,588,4.917,589,3.917,590,2.236,591,2.236,592,3.917,593,2.236,594,3.917,595,2.236,596,1.687,597,2.646,598,2.236,599,4.717,600,4.717,601,2.236,602,2.236,603,3.444,604,3.444,605,2.236,606,2.236,607,2.926,608,2.236,609,2.236,610,4.717,611,3.444,612,4.717,613,2.236,614,6.061,615,2.236,616,3.444,617,2.926,618,2.236,619,2.236,620,2.236,621,2.236,622,4.199,623,2.236,624,3.444,625,2.926,626,2.236,627,1.9,628,1.9,629,2.236,630,2.236,631,1.514,632,2.236,633,2.236,634,2.236,635,2.236,636,2.236,637,2.236,638,2.236,639,2.926]],["title/interfaces/PanelLoadStatus.html",[0,0.366,640,2.622]],["body/interfaces/PanelLoadStatus.html",[0,0.627,2,1.47,3,0.389,4,0.389,5,0.347,7,0.57,11,1.471,12,0.523,13,0.931,19,0.733,20,0.024,25,1.877,31,0.389,66,0.02,67,0.02,93,2.279,190,1.698,329,2.77,330,2.77,365,2.77,366,2.56,597,3.241,640,4.492,641,4.234,642,3.373]],["title/interfaces/Rover.html",[0,0.366,23,0.366]],["body/interfaces/Rover.html",[0,0.67,2,0.815,3,0.373,4,0.216,5,0.193,7,0.545,8,1.982,9,1.563,11,1.611,12,0.5,13,0.629,15,2.194,16,0.853,18,1.497,19,0.773,20,0.024,21,0.979,22,1.958,23,0.738,24,0.386,26,1.041,27,1.547,29,0.871,30,1.611,31,0.436,33,0.815,34,1.29,35,0.921,36,0.815,38,1.718,41,1.522,50,1.347,61,0.921,66,0.013,67,0.013,86,1.995,98,1.264,101,2.713,190,1.432,191,1.456,293,1.932,305,1.547,329,1.619,330,2.104,345,1.857,359,2.297,365,2.474,366,1.727,376,2.398,384,2.398,471,2.244,472,2.244,473,1.978,596,1.978,597,2.996,643,1.573,644,2.495,645,2.984,646,2.984,647,2.984,648,2.984,649,2.984,650,2.984,651,3.241,652,3.241,653,3.241,654,3.241,655,2.763,656,2.495,657,2.495,658,3.811,659,1.978,660,1.978,661,2.495,662,1.708,663,1.573,664,1.708,665,1.708,666,1.708,667,1.456,668,1.708,669,1.708,670,1.708]],["title/interfaces/RoverCamera.html",[0,0.366,27,1.03]],["body/interfaces/RoverCamera.html",[0,0.698,2,0.983,3,0.36,4,0.26,5,0.232,7,0.726,8,1.983,9,1.644,11,1.592,12,0.484,13,0.718,15,1.991,16,0.945,18,1.492,19,0.527,20,0.024,21,1.179,22,1.882,23,0.734,24,0.441,26,1.255,27,1.56,29,0.867,30,1.562,31,0.468,33,0.983,34,1.403,35,1.109,36,0.983,38,1.56,41,1.205,50,1.319,61,1.109,66,0.015,67,0.015,86,1.36,98,1.524,101,3.008,190,1.3,191,1.28,293,1.91,305,1.36,329,1.337,330,1.85,345,1.632,359,1.896,365,2.289,366,1.426,376,2.109,384,2.109,471,1.426,472,1.426,473,1.633,596,1.633,597,2.609,643,1.896,644,2.059,645,1.896,646,1.896,647,1.896,648,1.896,649,1.896,650,1.896,651,2.059,652,2.059,653,2.059,654,2.059,655,1.755,656,2.059,657,2.059,658,3.526,659,1.633,660,1.633,661,2.059,662,2.059,663,1.896,664,2.059,665,2.059,666,2.059,667,1.755,668,2.059,669,2.059,670,2.059]],["title/interfaces/RoverListItem.html",[0,0.366,667,1.84]],["body/interfaces/RoverListItem.html",[0,0.696,2,0.974,3,0.358,4,0.258,5,0.23,7,0.602,8,1.979,9,1.639,11,1.558,12,0.48,13,0.713,15,1.981,16,1.133,18,1.506,19,0.602,20,0.024,21,1.169,22,1.879,23,0.738,24,0.438,26,1.243,27,1.351,29,0.864,30,1.558,31,0.466,33,0.974,34,1.397,35,1.099,36,0.974,38,1.552,41,1.197,50,1.38,61,1.099,66,0.015,67,0.015,98,1.51,101,2.993,190,1.294,191,1.272,293,1.979,305,1.351,329,1.324,330,1.838,345,1.622,359,1.878,365,2.28,366,1.413,376,2.095,384,2.095,471,1.413,472,1.413,473,1.618,596,1.618,597,2.599,643,1.878,644,2.04,645,1.878,646,1.878,647,1.878,648,1.878,649,1.878,650,1.878,651,2.04,652,2.04,653,2.04,654,2.04,655,1.739,656,2.04,657,2.04,658,3.512,659,1.618,660,1.618,661,2.04,662,2.04,663,1.878,664,2.04,665,2.831,666,2.831,667,2.413,668,2.04,669,2.04,670,2.04]],["title/components/RoverPanelComponent.html",[131,0.758,199,1.236]],["body/components/RoverPanelComponent.html",[3,0.182,4,0.108,5,0.096,7,0.525,8,1.354,9,0.54,11,1.277,12,0.318,13,0.364,16,0.771,18,0.507,19,0.739,20,0.024,22,1.198,23,0.71,24,0.511,25,1.817,27,0.408,29,0.774,30,1.399,31,0.108,32,0.555,33,1.05,34,0.875,35,1.185,36,1.679,38,1.05,41,0.61,43,1.068,47,1.935,50,1.161,54,0.618,58,1.068,60,1.068,66,0.008,67,0.008,77,0.999,80,1.628,83,2.503,85,0.88,86,0.689,88,1.144,93,1.068,94,2.083,95,4.175,103,1.875,110,0.34,111,0.678,112,0.937,113,0.855,116,0.282,117,0.999,118,2.419,119,0.729,123,0.787,131,1.214,132,0.49,133,0.999,134,1.628,135,0.633,136,0.633,138,1.861,139,1.23,140,1.724,141,0.633,142,2.143,143,1.144,146,2.025,147,1.039,148,1.895,152,2.789,157,0.592,158,0.633,159,0.937,161,0.937,162,2.273,163,1.039,175,2.052,178,0.633,179,1.068,180,1.068,181,0.633,182,1.628,183,0.633,184,0.633,185,0.461,186,0.633,187,0.461,188,0.633,189,0.49,190,1.186,191,0.649,192,0.633,193,0.49,194,0.633,195,0.49,196,0.633,197,0.49,198,0.633,199,1.26,200,0.633,201,0.49,202,0.633,203,0.633,248,3.025,275,1.443,276,1.443,281,1.329,282,1.329,284,0.855,293,1.354,305,0.689,310,5.006,317,0.787,320,1.329,323,2.052,329,1.73,330,1.73,331,2.052,335,3.025,336,1.985,337,2.575,345,0.827,348,1.581,351,3.239,352,1.985,354,1.581,355,1.985,356,1.985,363,1.23,365,2.195,366,1.523,370,3.619,376,1.068,377,1.176,379,1.754,380,0.678,381,0.937,382,1.176,383,1.176,386,1.176,387,1.176,406,1.039,408,1.176,416,3.239,421,1.724,422,1.985,423,2.276,424,2.458,425,2.838,426,1.873,427,1.724,428,1.873,429,1.873,430,1.873,431,1.176,432,1.176,434,3.382,435,2.276,436,3.025,437,1.985,439,1.176,440,1.176,441,1.039,442,1.176,443,1.039,444,1.581,445,1.039,446,0.937,447,1.176,448,1.443,450,1.176,451,0.937,452,1.754,453,1.873,454,2.41,457,0.937,458,1.039,459,1.176,480,1.443,495,1.443,527,1.581,531,1.754,535,1.039,539,2.41,548,1.985,551,4.414,557,1.039,558,1.985,562,3.025,588,4.1,589,2.41,592,2.41,594,2.41,596,1.144,631,2.41,642,4.112,655,1.596,659,2.461,660,2.114,671,5.006,672,1.176,673,3.03,674,2.336,675,3.03,676,3.03,677,2.575,678,3.03,679,3.03,680,3.03,681,3.03,682,3.977,683,3.03,684,3.977,685,3.03,686,3.977,687,3.977,688,3.03,689,3.03,690,3.03,691,2.575,692,3.03,693,3.03,694,3.977,695,3.56,696,3.56,697,2.336,698,3.56,699,3.56,700,1.384,701,1.384,702,1.384,703,3.56,704,1.754,705,1.384,706,2.41,707,2.336,708,1.384,709,1.384,710,2.336,711,1.384,712,1.384,713,1.384,714,1.384,715,2.336,716,1.384,717,1.384,718,1.384,719,1.384,720,1.384,721,1.384,722,1.384,723,1.384,724,1.384,725,1.384,726,1.384,727,1.384,728,1.384,729,1.384,730,1.384,731,3.025,732,1.384,733,1.384,734,2.336,735,1.384,736,1.985,737,1.384,738,1.384,739,1.384,740,1.384,741,1.384,742,1.384,743,1.754,744,1.384,745,0.937,746,1.039,747,0.937,748,1.384,749,1.384,750,1.384,751,5.437,752,2.336,753,1.384,754,1.384,755,1.384,756,1.384,757,1.384,758,1.384,759,6.074,760,1.384,761,1.384,762,1.384,763,1.384,764,1.384,765,1.384,766,1.384,767,1.384,768,1.384,769,1.384,770,1.384,771,1.384,772,1.384,773,1.384,774,1.384,775,1.384,776,1.384,777,1.384,778,1.384,779,1.384,780,1.384,781,1.384,782,1.384,783,1.384,784,1.384,785,1.384,786,1.384,787,1.384,788,1.384,789,1.384,790,3.56,791,1.384,792,1.384,793,1.581,794,1.384,795,1.384,796,1.384,797,1.384,798,1.384,799,1.384,800,1.384,801,1.384,802,1.384,803,1.384,804,1.384,805,1.384,806,1.384,807,2.336,808,4.825,809,5.473,810,3.56,811,3.56,812,3.025,813,2.336,814,2.336,815,2.336,816,1.985,817,2.336,818,2.336,819,2.336,820,2.336,821,3.56,822,3.56,823,2.336,824,1.384,825,1.384,826,1.384,827,1.384,828,1.384,829,1.384,830,1.754,831,1.384,832,2.336,833,2.336,834,1.176,835,1.176,836,1.985,837,1.176,838,1.384,839,1.384,840,1.384,841,1.384,842,2.336,843,1.384,844,2.336,845,1.384,846,1.985,847,1.384,848,1.384,849,2.336]],["title/interfaces/RoverPhoto.html",[0,0.366,384,1.597]],["body/interfaces/RoverPhoto.html",[0,0.691,2,0.94,3,0.349,4,0.249,5,0.222,7,0.59,8,2.054,9,1.634,11,1.574,12,0.469,13,0.696,15,2.363,16,1,18,1.512,19,0.699,20,0.024,21,1.582,22,1.916,23,0.73,24,0.428,26,1.2,27,1.319,29,0.853,30,1.543,31,0.46,33,1.319,34,1.574,35,1.488,36,1.319,38,1.523,41,1.168,50,1.294,61,1.488,66,0.015,67,0.015,98,1.457,101,2.937,190,1.269,191,1.241,293,1.889,305,1.319,329,1.278,330,1.793,345,1.582,359,1.813,365,2.245,366,1.364,376,2.044,384,2.361,471,1.364,472,1.364,473,1.562,596,1.562,597,2.559,643,1.813,644,1.97,645,1.813,646,1.813,647,1.813,648,1.813,649,1.813,650,1.813,651,1.97,652,1.97,653,1.97,654,1.97,655,1.679,656,1.97,657,1.97,658,3.459,659,1.562,660,1.562,661,1.97,662,1.97,663,1.813,664,1.97,665,1.97,666,1.97,667,1.679,668,3.459,669,3.459,670,3.459]],["title/components/RoverPhotosComponent.html",[131,0.758,201,1.236]],["body/components/RoverPhotosComponent.html",[3,0.237,4,0.237,5,0.212,7,0.575,8,1.866,9,1.566,11,1.479,12,0.319,16,1.035,18,0.938,19,0.662,20,0.024,22,1.757,23,0.71,24,0.524,29,0.956,31,0.237,32,2.018,33,1.616,34,1.347,36,1.275,39,2.899,41,1.129,54,1.117,60,1.976,66,0.014,67,0.014,77,1.849,80,2.505,83,2.18,85,1.894,86,1.484,94,1.733,110,0.747,112,2.057,116,0.619,117,2.344,118,1.6,119,1.6,131,1.344,132,1.075,133,1.849,134,1.389,135,1.389,136,1.389,138,2.221,141,1.389,142,2.649,143,2.117,148,1.675,152,2.685,162,1.6,178,1.389,179,1.976,180,1.976,181,1.389,182,2.505,183,1.389,184,1.389,185,1.012,186,1.389,187,1.012,188,1.389,189,1.075,190,1.062,191,1.2,192,1.389,193,1.075,194,1.389,195,1.075,196,1.389,197,1.075,198,1.389,199,1.075,200,1.389,201,1.939,202,1.389,203,1.389,244,4.517,259,1.728,275,2.671,276,2.671,284,1.877,293,1.826,305,1.775,312,4.517,317,1.728,320,2.458,338,2.582,345,1.939,369,4.114,416,3.245,421,2.458,434,1.877,448,1.877,451,2.926,452,2.281,453,1.877,455,4.274,480,2.671,495,3.108,527,2.057,557,2.281,639,2.582,671,4.517,743,4.114,746,2.281,751,3.672,816,3.672,835,2.582,836,2.582,837,2.582,846,3.672,850,2.582,851,5.03,852,4.321,853,4.321,854,4.321,855,4.321,856,3.038,857,4.321,858,3.038,859,5.479,860,4.321,861,3.038,862,4.321,863,4.321,864,4.321,865,4.321,866,4.321,867,4.321,868,3.672,869,3.038]],["title/interfaces/RoverPhotosRequest.html",[0,0.366,98,1.597]],["body/interfaces/RoverPhotosRequest.html",[0,0.688,2,0.976,3,0.358,4,0.258,5,0.231,7,0.602,8,1.98,9,1.627,11,1.559,12,0.481,13,0.714,15,1.984,16,0.942,18,1.506,19,0.525,20,0.024,21,1.171,22,1.88,23,0.736,24,0.439,26,1.246,27,1.354,29,0.936,30,1.559,31,0.467,33,0.976,34,1.589,35,1.102,36,0.976,38,1.554,41,1.199,50,1.381,61,1.102,66,0.015,67,0.015,86,1.354,98,2.098,101,3.517,190,1.295,191,1.274,293,1.87,305,1.354,329,1.327,330,1.841,345,1.624,359,1.882,365,2.282,366,1.416,376,2.098,384,2.098,471,1.416,472,1.416,473,1.621,596,1.621,597,2.601,643,1.882,644,2.045,645,1.882,646,1.882,647,1.882,648,1.882,649,1.882,650,1.882,651,2.045,652,2.045,653,2.045,654,2.045,655,1.743,656,2.045,657,2.045,658,3.516,659,1.621,660,1.621,661,2.045,662,2.836,663,2.61,664,2.836,665,2.045,666,2.045,667,1.743,668,2.045,669,2.045,670,2.045]],["title/modules/SharedModule.html",[204,1.315,303,1.987]],["body/modules/SharedModule.html",[3,0.305,4,0.305,5,0.272,7,0.446,20,0.024,24,0.677,31,0.305,66,0.017,67,0.017,110,0.959,116,0.795,189,2.46,191,1.69,193,2.46,195,2.46,197,2.46,204,1.931,206,1.669,207,2.513,213,3.169,214,2.055,215,2.411,217,3.472,218,2.055,220,2.702,254,3.315,273,3.472,303,4.026,475,3.472,476,2.929,497,2.929,498,2.641,499,3.315,540,3.315,628,3.315,870,3.315,871,3.315,872,3.315,873,3.901,874,5.128,875,5.128,876,5.729,877,5.729,878,5.729,879,3.315,880,5.729,881,3.901,882,5.729,883,3.901,884,5.729,885,3.901,886,5.729,887,3.901,888,5.729,889,3.901,890,3.901,891,3.901,892,5.729,893,3.901,894,5.729,895,3.901,896,5.729,897,3.901,898,5.729,899,5.128,900,3.901,901,5.729]],["title/injectables/StoreEffects.html",[68,2.158,240,2.364]],["body/injectables/StoreEffects.html",[3,0.206,4,0.206,5,0.184,7,0.446,9,1.185,10,2.056,12,0.276,13,0.607,16,0.471,18,1.113,19,0.75,20,0.024,23,0.663,24,0.627,29,0.564,30,1.408,31,0.206,34,0.958,50,0.901,52,1.86,54,1.288,64,1.86,66,0.013,67,0.013,68,2.408,69,4.206,70,1.978,72,3.469,73,3.312,74,2.926,75,2.408,78,3.469,80,2.344,83,1.93,85,0.992,86,0.777,93,2.619,98,2.121,102,3.482,103,2.443,106,2.408,110,0.648,111,1.291,112,1.784,113,1.628,116,0.537,117,1.984,118,2.443,119,2.443,120,2.806,123,3.595,138,1.706,148,2.235,157,1.127,158,1.205,160,1.784,162,3.453,234,1.978,237,1.978,240,2.638,329,1.563,345,1.379,354,2.638,471,2.83,472,2.83,586,2.926,607,3.312,677,3.312,745,1.784,746,1.978,793,2.638,902,2.239,903,3.897,904,3.897,905,3.848,906,4.638,907,2.634,908,2.634,909,3.897,910,5.925,911,5.726,912,3.897,913,4.638,914,3.897,915,3.897,916,3.897,917,3.897,918,4.3,919,6.083,920,3.897,921,3.897,922,3.897,923,5.125,924,3.897,925,3.897,926,5.125,927,3.312,928,5.125,929,5.125,930,5.125,931,5.125,932,5.125,933,5.125,934,4.355,935,3.312,936,3.897,937,3.897,938,2.634,939,5.726,940,3.897,941,3.897,942,3.897,943,3.312,944,3.897,945,5.125,946,3.312,947,2.634,948,3.897,949,4.638,950,3.312,951,3.897,952,2.634,953,3.897,954,3.897,955,2.634,956,2.634,957,2.634,958,2.634,959,2.634,960,2.634,961,2.239,962,2.634,963,2.634,964,2.634,965,2.239]],["title/interfaces/StoreState.html",[0,0.366,158,1.597]],["body/interfaces/StoreState.html",[0,0.59,2,1.11,3,0.294,4,0.294,5,0.262,7,0.43,12,0.395,13,0.779,18,1.501,19,0.779,20,0.024,23,0.674,24,0.36,27,1.77,28,1.998,31,0.391,41,1.309,50,1.539,54,1.357,66,0.016,67,0.016,113,2.325,120,1.843,138,1.667,148,1.874,151,3.81,154,3.76,158,2.573,173,4.691,175,4.229,190,1.674,278,3.76,293,1.477,305,1.77,306,3.76,326,4.691,329,2.63,330,2.704,363,3.16,365,2.671,366,2.142,471,2.673,472,2.673,473,2.453,597,3.161,706,3.39,793,4.062,966,2.825,967,4.691,968,5.309,969,5.309,970,5.007,971,3.197,972,2.825]],["title/classes/Utils.html",[116,0.712,747,2.364]],["body/classes/Utils.html",[3,0.35,4,0.35,5,0.313,7,0.641,12,0.47,16,1.18,18,1.392,19,0.513,20,0.024,23,0.706,24,0.536,31,0.35,54,1.419,65,2.564,66,0.018,67,0.018,77,2.399,83,1.688,85,1.688,86,1.322,94,2.571,103,2.953,111,2.196,116,1.247,117,2.618,123,2.55,138,1.867,142,2.77,148,2.37,157,1.918,293,1.891,340,4.764,563,4.21,745,4.142,747,4.34,973,4.482,974,3.809,975,6.118,976,5.606,977,5.606,978,4.482,979,5.606,980,5.606,981,5.606,982,5.606,983,4.482,984,4.482]],["title/coverage.html",[985,4.047]],["body/coverage.html",[0,0.691,1,1.126,5,0.172,6,2.839,19,0.282,20,0.024,23,0.258,27,0.726,30,0.605,32,0.988,52,0.988,57,1.126,59,1.126,64,0.988,66,0.012,67,0.012,68,2.29,69,1.667,71,2.092,78,1.667,98,1.126,116,0.502,131,1.325,132,0.871,137,2.092,158,1.126,185,0.82,187,0.82,189,0.871,191,1.376,193,0.871,195,0.871,197,0.871,199,0.871,201,0.871,238,2.092,240,1.667,274,2.092,294,1.849,310,1.849,312,1.849,318,2.092,349,1.521,380,1.206,384,1.126,446,4.97,469,2.092,474,2.782,475,2.508,476,1.849,477,2.092,498,1.667,506,2.092,538,2.092,561,2.092,640,1.849,641,2.092,643,3.023,667,1.297,671,2.782,672,2.092,747,1.667,850,2.092,902,2.092,905,1.849,966,2.782,967,1.849,972,1.849,974,2.092,985,2.092,986,2.462,987,2.462,988,5.584,989,2.508,990,7.224,991,2.092,992,7.294,993,2.092,994,4.454,995,4.454,996,4.454,997,3.705,998,4.956,999,2.462,1000,2.462,1001,2.462,1002,2.462,1003,2.462,1004,5.047,1005,2.092,1006,2.092,1007,2.092,1008,2.092,1009,2.092,1010,2.092,1011,2.092,1012,2.092,1013,2.092,1014,2.092,1015,2.092,1016,2.092,1017,2.092,1018,2.092,1019,2.092,1020,5.796,1021,6.848,1022,2.462,1023,2.462,1024,2.462,1025,2.462,1026,2.462,1027,2.462,1028,2.462,1029,2.462,1030,2.462,1031,2.462,1032,2.462,1033,2.462,1034,2.462,1035,2.462,1036,2.462,1037,2.462,1038,2.462,1039,2.462,1040,2.462,1041,2.092,1042,6.018,1043,2.462,1044,2.462,1045,2.092,1046,2.092,1047,2.092,1048,2.092,1049,2.092,1050,2.092,1051,2.092,1052,2.092,1053,2.092,1054,2.092,1055,2.092,1056,2.092,1057,2.092,1058,2.092,1059,2.092,1060,2.092,1061,2.092,1062,2.092,1063,2.092,1064,2.092,1065,2.092,1066,2.092,1067,2.092,1068,2.092,1069,2.092,1070,2.092,1071,2.092,1072,2.092,1073,2.092,1074,2.092,1075,2.092,1076,2.092,1077,2.092,1078,2.092,1079,2.462,1080,2.092,1081,2.462,1082,2.462]],["title/dependencies.html",[207,2.058,1083,2.48]],["body/dependencies.html",[20,0.024,66,0.02,67,0.02,110,1.256,111,2.503,148,1.701,157,2.598,207,2.503,222,5.159,223,4.11,232,4.34,234,3.835,237,3.835,259,2.906,627,4.34,879,4.34,1084,5.107,1085,7.072,1086,5.107,1087,6.071,1088,5.107,1089,5.107,1090,5.107,1091,6.703,1092,5.107,1093,5.107,1094,5.107,1095,5.107,1096,5.107]],["title/miscellaneous/enumerations.html",[1097,1.66,1098,3.569]],["body/miscellaneous/enumerations.html",[9,1.123,12,0.377,20,0.024,23,0.749,25,2.072,28,1.197,29,1.043,30,1.448,34,1.194,40,2.38,41,1.27,44,2.38,46,2.38,47,1.443,48,2.38,49,2.38,54,0.99,66,0.016,67,0.016,75,4.362,93,3.015,103,3.836,148,1.197,151,2.435,162,2.559,190,1.353,214,2.898,265,2.046,283,3.056,287,5.3,293,1.738,345,2.178,471,1.539,472,1.539,589,2.435,592,2.435,594,2.435,617,3.056,642,3.289,645,2.046,646,2.046,647,2.046,648,2.046,649,2.046,650,2.046,655,1.895,659,1.762,660,1.762,704,2.7,706,2.435,868,4.675,918,2.7,965,4.128,989,2.435,1004,2.7,1097,2.046,1098,3.056,1099,3.056,1100,3.648,1101,4.858,1102,3.596,1103,3.596,1104,3.596,1105,4.128,1106,3.596,1107,3.596,1108,3.596,1109,3.596,1110,6.153,1111,3.596,1112,3.596,1113,3.596,1114,3.596,1115,3.596,1116,3.596,1117,3.596,1118,3.596,1119,3.596,1120,3.596,1121,3.596,1122,3.596,1123,3.596,1124,3.596,1125,3.596,1126,3.596,1127,3.596,1128,3.596,1129,3.596,1130,3.596,1131,3.596,1132,3.596]],["title/index.html",[12,0.306,1133,2.919,1134,2.919]],["body/index.html",[10,2.002,11,1.472,20,0.02,28,1.994,29,0.867,61,1.994,66,0.02,67,0.02,75,4.111,88,2.446,93,2.283,100,4.242,106,3.085,207,2.446,223,3.379,287,4.497,288,5.871,292,4.242,293,1.472,294,4.497,344,4.497,345,1.767,539,3.379,743,3.748,812,4.242,830,3.748,1135,4.991,1136,4.991,1137,4.991,1138,4.991,1139,5.988,1140,6.653,1141,4.991,1142,6.415,1143,4.991,1144,4.991,1145,4.991,1146,4.991,1147,4.991,1148,4.991,1149,5.988,1150,4.991,1151,4.991,1152,4.991,1153,5.988,1154,5.089,1155,4.991,1156,4.991,1157,4.991]],["title/modules.html",[206,2.038]],["body/modules.html",[20,0.02,66,0.02,67,0.02,205,3.613,206,2.283,212,3.298,223,4.603,289,6.013,296,4.954,298,3.613,302,3.298,303,3.036,460,3.613,464,3.298,1158,6.799,1159,6.799,1160,6.598]],["title/overview.html",[1161,4.047]],["body/overview.html",[2,1.292,20,0.024,66,0.018,67,0.018,70,3.288,116,0.892,132,2.405,133,1.874,185,2.015,187,2.015,189,2.405,193,2.405,195,2.405,197,2.405,199,2.143,201,2.143,205,4.6,206,1.874,207,2.707,208,3.722,209,3.722,210,3.722,211,3.722,212,3.741,213,3.414,214,2.307,215,2.706,258,2.307,298,4.783,299,3.722,300,3.722,301,3.722,302,3.741,303,4.076,460,4.653,461,3.722,462,3.722,463,3.722,464,3.741,631,2.965,870,3.722,871,3.722,872,3.722,1161,3.722,1162,4.379,1163,5.525,1164,4.379,1165,4.379]],["title/properties.html",[13,0.654,1083,2.48]],["body/properties.html",[13,0.878,20,0.022,66,0.021,67,0.021,1154,4.795,1166,5.642]],["title/routes.html",[258,2.509]],["body/routes.html",[20,0.021,66,0.021,67,0.021,258,2.99]],["title/miscellaneous/typealiases.html",[1097,1.66,1167,4.199]],["body/miscellaneous/typealiases.html",[9,1.487,12,0.527,19,0.575,20,0.024,23,0.527,25,2.423,41,1.314,66,0.02,67,0.02,989,3.403,1097,2.86,1100,4.515,1168,5.027,1169,5.027,1170,5.027,1171,5.027,1172,5.027,1173,5.027,1174,5.027,1175,5.027,1176,5.027,1177,5.027,1178,5.027,1179,5.027,1180,5.027,1181,5.027,1182,5.027,1183,5.027,1184,5.027,1185,5.027,1186,5.027,1187,5.027,1188,5.027,1189,5.027,1190,5.027,1191,5.027,1192,5.027,1193,5.027,1194,5.027,1195,5.027]],["title/miscellaneous/variables.html",[1097,1.66,1196,3.569]],["body/miscellaneous/variables.html",[8,1.249,9,0.9,11,1.428,12,0.238,18,0.846,19,0.337,20,0.024,22,1.175,23,0.73,25,1.111,28,1.158,29,0.742,30,1.297,33,1.026,34,0.855,35,0.444,36,0.871,38,0.871,41,0.592,43,0.61,47,1.184,50,1.219,54,1.239,58,0.61,66,0.007,67,0.007,78,1.534,85,0.503,92,3.178,93,1.036,94,2.643,102,5.198,103,3.681,106,0.825,107,2.611,120,3.115,123,3,138,0.754,142,0.535,148,0.983,151,1.998,154,1.002,158,3.133,160,0.904,173,2.216,175,1.998,190,1.217,214,0.703,265,1.289,278,1.002,293,1.46,305,0.394,306,1.002,315,1.002,323,2.866,326,1.002,329,1.562,330,1.985,331,1.534,345,1.867,348,1.534,349,2.616,351,1.002,354,0.904,363,0.703,365,1.562,366,0.969,369,2.216,370,1.679,376,1.036,380,0.654,384,0.61,427,0.759,434,1.4,471,1.931,472,1.931,550,2.955,563,2.216,565,1.925,586,2.216,589,0.904,592,1.534,594,1.534,596,2.211,597,2.064,625,1.134,631,2.637,642,3.57,659,1.704,660,0.654,663,2.408,691,1.925,704,1.002,706,1.534,731,1.925,736,1.134,745,4.35,793,2.354,830,1.701,834,1.134,905,1.701,918,4.149,927,1.134,934,1.134,935,2.508,943,1.134,946,1.134,950,1.134,961,3.31,966,1.002,967,2.216,968,1.134,969,1.134,971,5.841,972,2.216,989,0.904,991,1.925,993,1.925,1004,1.002,1005,1.925,1006,1.925,1007,1.925,1008,1.925,1009,1.925,1010,1.925,1011,1.925,1012,1.925,1013,1.925,1014,1.925,1015,1.925,1016,1.925,1017,1.925,1018,1.925,1019,1.925,1020,1.134,1041,1.925,1042,1.134,1045,1.925,1046,2.508,1047,1.925,1048,1.925,1049,1.925,1050,1.925,1051,1.925,1052,1.925,1053,1.925,1054,1.925,1055,1.925,1056,1.925,1057,1.925,1058,1.925,1059,1.925,1060,1.925,1061,1.925,1062,1.925,1063,1.925,1064,1.925,1065,1.925,1066,1.925,1067,1.925,1068,1.925,1069,1.925,1070,1.925,1071,1.925,1072,1.925,1073,1.925,1074,1.925,1075,1.925,1076,1.925,1077,1.925,1078,5.58,1080,1.134,1097,0.759,1099,5.063,1100,1.701,1105,1.925,1196,1.134,1197,1.335,1198,6.59,1199,1.335,1200,1.335,1201,1.335,1202,1.335,1203,1.335,1204,1.335,1205,1.335,1206,1.335,1207,1.335,1208,1.335,1209,1.335,1210,1.335,1211,1.335,1212,1.335,1213,1.335,1214,1.335,1215,1.335,1216,1.335,1217,1.335,1218,1.335,1219,1.335,1220,1.335,1221,1.335,1222,1.335,1223,1.335,1224,1.335,1225,1.335,1226,1.335,1227,1.335,1228,1.335,1229,1.335,1230,1.335,1231,1.335,1232,1.335,1233,1.335,1234,1.335,1235,1.335,1236,1.335,1237,1.335,1238,1.335,1239,1.335,1240,5.958,1241,1.335,1242,5.81,1243,1.335,1244,1.335,1245,3.895,1246,1.335,1247,1.335,1248,1.335,1249,1.335,1250,1.335,1251,1.335,1252,2.265,1253,3.478,1254,1.335,1255,1.335,1256,2.265,1257,2.265,1258,1.335,1259,1.335,1260,1.335,1261,1.335,1262,1.335,1263,5.887,1264,6.566,1265,5.63,1266,1.335,1267,1.335,1268,3.478,1269,1.335,1270,1.335,1271,2.265,1272,1.335,1273,1.335,1274,2.951,1275,1.335,1276,2.951,1277,1.335,1278,1.335,1279,1.335,1280,1.335,1281,1.335,1282,1.335,1283,1.335,1284,3.895,1285,2.951,1286,2.951,1287,4.748,1288,4.748,1289,2.951,1290,2.265,1291,2.951,1292,2.951,1293,4.748,1294,1.335,1295,1.335,1296,1.335,1297,2.265,1298,1.335,1299,1.335,1300,1.335,1301,1.335,1302,1.335,1303,1.335,1304,1.335,1305,1.335,1306,1.335,1307,1.335,1308,1.335,1309,1.335,1310,1.335,1311,1.335,1312,1.335,1313,1.335,1314,2.265,1315,1.335,1316,1.335,1317,1.335,1318,1.335,1319,1.335,1320,1.335,1321,1.335,1322,1.335,1323,1.335,1324,1.335,1325,1.335,1326,1.335,1327,1.335,1328,1.335,1329,1.335,1330,1.335,1331,1.335,1332,1.335,1333,1.335,1334,1.335,1335,1.335,1336,1.335,1337,1.335,1338,1.335,1339,1.335,1340,2.265,1341,1.335,1342,1.335,1343,1.335,1344,1.335,1345,1.335,1346,1.335,1347,1.335,1348,1.335,1349,1.335,1350,1.335]]],"invertedIndex":[["",{"_index":20,"title":{},"body":{"interfaces/APIPhotoCameraResponse.html":{},"interfaces/APIPhotoDataReponse.html":{},"interfaces/APIPhotoResponse.html":{},"interfaces/APIPhotoRoverResponse.html":{},"interfaces/ApiManifest.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DetailsComponent.html":{},"modules/DetailsModule.html":{},"modules/DetailsRoutingModule.html":{},"interfaces/ErrorDialogData.html":{},"components/ErrorDialogLauncherComponent.html":{},"components/ErrorDialogPopupComponent.html":{},"components/LoaderComponent.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestPhoto.html":{},"components/PaginatorComponent.html":{},"interfaces/PanelLoadStatus.html":{},"interfaces/Rover.html":{},"interfaces/RoverCamera.html":{},"interfaces/RoverListItem.html":{},"components/RoverPanelComponent.html":{},"interfaces/RoverPhoto.html":{},"components/RoverPhotosComponent.html":{},"interfaces/RoverPhotosRequest.html":{},"modules/SharedModule.html":{},"injectables/StoreEffects.html":{},"interfaces/StoreState.html":{},"classes/Utils.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":454,"title":{},"body":{"components/DetailsComponent.html":{},"components/LoaderComponent.html":{},"components/PaginatorComponent.html":{},"components/RoverPanelComponent.html":{}}}],["0.0.0",{"_index":1166,"title":{},"body":{"properties.html":{}}}],["0.11.4",{"_index":1096,"title":{},"body":{"dependencies.html":{}}}],["000",{"_index":827,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["1",{"_index":631,"title":{},"body":{"components/PaginatorComponent.html":{},"components/RoverPanelComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1.5rem",{"_index":638,"title":{},"body":{"components/PaginatorComponent.html":{}}}],["1/1",{"_index":992,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":446,"title":{},"body":{"components/DetailsComponent.html":{},"components/ErrorDialogPopupComponent.html":{},"components/RoverPanelComponent.html":{},"coverage.html":{}}}],["11/11",{"_index":1079,"title":{},"body":{"coverage.html":{}}}],["13.1.0",{"_index":1091,"title":{},"body":{"dependencies.html":{}}}],["13.3.0",{"_index":1085,"title":{},"body":{"dependencies.html":{}}}],["13.3.5",{"_index":1087,"title":{},"body":{"dependencies.html":{}}}],["15",{"_index":1165,"title":{},"body":{"overview.html":{}}}],["16/16",{"_index":1002,"title":{},"body":{"coverage.html":{}}}],["17/17",{"_index":1000,"title":{},"body":{"coverage.html":{}}}],["1rem",{"_index":423,"title":{},"body":{"components/DetailsComponent.html":{},"components/ErrorDialogPopupComponent.html":{},"components/RoverPanelComponent.html":{}}}],["2",{"_index":1164,"title":{},"body":{"overview.html":{}}}],["2.3.0",{"_index":1094,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":995,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":438,"title":{},"body":{"components/DetailsComponent.html":{}}}],["21/21",{"_index":1003,"title":{},"body":{"coverage.html":{}}}],["25",{"_index":248,"title":{},"body":{"modules/AppModule.html":{},"components/RoverPanelComponent.html":{}}}],["25rem",{"_index":422,"title":{},"body":{"components/DetailsComponent.html":{},"components/RoverPanelComponent.html":{}}}],["2rem",{"_index":558,"title":{},"body":{"components/LoaderComponent.html":{},"components/RoverPanelComponent.html":{}}}],["3/3",{"_index":994,"title":{},"body":{"coverage.html":{}}}],["35/35",{"_index":1001,"title":{},"body":{"coverage.html":{}}}],["35rem",{"_index":845,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["3f51b5",{"_index":560,"title":{},"body":{"components/LoaderComponent.html":{}}}],["3rem",{"_index":556,"title":{},"body":{"components/LoaderComponent.html":{}}}],["4/4",{"_index":988,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":1262,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5/5",{"_index":996,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":834,"title":{},"body":{"components/RoverPanelComponent.html":{},"miscellaneous/variables.html":{}}}],["500",{"_index":536,"title":{},"body":{"components/ErrorDialogPopupComponent.html":{}}}],["5rem",{"_index":448,"title":{},"body":{"components/DetailsComponent.html":{},"components/ErrorDialogPopupComponent.html":{},"components/PaginatorComponent.html":{},"components/RoverPanelComponent.html":{},"components/RoverPhotosComponent.html":{}}}],["6/6",{"_index":998,"title":{},"body":{"coverage.html":{}}}],["600px",{"_index":445,"title":{},"body":{"components/DetailsComponent.html":{},"components/PaginatorComponent.html":{},"components/RoverPanelComponent.html":{}}}],["7",{"_index":1162,"title":{},"body":{"overview.html":{}}}],["7.5.0",{"_index":1092,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":997,"title":{},"body":{"coverage.html":{}}}],["75rem",{"_index":846,"title":{},"body":{"components/RoverPanelComponent.html":{},"components/RoverPhotosComponent.html":{}}}],["9",{"_index":1163,"title":{},"body":{"overview.html":{}}}],["9/9",{"_index":999,"title":{},"body":{"coverage.html":{}}}],["__avatar",{"_index":831,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["__back",{"_index":433,"title":{},"body":{"components/DetailsComponent.html":{}}}],["__bar",{"_index":420,"title":{},"body":{"components/DetailsComponent.html":{}}}],["__camera",{"_index":456,"title":{},"body":{"components/DetailsComponent.html":{}}}],["__icon",{"_index":842,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["__image",{"_index":528,"title":{},"body":{"components/ErrorDialogPopupComponent.html":{}}}],["__item",{"_index":447,"title":{},"body":{"components/DetailsComponent.html":{},"components/RoverPanelComponent.html":{}}}],["__list",{"_index":847,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["__value",{"_index":844,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["__wrapper",{"_index":435,"title":{},"body":{"components/DetailsComponent.html":{},"components/ErrorDialogPopupComponent.html":{},"components/RoverPanelComponent.html":{}}}],["_collapsedpanel",{"_index":1022,"title":{},"body":{"coverage.html":{}}}],["_collapsedpanel({...state",{"_index":1227,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_expandpanel",{"_index":1023,"title":{},"body":{"coverage.html":{}}}],["_expandpanel({...state",{"_index":1225,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_gotofirstphotospage",{"_index":1024,"title":{},"body":{"coverage.html":{}}}],["_gotofirstphotospage({...state",{"_index":1215,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_gotolastphotospage",{"_index":1025,"title":{},"body":{"coverage.html":{}}}],["_gotolastphotospage({...state",{"_index":1221,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_gotonextphotospage",{"_index":1026,"title":{},"body":{"coverage.html":{}}}],["_gotonextphotospage({...state",{"_index":1219,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_gotophotospage",{"_index":1027,"title":{},"body":{"coverage.html":{}}}],["_gotophotospage({...state",{"_index":1223,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_gotopreviousphotospage",{"_index":1028,"title":{},"body":{"coverage.html":{}}}],["_gotopreviousphotospage({...state",{"_index":1217,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_loadcamphotos",{"_index":1029,"title":{},"body":{"coverage.html":{}}}],["_loadcamphotos({...state",{"_index":1233,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_loadcamphotoserror",{"_index":1030,"title":{},"body":{"coverage.html":{}}}],["_loadcamphotoserror({...state",{"_index":1237,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_loadcamphotossuccess",{"_index":1031,"title":{},"body":{"coverage.html":{}}}],["_loadcamphotossuccess({...state",{"_index":1235,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_loadrovermanifest",{"_index":1032,"title":{},"body":{"coverage.html":{}}}],["_loadrovermanifest({...state",{"_index":1205,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_loadrovermanifesterror",{"_index":1033,"title":{},"body":{"coverage.html":{}}}],["_loadrovermanifesterror({...state",{"_index":1209,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_loadrovermanifestsuccess",{"_index":1034,"title":{},"body":{"coverage.html":{}}}],["_loadrovermanifestsuccess({...state",{"_index":1207,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_reseterrorrover",{"_index":1035,"title":{},"body":{"coverage.html":{}}}],["_reseterrorrover({...state",{"_index":1213,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_resetloadstatus",{"_index":1036,"title":{},"body":{"coverage.html":{}}}],["_resetloadstatus({...state",{"_index":1231,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_resetrovermanifestload",{"_index":1037,"title":{},"body":{"coverage.html":{}}}],["_resetrovermanifestload({...state",{"_index":1211,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_selectedtabchanged",{"_index":1038,"title":{},"body":{"coverage.html":{}}}],["_selectedtabchanged({...state",{"_index":1229,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_setinitialdata",{"_index":1039,"title":{},"body":{"coverage.html":{}}}],["_setinitialdata({...state",{"_index":1203,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_storereducer",{"_index":1041,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["_updatecurrentphotospage",{"_index":1040,"title":{},"body":{"coverage.html":{}}}],["accessors",{"_index":336,"title":{},"body":{"components/DetailsComponent.html":{},"components/RoverPanelComponent.html":{}}}],["according",{"_index":563,"title":{},"body":{"components/PaginatorComponent.html":{},"classes/Utils.html":{},"miscellaneous/variables.html":{}}}],["action",{"_index":370,"title":{},"body":{"components/DetailsComponent.html":{},"components/ErrorDialogLauncherComponent.html":{},"components/LoaderComponent.html":{},"components/PaginatorComponent.html":{},"components/RoverPanelComponent.html":{},"miscellaneous/variables.html":{}}}],["action.rover",{"_index":945,"title":{},"body":{"injectables/StoreEffects.html":{}}}],["actionfirst",{"_index":576,"title":{},"body":{"components/PaginatorComponent.html":{}}}],["actionlast",{"_index":577,"title":{},"body":{"components/PaginatorComponent.html":{}}}],["actionnext",{"_index":578,"title":{},"body":{"components/PaginatorComponent.html":{}}}],["actionprevious",{"_index":579,"title":{},"body":{"components/PaginatorComponent.html":{}}}],["actions",{"_index":162,"title":{},"body":{"components/AppComponent.html":{},"components/DetailsComponent.html":{},"components/ErrorDialogPopupComponent.html":{},"components/RoverPanelComponent.html":{},"components/RoverPhotosComponent.html":{},"injectables/StoreEffects.html":{},"miscellaneous/enumerations.html":{}}}],["actions.collapsed_panel",{"_index":1241,"title":{},"body":{"miscellaneous/variables.html":{}}}],["actions.expanded_panel",{"_index":1243,"title":{},"body":{"miscellaneous/variables.html":{}}}],["actions.go_to_first_photos_page",{"_index":1244,"title":{},"body":{"miscellaneous/variables.html":{}}}],["actions.go_to_last_photos_page",{"_index":1246,"title":{},"body":{"miscellaneous/variables.html":{}}}],["actions.go_to_next_photos_page",{"_index":1247,"title":{},"body":{"miscellaneous/variables.html":{}}}],["actions.go_to_photos_page",{"_index":1248,"title":{},"body":{"miscellaneous/variables.html":{}}}],["actions.go_to_previous_photos_page",{"_index":1250,"title":{},"body":{"miscellaneous/variables.html":{}}}],["actions.load_cam_photos",{"_index":1251,"title":{},"body":{"miscellaneous/variables.html":{}}}],["actions.load_cam_photos_error",{"_index":934,"title":{},"body":{"injectables/StoreEffects.html":{},"miscellaneous/variables.html":{}}}],["actions.load_cam_photos_success",{"_index":927,"title":{},"body":{"injectables/StoreEffects.html":{},"miscellaneous/variables.html":{}}}],["actions.load_rover_manifest",{"_index":1254,"title":{},"body":{"miscellaneous/variables.html":{}}}],["actions.load_rover_manifest_error",{"_index":946,"title":{},"body":{"injectables/StoreEffects.html":{},"miscellaneous/variables.html":{}}}],["actions.load_rover_manifest_success",{"_index":943,"title":{},"body":{"injectables/StoreEffects.html":{},"miscellaneous/variables.html":{}}}],["actions.reset_error_rover",{"_index":1255,"title":{},"body":{"miscellaneous/variables.html":{}}}],["actions.reset_load_status",{"_index":950,"title":{},"body":{"injectables/StoreEffects.html":{},"miscellaneous/variables.html":{}}}],["actions.reset_rover_manifest_load",{"_index":1258,"title":{},"body":{"miscellaneous/variables.html":{}}}],["actions.selected_tab_changed",{"_index":1259,"title":{},"body":{"miscellaneous/variables.html":{}}}],["actions.set_initial_data",{"_index":1260,"title":{},"body":{"miscellaneous/variables.html":{}}}],["active",{"_index":1194,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["actual_component",{"_index":203,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DetailsComponent.html":{},"components/ErrorDialogLauncherComponent.html":{},"components/ErrorDialogPopupComponent.html":{},"components/LoaderComponent.html":{},"components/PaginatorComponent.html":{},"components/RoverPanelComponent.html":{},"components/RoverPhotosComponent.html":{}}}],["aftercollapse",{"_index":695,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["afterexpand",{"_index":696,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["ajax",{"_index":164,"title":{},"body":{"components/AppComponent.html":{}}}],["ajax.getjson('assets/info/cameras.list.json",{"_index":170,"title":{},"body":{"components/AppComponent.html":{}}}],["ajax.getjson('assets/info/rovers.list.json",{"_index":171,"title":{},"body":{"components/AppComponent.html":{}}}],["alert",{"_index":525,"title":{},"body":{"components/ErrorDialogPopupComponent.html":{}}}],["aliases",{"_index":1168,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":426,"title":{},"body":{"components/DetailsComponent.html":{},"components/ErrorDialogPopupComponent.html":{},"components/LoaderComponent.html":{},"components/PaginatorComponent.html":{},"components/RoverPanelComponent.html":{}}}],["angular",{"_index":88,"title":{},"body":{"injectables/ApiService.html":{},"components/DashboardComponent.html":{},"components/DetailsComponent.html":{},"components/ErrorDialogLauncherComponent.html":{},"components/LoaderComponent.html":{},"components/PaginatorComponent.html":{},"components/RoverPanelComponent.html":{},"index.html":{}}}],["angular/animations",{"_index":1084,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1086,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":879,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":109,"title":{},"body":{"injectables/ApiService.html":{},"modules/AppModule.html":{}}}],["angular/compiler",{"_index":1088,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":110,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DetailsComponent.html":{},"modules/DetailsModule.html":{},"modules/DetailsRoutingModule.html":{},"components/ErrorDialogLauncherComponent.html":{},"components/ErrorDialogPopupComponent.html":{},"components/LoaderComponent.html":{},"components/PaginatorComponent.html":{},"components/RoverPanelComponent.html":{},"components/RoverPhotosComponent.html":{},"modules/SharedModule.html":{},"injectables/StoreEffects.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":627,"title":{},"body":{"components/PaginatorComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1089,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":881,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/card",{"_index":893,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/dialog",{"_index":497,"title":{},"body":{"components/ErrorDialogLauncherComponent.html":{},"components/ErrorDialogPopupComponent.html":{},"modules/SharedModule.html":{}}}],["angular/material/divider",{"_index":895,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/expansion",{"_index":883,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/icon",{"_index":885,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/list",{"_index":897,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/progress",{"_index":887,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/select",{"_index":628,"title":{},"body":{"components/PaginatorComponent.html":{},"modules/SharedModule.html":{}}}],["angular/material/tabs",{"_index":889,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/platform",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":259,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DetailsComponent.html":{},"modules/DetailsRoutingModule.html":{},"components/RoverPhotosComponent.html":{},"dependencies.html":{}}}],["apge",{"_index":1122,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["api",{"_index":10,"title":{},"body":{"interfaces/APIPhotoCameraResponse.html":{},"interfaces/APIPhotoDataReponse.html":{},"interfaces/APIPhotoResponse.html":{},"interfaces/APIPhotoRoverResponse.html":{},"interfaces/ApiManifest.html":{},"injectables/ApiService.html":{},"components/DashboardComponent.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestPhoto.html":{},"injectables/StoreEffects.html":{},"index.html":{}}}],["apikey",{"_index":76,"title":{},"body":{"injectables/ApiService.html":{}}}],["apimanifest",{"_index":52,"title":{"interfaces/ApiManifest.html":{}},"body":{"interfaces/APIPhotoCameraResponse.html":{},"interfaces/APIPhotoDataReponse.html":{},"interfaces/APIPhotoResponse.html":{},"interfaces/APIPhotoRoverResponse.html":{},"interfaces/ApiManifest.html":{},"injectables/ApiService.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestPhoto.html":{},"injectables/StoreEffects.html":{},"coverage.html":{}}}],["apiphotocameraresponse",{"_index":1,"title":{"interfaces/APIPhotoCameraResponse.html":{}},"body":{"interfaces/APIPhotoCameraResponse.html":{},"interfaces/APIPhotoDataReponse.html":{},"interfaces/APIPhotoResponse.html":{},"interfaces/APIPhotoRoverResponse.html":{},"interfaces/ApiManifest.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestPhoto.html":{},"coverage.html":{}}}],["apiphotodatareponse",{"_index":59,"title":{"interfaces/APIPhotoDataReponse.html":{}},"body":{"interfaces/APIPhotoCameraResponse.html":{},"interfaces/APIPhotoDataReponse.html":{},"interfaces/APIPhotoResponse.html":{},"interfaces/APIPhotoRoverResponse.html":{},"interfaces/ApiManifest.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestPhoto.html":{},"coverage.html":{}}}],["apiphotoresponse",{"_index":64,"title":{"interfaces/APIPhotoResponse.html":{}},"body":{"interfaces/APIPhotoCameraResponse.html":{},"interfaces/APIPhotoDataReponse.html":{},"interfaces/APIPhotoResponse.html":{},"interfaces/APIPhotoRoverResponse.html":{},"interfaces/ApiManifest.html":{},"injectables/ApiService.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestPhoto.html":{},"injectables/StoreEffects.html":{},"coverage.html":{}}}],["apiphotoroverresponse",{"_index":57,"title":{"interfaces/APIPhotoRoverResponse.html":{}},"body":{"interfaces/APIPhotoCameraResponse.html":{},"interfaces/APIPhotoDataReponse.html":{},"interfaces/APIPhotoResponse.html":{},"interfaces/APIPhotoRoverResponse.html":{},"interfaces/ApiManifest.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestPhoto.html":{},"coverage.html":{}}}],["apis",{"_index":1138,"title":{},"body":{"index.html":{}}}],["apiservice",{"_index":69,"title":{"injectables/ApiService.html":{}},"body":{"injectables/ApiService.html":{},"injectables/StoreEffects.html":{},"coverage.html":{}}}],["app",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/DetailsComponent.html":{},"components/ErrorDialogLauncherComponent.html":{},"components/ErrorDialogPopupComponent.html":{},"components/LoaderComponent.html":{},"components/PaginatorComponent.html":{},"components/RoverPanelComponent.html":{},"components/RoverPhotosComponent.html":{},"injectables/StoreEffects.html":{},"interfaces/StoreState.html":{},"classes/Utils.html":{},"miscellaneous/variables.html":{}}}],["app.actions",{"_index":963,"title":{},"body":{"injectables/StoreEffects.html":{}}}],["app.component",{"_index":225,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":144,"title":{},"body":{"components/AppComponent.html":{}}}],["app.selectors",{"_index":964,"title":{},"body":{"injectables/StoreEffects.html":{}}}],["app.state",{"_index":960,"title":{},"body":{"injectables/StoreEffects.html":{}}}],["appcomponent",{"_index":132,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/DetailsComponent.html":{},"components/ErrorDialogLauncherComponent.html":{},"components/ErrorDialogPopupComponent.html":{},"components/LoaderComponent.html":{},"components/PaginatorComponent.html":{},"components/RoverPanelComponent.html":{},"components/RoverPhotosComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":288,"title":{},"body":{"components/DashboardComponent.html":{},"index.html":{}}}],["appmodule",{"_index":205,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":212,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["array(this.totalpages).fill(0).map((_i",{"_index":630,"title":{},"body":{"components/PaginatorComponent.html":{}}}],["array.from(new",{"_index":1310,"title":{},"body":{"miscellaneous/variables.html":{}}}],["async",{"_index":809,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["auto",{"_index":440,"title":{},"body":{"components/DetailsComponent.html":{},"components/RoverPanelComponent.html":{}}}],["autopause",{"_index":251,"title":{},"body":{"modules/AppModule.html":{}}}],["avaiables",{"_index":970,"title":{},"body":{"interfaces/StoreState.html":{}}}],["available",{"_index":296,"title":{},"body":{"components/DashboardComponent.html":{},"components/DetailsComponent.html":{},"modules.html":{}}}],["availables",{"_index":715,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["avatar",{"_index":869,"title":{},"body":{"components/RoverPhotosComponent.html":{}}}],["back",{"_index":413,"title":{},"body":{"components/DetailsComponent.html":{}}}],["background",{"_index":836,"title":{},"body":{"components/RoverPanelComponent.html":{},"components/RoverPhotosComponent.html":{}}}],["bar",{"_index":829,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["between",{"_index":432,"title":{},"body":{"components/DetailsComponent.html":{},"components/RoverPanelComponent.html":{}}}],["bold",{"_index":459,"title":{},"body":{"components/DetailsComponent.html":{},"components/RoverPanelComponent.html":{}}}],["boolean",{"_index":597,"title":{},"body":{"components/PaginatorComponent.html":{},"interfaces/PanelLoadStatus.html":{},"interfaces/Rover.html":{},"interfaces/RoverCamera.html":{},"interfaces/RoverListItem.html":{},"interfaces/RoverPhoto.html":{},"interfaces/RoverPhotosRequest.html":{},"interfaces/StoreState.html":{},"miscellaneous/variables.html":{}}}],["bootstrap",{"_index":219,"title":{},"body":{"modules/AppModule.html":{}}}],["border",{"_index":832,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["bottom",{"_index":527,"title":{},"body":{"components/ErrorDialogPopupComponent.html":{},"components/PaginatorComponent.html":{},"components/RoverPanelComponent.html":{},"components/RoverPhotosComponent.html":{}}}],["box",{"_index":838,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["brown",{"_index":537,"title":{},"body":{"components/ErrorDialogPopupComponent.html":{}}}],["browse",{"_index":289,"title":{},"body":{"components/DashboardComponent.html":{},"modules.html":{}}}],["browser",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{},"modules.html":{}}}],["browser/animations",{"_index":227,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":226,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":221,"title":{},"body":{"modules/AppModule.html":{}}}],["button",{"_index":434,"title":{},"body":{"components/DetailsComponent.html":{},"components/PaginatorComponent.html":{},"components/RoverPanelComponent.html":{},"components/RoverPhotosComponent.html":{},"miscellaneous/variables.html":{}}}],["buttons",{"_index":562,"title":{},"body":{"components/PaginatorComponent.html":{},"components/RoverPanelComponent.html":{}}}],["calendar_month",{"_index":808,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["call",{"_index":73,"title":{},"body":{"injectables/ApiService.html":{},"injectables/StoreEffects.html":{}}}],["calls",{"_index":89,"title":{},"body":{"injectables/ApiService.html":{}}}],["cam",{"_index":868,"title":{},"body":{"components/RoverPhotosComponent.html":{},"miscellaneous/enumerations.html":{}}}],["camera",{"_index":9,"title":{},"body":{"interfaces/APIPhotoCameraResponse.html":{},"interfaces/APIPhotoDataReponse.html":{},"interfaces/APIPhotoResponse.html":{},"interfaces/APIPhotoRoverResponse.html":{},"interfaces/ApiManifest.html":{},"injectables/ApiService.html":{},"modules/DetailsModule.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestPhoto.html":{},"interfaces/Rover.html":{},"interfaces/RoverCamera.html":{},"interfaces/RoverListItem.html":{},"components/RoverPanelComponent.html":{},"interfaces/RoverPhoto.html":{},"components/RoverPhotosComponent.html":{},"interfaces/RoverPhotosRequest.html":{},"injectables/StoreEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["camera.camera",{"_index":817,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["camera.description",{"_index":818,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["camerafullname",{"_index":668,"title":{},"body":{"interfaces/Rover.html":{},"interfaces/RoverCamera.html":{},"interfaces/RoverListItem.html":{},"interfaces/RoverPhoto.html":{},"interfaces/RoverPhotosRequest.html":{}}}],["cameras",{"_index":41,"title":{},"body":{"interfaces/APIPhotoCameraResponse.html":{},"interfaces/APIPhotoDataReponse.html":{},"interfaces/APIPhotoResponse.html":{},"interfaces/APIPhotoRoverResponse.html":{},"interfaces/ApiManifest.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestPhoto.html":{},"interfaces/Rover.html":{},"interfaces/RoverCamera.html":{},"interfaces/RoverListItem.html":{},"components/RoverPanelComponent.html":{},"interfaces/RoverPhoto.html":{},"components/RoverPhotosComponent.html":{},"interfaces/RoverPhotosRequest.html":{},"interfaces/StoreState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["camerasinfo",{"_index":42,"title":{},"body":{"interfaces/APIPhotoCameraResponse.html":{},"interfaces/APIPhotoDataReponse.html":{},"interfaces/APIPhotoResponse.html":{},"interfaces/APIPhotoRoverResponse.html":{},"interfaces/ApiManifest.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestPhoto.html":{}}}],["cameraslist",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"components/RoverPanelComponent.html":{},"interfaces/StoreState.html":{},"miscellaneous/variables.html":{}}}],["caminfo.camera",{"_index":866,"title":{},"body":{"components/RoverPhotosComponent.html":{}}}],["caminfo.description",{"_index":867,"title":{},"body":{"components/RoverPhotosComponent.html":{}}}],["camsrover",{"_index":1305,"title":{},"body":{"miscellaneous/variables.html":{}}}],["camsrover?.length",{"_index":1318,"title":{},"body":{"miscellaneous/variables.html":{}}}],["camsroverphotos",{"_index":1309,"title":{},"body":{"miscellaneous/variables.html":{}}}],["camsroverphotos?.indexof(params[rover_constants.details_params.camera",{"_index":1320,"title":{},"body":{"miscellaneous/variables.html":{}}}],["camsroverphotos?.length",{"_index":1319,"title":{},"body":{"miscellaneous/variables.html":{}}}],["card",{"_index":452,"title":{},"body":{"components/DetailsComponent.html":{},"components/RoverPanelComponent.html":{},"components/RoverPhotosComponent.html":{}}}],["catcherror",{"_index":956,"title":{},"body":{"injectables/StoreEffects.html":{}}}],["catcherror((e",{"_index":929,"title":{},"body":{"injectables/StoreEffects.html":{}}}],["center",{"_index":428,"title":{},"body":{"components/DetailsComponent.html":{},"components/ErrorDialogPopupComponent.html":{},"components/LoaderComponent.html":{},"components/PaginatorComponent.html":{},"components/RoverPanelComponent.html":{}}}],["change",{"_index":617,"title":{},"body":{"components/PaginatorComponent.html":{},"miscellaneous/enumerations.html":{}}}],["changedetection",{"_index":275,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoaderComponent.html":{},"components/PaginatorComponent.html":{},"components/RoverPanelComponent.html":{},"components/RoverPhotosComponent.html":{}}}],["changedetectionstrategy",{"_index":284,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoaderComponent.html":{},"components/PaginatorComponent.html":{},"components/RoverPanelComponent.html":{},"components/RoverPhotosComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":276,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoaderComponent.html":{},"components/PaginatorComponent.html":{},"components/RoverPanelComponent.html":{},"components/RoverPhotosComponent.html":{}}}],["changepage",{"_index":570,"title":{},"body":{"components/PaginatorComponent.html":{}}}],["changepage(page",{"_index":611,"title":{},"body":{"components/PaginatorComponent.html":{}}}],["changes",{"_index":348,"title":{},"body":{"components/DetailsComponent.html":{},"components/PaginatorComponent.html":{},"components/RoverPanelComponent.html":{},"miscellaneous/variables.html":{}}}],["changeselectedtab",{"_index":697,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["changeselectedtab(tab",{"_index":707,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["check",{"_index":153,"title":{},"body":{"components/AppComponent.html":{}}}],["chemcam",{"_index":1173,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["chevron_left",{"_index":412,"title":{},"body":{"components/DetailsComponent.html":{}}}],["chosen",{"_index":1249,"title":{},"body":{"miscellaneous/variables.html":{}}}],["class",{"_index":116,"title":{"classes/Utils.html":{}},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DetailsComponent.html":{},"modules/DetailsModule.html":{},"modules/DetailsRoutingModule.html":{},"components/ErrorDialogLauncherComponent.html":{},"components/ErrorDialogPopupComponent.html":{},"components/LoaderComponent.html":{},"components/PaginatorComponent.html":{},"components/RoverPanelComponent.html":{},"components/RoverPhotosComponent.html":{},"modules/SharedModule.html":{},"injectables/StoreEffects.html":{},"classes/Utils.html":{},"coverage.html":{},"overview.html":{}}}],["classes",{"_index":973,"title":{},"body":{"classes/Utils.html":{}}}],["clicking",{"_index":822,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["close",{"_index":524,"title":{},"body":{"components/ErrorDialogPopupComponent.html":{}}}],["closed",{"_index":491,"title":{},"body":{"components/ErrorDialogLauncherComponent.html":{}}}],["closeerrormodal",{"_index":698,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["closes",{"_index":710,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["cluster_appmodule",{"_index":208,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":211,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":210,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":209,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_dashboardmodule",{"_index":299,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_dashboardmodule_declarations",{"_index":300,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_dashboardmodule_imports",{"_index":301,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_detailsmodule",{"_index":461,"title":{},"body":{"modules/DetailsModule.html":{},"overview.html":{}}}],["cluster_detailsmodule_declarations",{"_index":462,"title":{},"body":{"modules/DetailsModule.html":{},"overview.html":{}}}],["cluster_detailsmodule_imports",{"_index":463,"title":{},"body":{"modules/DetailsModule.html":{},"overview.html":{}}}],["cluster_sharedmodule",{"_index":870,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declarations",{"_index":872,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":871,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["code",{"_index":293,"title":{},"body":{"components/DashboardComponent.html":{},"components/DetailsComponent.html":{},"interfaces/ErrorDialogData.html":{},"components/ErrorDialogLauncherComponent.html":{},"interfaces/Rover.html":{},"interfaces/RoverCamera.html":{},"interfaces/RoverListItem.html":{},"components/RoverPanelComponent.html":{},"interfaces/RoverPhoto.html":{},"components/RoverPhotosComponent.html":{},"interfaces/RoverPhotosRequest.html":{},"interfaces/StoreState.html":{},"classes/Utils.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["codes",{"_index":278,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/StoreState.html":{},"miscellaneous/variables.html":{}}}],["collapsed",{"_index":704,"title":{},"body":{"components/RoverPanelComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["collapsed_panel",{"_index":1116,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["collapsedpanel",{"_index":1005,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["color",{"_index":531,"title":{},"body":{"components/ErrorDialogPopupComponent.html":{},"components/LoaderComponent.html":{},"components/RoverPanelComponent.html":{}}}],["column",{"_index":555,"title":{},"body":{"components/LoaderComponent.html":{},"components/PaginatorComponent.html":{}}}],["columns",{"_index":437,"title":{},"body":{"components/DetailsComponent.html":{},"components/RoverPanelComponent.html":{}}}],["combinelatest",{"_index":156,"title":{},"body":{"components/AppComponent.html":{}}}],["commonmodule",{"_index":876,"title":{},"body":{"modules/SharedModule.html":{}}}],["complete",{"_index":1195,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["compodoc",{"_index":1156,"title":{},"body":{"index.html":{}}}],["component",{"_index":131,"title":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DetailsComponent.html":{},"components/ErrorDialogLauncherComponent.html":{},"components/ErrorDialogPopupComponent.html":{},"components/LoaderComponent.html":{},"components/PaginatorComponent.html":{},"components/RoverPanelComponent.html":{},"components/RoverPhotosComponent.html":{}},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardRoutingModule.html":{},"components/DetailsComponent.html":{},"modules/DetailsRoutingModule.html":{},"components/ErrorDialogLauncherComponent.html":{},"components/ErrorDialogPopupComponent.html":{},"components/LoaderComponent.html":{},"components/PaginatorComponent.html":{},"components/RoverPanelComponent.html":{},"components/RoverPhotosComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DetailsComponent.html":{},"components/ErrorDialogLauncherComponent.html":{},"components/ErrorDialogPopupComponent.html":{},"components/LoaderComponent.html":{},"components/PaginatorComponent.html":{},"components/RoverPanelComponent.html":{},"components/RoverPhotosComponent.html":{}}}],["components",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DetailsComponent.html":{},"components/ErrorDialogLauncherComponent.html":{},"components/ErrorDialogPopupComponent.html":{},"components/LoaderComponent.html":{},"components/PaginatorComponent.html":{},"components/RoverPanelComponent.html":{},"components/RoverPhotosComponent.html":{},"overview.html":{}}}],["components/dashboard/dashboard.component",{"_index":308,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{}}}],["components/details/details.component",{"_index":466,"title":{},"body":{"modules/DetailsModule.html":{},"modules/DetailsRoutingModule.html":{}}}],["components/error",{"_index":899,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/loader/loader.component",{"_index":890,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/paginator/paginator.component",{"_index":891,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/rover",{"_index":309,"title":{},"body":{"modules/DashboardModule.html":{}}}],["concatlatestfrom",{"_index":913,"title":{},"body":{"injectables/StoreEffects.html":{}}}],["const",{"_index":120,"title":{},"body":{"injectables/ApiService.html":{},"modules/AppRoutingModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/DetailsRoutingModule.html":{},"components/ErrorDialogLauncherComponent.html":{},"injectables/StoreEffects.html":{},"interfaces/StoreState.html":{},"miscellaneous/variables.html":{}}}],["constants",{"_index":26,"title":{},"body":{"interfaces/APIPhotoCameraResponse.html":{},"interfaces/APIPhotoDataReponse.html":{},"interfaces/APIPhotoResponse.html":{},"interfaces/APIPhotoRoverResponse.html":{},"interfaces/ApiManifest.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestPhoto.html":{},"interfaces/Rover.html":{},"interfaces/RoverCamera.html":{},"interfaces/RoverListItem.html":{},"interfaces/RoverPhoto.html":{},"interfaces/RoverPhotosRequest.html":{}}}],["constructor",{"_index":80,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DetailsComponent.html":{},"components/ErrorDialogLauncherComponent.html":{},"components/ErrorDialogPopupComponent.html":{},"components/RoverPanelComponent.html":{},"components/RoverPhotosComponent.html":{},"injectables/StoreEffects.html":{}}}],["constructor(actions",{"_index":907,"title":{},"body":{"injectables/StoreEffects.html":{}}}],["constructor(dialog",{"_index":483,"title":{},"body":{"components/ErrorDialogLauncherComponent.html":{}}}],["constructor(dialogref",{"_index":511,"title":{},"body":{"components/ErrorDialogPopupComponent.html":{}}}],["constructor(http",{"_index":81,"title":{},"body":{"injectables/ApiService.html":{}}}],["constructor(router",{"_index":338,"title":{},"body":{"components/DetailsComponent.html":{},"components/RoverPhotosComponent.html":{}}}],["constructor(store",{"_index":147,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/RoverPanelComponent.html":{}}}],["contains",{"_index":548,"title":{},"body":{"components/LoaderComponent.html":{},"components/RoverPanelComponent.html":{}}}],["content",{"_index":430,"title":{},"body":{"components/DetailsComponent.html":{},"components/ErrorDialogPopupComponent.html":{},"components/LoaderComponent.html":{},"components/PaginatorComponent.html":{},"components/RoverPanelComponent.html":{}}}],["control",{"_index":625,"title":{},"body":{"components/PaginatorComponent.html":{},"miscellaneous/variables.html":{}}}],["cover",{"_index":837,"title":{},"body":{"components/RoverPanelComponent.html":{},"components/RoverPhotosComponent.html":{}}}],["coverage",{"_index":985,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createaction",{"_index":1240,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createeffect",{"_index":910,"title":{},"body":{"injectables/StoreEffects.html":{}}}],["createfeatureselector('store",{"_index":1348,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createreducer",{"_index":1201,"title":{},"body":{"miscellaneous/variables.html":{}}}],["creates",{"_index":1238,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createselector",{"_index":1264,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createvaluemap",{"_index":1043,"title":{},"body":{"coverage.html":{}}}],["createvaluemap(state",{"_index":1265,"title":{},"body":{"miscellaneous/variables.html":{}}}],["current",{"_index":596,"title":{},"body":{"components/PaginatorComponent.html":{},"interfaces/Rover.html":{},"interfaces/RoverCamera.html":{},"interfaces/RoverListItem.html":{},"components/RoverPanelComponent.html":{},"interfaces/RoverPhoto.html":{},"interfaces/RoverPhotosRequest.html":{},"miscellaneous/variables.html":{}}}],["current_photos_page",{"_index":1130,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["currently",{"_index":360,"title":{},"body":{"components/DetailsComponent.html":{}}}],["currentpage",{"_index":323,"title":{},"body":{"components/DetailsComponent.html":{},"components/PaginatorComponent.html":{},"components/RoverPanelComponent.html":{},"miscellaneous/variables.html":{}}}],["currentpage[1",{"_index":1292,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currentphotospage",{"_index":645,"title":{},"body":{"interfaces/Rover.html":{},"interfaces/RoverCamera.html":{},"interfaces/RoverListItem.html":{},"interfaces/RoverPhoto.html":{},"interfaces/RoverPhotosRequest.html":{},"miscellaneous/enumerations.html":{}}}],["cycle",{"_index":282,"title":{},"body":{"components/DashboardComponent.html":{},"components/DetailsComponent.html":{},"components/ErrorDialogLauncherComponent.html":{},"components/LoaderComponent.html":{},"components/PaginatorComponent.html":{},"components/RoverPanelComponent.html":{}}}],["d8d8d8",{"_index":843,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["dashboard",{"_index":261,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DetailsComponent.html":{}}}],["dashboard'},{'name",{"_index":186,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DetailsComponent.html":{},"components/ErrorDialogLauncherComponent.html":{},"components/ErrorDialogPopupComponent.html":{},"components/LoaderComponent.html":{},"components/PaginatorComponent.html":{},"components/RoverPanelComponent.html":{},"components/RoverPhotosComponent.html":{}}}],["dashboard.component.html",{"_index":277,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboardcomponent",{"_index":185,"title":{"components/DashboardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DetailsComponent.html":{},"components/ErrorDialogLauncherComponent.html":{},"components/ErrorDialogPopupComponent.html":{},"components/LoaderComponent.html":{},"components/PaginatorComponent.html":{},"components/RoverPanelComponent.html":{},"components/RoverPhotosComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dashboardmodule",{"_index":298,"title":{"modules/DashboardModule.html":{}},"body":{"modules/DashboardModule.html":{},"modules.html":{},"overview.html":{}}}],["dashboardroutingmodule",{"_index":302,"title":{"modules/DashboardRoutingModule.html":{}},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["data",{"_index":54,"title":{},"body":{"interfaces/APIPhotoCameraResponse.html":{},"interfaces/APIPhotoDataReponse.html":{},"interfaces/APIPhotoResponse.html":{},"interfaces/APIPhotoRoverResponse.html":{},"interfaces/ApiManifest.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DetailsComponent.html":{},"components/ErrorDialogLauncherComponent.html":{},"components/ErrorDialogPopupComponent.html":{},"components/LoaderComponent.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestPhoto.html":{},"components/PaginatorComponent.html":{},"components/RoverPanelComponent.html":{},"components/RoverPhotosComponent.html":{},"injectables/StoreEffects.html":{},"interfaces/StoreState.html":{},"classes/Utils.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["data.earth_date",{"_index":865,"title":{},"body":{"components/RoverPhotosComponent.html":{}}}],["data.errorcode",{"_index":522,"title":{},"body":{"components/ErrorDialogPopupComponent.html":{}}}],["data.errormessage",{"_index":523,"title":{},"body":{"components/ErrorDialogPopupComponent.html":{}}}],["data.photo_manifest",{"_index":944,"title":{},"body":{"injectables/StoreEffects.html":{}}}],["data.set(code[1",{"_index":1291,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.set(item",{"_index":1301,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.set(rover.code",{"_index":1297,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.sol",{"_index":864,"title":{},"body":{"components/RoverPhotosComponent.html":{}}}],["data.total_photos",{"_index":863,"title":{},"body":{"components/RoverPhotosComponent.html":{}}}],["date",{"_index":36,"title":{},"body":{"interfaces/APIPhotoCameraResponse.html":{},"interfaces/APIPhotoDataReponse.html":{},"interfaces/APIPhotoResponse.html":{},"interfaces/APIPhotoRoverResponse.html":{},"interfaces/ApiManifest.html":{},"components/DetailsComponent.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestPhoto.html":{},"interfaces/Rover.html":{},"interfaces/RoverCamera.html":{},"interfaces/RoverListItem.html":{},"components/RoverPanelComponent.html":{},"interfaces/RoverPhoto.html":{},"components/RoverPhotosComponent.html":{},"interfaces/RoverPhotosRequest.html":{},"miscellaneous/variables.html":{}}}],["datepipe",{"_index":877,"title":{},"body":{"modules/SharedModule.html":{}}}],["day",{"_index":39,"title":{},"body":{"interfaces/APIPhotoCameraResponse.html":{},"interfaces/APIPhotoDataReponse.html":{},"interfaces/APIPhotoResponse.html":{},"interfaces/APIPhotoRoverResponse.html":{},"interfaces/ApiManifest.html":{},"injectables/ApiService.html":{},"modules/DetailsModule.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestPhoto.html":{},"components/RoverPhotosComponent.html":{}}}],["days",{"_index":736,"title":{},"body":{"components/RoverPanelComponent.html":{},"miscellaneous/variables.html":{}}}],["de",{"_index":372,"title":{},"body":{"components/DetailsComponent.html":{}}}],["decimalpipe",{"_index":878,"title":{},"body":{"modules/SharedModule.html":{}}}],["declarations",{"_index":217,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"modules/DetailsModule.html":{},"modules/SharedModule.html":{}}}],["decoration",{"_index":825,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["decorators",{"_index":515,"title":{},"body":{"components/ErrorDialogPopupComponent.html":{}}}],["default",{"_index":102,"title":{},"body":{"injectables/ApiService.html":{},"injectables/StoreEffects.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":83,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DetailsComponent.html":{},"components/ErrorDialogLauncherComponent.html":{},"components/ErrorDialogPopupComponent.html":{},"components/LoaderComponent.html":{},"components/PaginatorComponent.html":{},"components/RoverPanelComponent.html":{},"components/RoverPhotosComponent.html":{},"injectables/StoreEffects.html":{},"classes/Utils.html":{}}}],["delay",{"_index":957,"title":{},"body":{"injectables/StoreEffects.html":{}}}],["dependencies",{"_index":207,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"modules/DetailsModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["deployed",{"_index":1153,"title":{},"body":{"index.html":{}}}],["description",{"_index":7,"title":{},"body":{"interfaces/APIPhotoCameraResponse.html":{},"interfaces/APIPhotoDataReponse.html":{},"interfaces/APIPhotoResponse.html":{},"interfaces/APIPhotoRoverResponse.html":{},"interfaces/ApiManifest.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/DetailsComponent.html":{},"modules/DetailsModule.html":{},"interfaces/ErrorDialogData.html":{},"components/ErrorDialogLauncherComponent.html":{},"components/ErrorDialogPopupComponent.html":{},"components/LoaderComponent.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestPhoto.html":{},"components/PaginatorComponent.html":{},"interfaces/PanelLoadStatus.html":{},"interfaces/Rover.html":{},"interfaces/RoverCamera.html":{},"interfaces/RoverListItem.html":{},"components/RoverPanelComponent.html":{},"interfaces/RoverPhoto.html":{},"components/RoverPhotosComponent.html":{},"interfaces/RoverPhotosRequest.html":{},"modules/SharedModule.html":{},"injectables/StoreEffects.html":{},"interfaces/StoreState.html":{},"classes/Utils.html":{}}}],["detail",{"_index":369,"title":{},"body":{"components/DetailsComponent.html":{},"components/RoverPhotosComponent.html":{},"miscellaneous/variables.html":{}}}],["detail.camera",{"_index":418,"title":{},"body":{"components/DetailsComponent.html":{}}}],["detail.camerafullname",{"_index":419,"title":{},"body":{"components/DetailsComponent.html":{}}}],["detail.earthdate",{"_index":415,"title":{},"body":{"components/DetailsComponent.html":{}}}],["detail.id",{"_index":414,"title":{},"body":{"components/DetailsComponent.html":{}}}],["detail.sol",{"_index":417,"title":{},"body":{"components/DetailsComponent.html":{}}}],["detail_photos_per_page",{"_index":991,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["detailed",{"_index":319,"title":{},"body":{"components/DetailsComponent.html":{}}}],["details",{"_index":265,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/DetailsComponent.html":{},"modules/DetailsModule.html":{},"modules/DetailsRoutingModule.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["details'},{'name",{"_index":188,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DetailsComponent.html":{},"components/ErrorDialogLauncherComponent.html":{},"components/ErrorDialogPopupComponent.html":{},"components/LoaderComponent.html":{},"components/PaginatorComponent.html":{},"components/RoverPanelComponent.html":{},"components/RoverPhotosComponent.html":{}}}],["details.component.html",{"_index":322,"title":{},"body":{"components/DetailsComponent.html":{}}}],["details.component.scss",{"_index":321,"title":{},"body":{"components/DetailsComponent.html":{}}}],["details/:code/:sol",{"_index":268,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["details/:code/:sol/:camera",{"_index":269,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["details_params",{"_index":965,"title":{},"body":{"injectables/StoreEffects.html":{},"miscellaneous/enumerations.html":{}}}],["detailscomponent",{"_index":187,"title":{"components/DetailsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DetailsComponent.html":{},"modules/DetailsModule.html":{},"modules/DetailsRoutingModule.html":{},"components/ErrorDialogLauncherComponent.html":{},"components/ErrorDialogPopupComponent.html":{},"components/LoaderComponent.html":{},"components/PaginatorComponent.html":{},"components/RoverPanelComponent.html":{},"components/RoverPhotosComponent.html":{},"coverage.html":{},"overview.html":{}}}],["detailsdata",{"_index":324,"title":{},"body":{"components/DetailsComponent.html":{}}}],["detailsmodule",{"_index":460,"title":{"modules/DetailsModule.html":{}},"body":{"modules/DetailsModule.html":{},"modules.html":{},"overview.html":{}}}],["detailsroutingmodule",{"_index":464,"title":{"modules/DetailsRoutingModule.html":{}},"body":{"modules/DetailsModule.html":{},"modules/DetailsRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["detais",{"_index":468,"title":{},"body":{"modules/DetailsRoutingModule.html":{}}}],["development",{"_index":1139,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":232,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["dialog",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DetailsComponent.html":{},"interfaces/ErrorDialogData.html":{},"components/ErrorDialogLauncherComponent.html":{},"components/ErrorDialogPopupComponent.html":{},"components/LoaderComponent.html":{},"components/PaginatorComponent.html":{},"interfaces/Rover.html":{},"interfaces/RoverCamera.html":{},"interfaces/RoverListItem.html":{},"components/RoverPanelComponent.html":{},"interfaces/RoverPhoto.html":{},"components/RoverPhotosComponent.html":{},"interfaces/RoverPhotosRequest.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["dialog/error",{"_index":475,"title":{},"body":{"components/ErrorDialogLauncherComponent.html":{},"components/ErrorDialogPopupComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["dialogref",{"_index":501,"title":{},"body":{"components/ErrorDialogLauncherComponent.html":{},"components/ErrorDialogPopupComponent.html":{}}}],["dialogref.afterclosed().pipe(take(1)).subscribe(_r",{"_index":504,"title":{},"body":{"components/ErrorDialogLauncherComponent.html":{}}}],["direction",{"_index":554,"title":{},"body":{"components/LoaderComponent.html":{},"components/PaginatorComponent.html":{}}}],["directive",{"_index":181,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DetailsComponent.html":{},"components/ErrorDialogLauncherComponent.html":{},"components/ErrorDialogPopupComponent.html":{},"components/LoaderComponent.html":{},"components/PaginatorComponent.html":{},"components/RoverPanelComponent.html":{},"components/RoverPhotosComponent.html":{}}}],["directives",{"_index":202,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DetailsComponent.html":{},"components/ErrorDialogLauncherComponent.html":{},"components/ErrorDialogPopupComponent.html":{},"components/LoaderComponent.html":{},"components/PaginatorComponent.html":{},"components/RoverPanelComponent.html":{},"components/RoverPhotosComponent.html":{}}}],["disable",{"_index":600,"title":{},"body":{"components/PaginatorComponent.html":{}}}],["disableclose",{"_index":503,"title":{},"body":{"components/ErrorDialogLauncherComponent.html":{}}}],["dispatch",{"_index":551,"title":{},"body":{"components/LoaderComponent.html":{},"components/RoverPanelComponent.html":{}}}],["dispatchs",{"_index":703,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["display",{"_index":424,"title":{},"body":{"components/DetailsComponent.html":{},"components/ErrorDialogPopupComponent.html":{},"components/LoaderComponent.html":{},"components/PaginatorComponent.html":{},"components/RoverPanelComponent.html":{}}}],["documentation",{"_index":294,"title":{},"body":{"components/DashboardComponent.html":{},"coverage.html":{},"index.html":{}}}],["dom",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DetailsComponent.html":{},"components/ErrorDialogLauncherComponent.html":{},"components/ErrorDialogPopupComponent.html":{},"components/LoaderComponent.html":{},"components/PaginatorComponent.html":{},"components/RoverPanelComponent.html":{},"components/RoverPhotosComponent.html":{}}}],["during",{"_index":367,"title":{},"body":{"components/DetailsComponent.html":{},"components/LoaderComponent.html":{}}}],["dynamic",{"_index":1090,"title":{},"body":{"dependencies.html":{}}}],["e?.error?.error?.code",{"_index":930,"title":{},"body":{"injectables/StoreEffects.html":{}}}],["e?.error?.error?.message",{"_index":932,"title":{},"body":{"injectables/StoreEffects.html":{}}}],["e?.message",{"_index":933,"title":{},"body":{"injectables/StoreEffects.html":{}}}],["e?.name",{"_index":931,"title":{},"body":{"injectables/StoreEffects.html":{}}}],["each",{"_index":1263,"title":{},"body":{"miscellaneous/variables.html":{}}}],["earth",{"_index":35,"title":{},"body":{"interfaces/APIPhotoCameraResponse.html":{},"interfaces/APIPhotoDataReponse.html":{},"interfaces/APIPhotoResponse.html":{},"interfaces/APIPhotoRoverResponse.html":{},"interfaces/ApiManifest.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestPhoto.html":{},"interfaces/Rover.html":{},"interfaces/RoverCamera.html":{},"interfaces/RoverListItem.html":{},"components/RoverPanelComponent.html":{},"interfaces/RoverPhoto.html":{},"interfaces/RoverPhotosRequest.html":{},"miscellaneous/variables.html":{}}}],["earth_date",{"_index":37,"title":{},"body":{"interfaces/APIPhotoCameraResponse.html":{},"interfaces/APIPhotoDataReponse.html":{},"interfaces/APIPhotoResponse.html":{},"interfaces/APIPhotoRoverResponse.html":{},"interfaces/ApiManifest.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestPhoto.html":{}}}],["earthdate",{"_index":669,"title":{},"body":{"interfaces/Rover.html":{},"interfaces/RoverCamera.html":{},"interfaces/RoverListItem.html":{},"interfaces/RoverPhoto.html":{},"interfaces/RoverPhotosRequest.html":{}}}],["edl_ddcam",{"_index":1181,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["edl_pucam1",{"_index":1182,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["edl_pucam2",{"_index":1183,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["edl_rdcam",{"_index":1180,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["edl_rucam",{"_index":1179,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["effect",{"_index":939,"title":{},"body":{"injectables/StoreEffects.html":{}}}],["effects",{"_index":903,"title":{},"body":{"injectables/StoreEffects.html":{}}}],["effectsmodule",{"_index":233,"title":{},"body":{"modules/AppModule.html":{}}}],["effectsmodule.forroot([storeeffects",{"_index":245,"title":{},"body":{"modules/AppModule.html":{}}}],["element",{"_index":180,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DetailsComponent.html":{},"components/ErrorDialogLauncherComponent.html":{},"components/ErrorDialogPopupComponent.html":{},"components/LoaderComponent.html":{},"components/PaginatorComponent.html":{},"components/RoverPanelComponent.html":{},"components/RoverPhotosComponent.html":{}}}],["emit",{"_index":490,"title":{},"body":{"components/ErrorDialogLauncherComponent.html":{},"components/PaginatorComponent.html":{}}}],["enable",{"_index":599,"title":{},"body":{"components/PaginatorComponent.html":{}}}],["enabled",{"_index":731,"title":{},"body":{"components/RoverPanelComponent.html":{},"miscellaneous/variables.html":{}}}],["enablednext",{"_index":580,"title":{},"body":{"components/PaginatorComponent.html":{}}}],["enabledprevious",{"_index":581,"title":{},"body":{"components/PaginatorComponent.html":{}}}],["end",{"_index":107,"title":{},"body":{"injectables/ApiService.html":{},"components/PaginatorComponent.html":{},"miscellaneous/variables.html":{}}}],["endpoints",{"_index":909,"title":{},"body":{"injectables/StoreEffects.html":{}}}],["entries",{"_index":1285,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entries.find(item",{"_index":1287,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enumerations",{"_index":1098,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":229,"title":{},"body":{"modules/AppModule.html":{}}}],["environment.production",{"_index":250,"title":{},"body":{"modules/AppModule.html":{}}}],["environments/environment",{"_index":230,"title":{},"body":{"modules/AppModule.html":{}}}],["error",{"_index":190,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DetailsComponent.html":{},"interfaces/ErrorDialogData.html":{},"components/ErrorDialogLauncherComponent.html":{},"components/ErrorDialogPopupComponent.html":{},"components/LoaderComponent.html":{},"components/PaginatorComponent.html":{},"interfaces/PanelLoadStatus.html":{},"interfaces/Rover.html":{},"interfaces/RoverCamera.html":{},"interfaces/RoverListItem.html":{},"components/RoverPanelComponent.html":{},"interfaces/RoverPhoto.html":{},"components/RoverPhotosComponent.html":{},"interfaces/RoverPhotosRequest.html":{},"interfaces/StoreState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["error_code",{"_index":1131,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["error_loading_manifest",{"_index":1126,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["error_message",{"_index":1132,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["errorcode",{"_index":471,"title":{},"body":{"interfaces/ErrorDialogData.html":{},"interfaces/Rover.html":{},"interfaces/RoverCamera.html":{},"interfaces/RoverListItem.html":{},"interfaces/RoverPhoto.html":{},"interfaces/RoverPhotosRequest.html":{},"injectables/StoreEffects.html":{},"interfaces/StoreState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["errordata",{"_index":325,"title":{},"body":{"components/DetailsComponent.html":{},"components/ErrorDialogLauncherComponent.html":{}}}],["errordialogdata",{"_index":380,"title":{"interfaces/ErrorDialogData.html":{}},"body":{"components/DetailsComponent.html":{},"interfaces/ErrorDialogData.html":{},"components/ErrorDialogLauncherComponent.html":{},"components/ErrorDialogPopupComponent.html":{},"components/RoverPanelComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["errordialoglaunchercomponent",{"_index":189,"title":{"components/ErrorDialogLauncherComponent.html":{}},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DetailsComponent.html":{},"components/ErrorDialogLauncherComponent.html":{},"components/ErrorDialogPopupComponent.html":{},"components/LoaderComponent.html":{},"components/PaginatorComponent.html":{},"components/RoverPanelComponent.html":{},"components/RoverPhotosComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{}}}],["errordialogpopupcomponent",{"_index":193,"title":{"components/ErrorDialogPopupComponent.html":{}},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DetailsComponent.html":{},"components/ErrorDialogLauncherComponent.html":{},"components/ErrorDialogPopupComponent.html":{},"components/LoaderComponent.html":{},"components/PaginatorComponent.html":{},"components/RoverPanelComponent.html":{},"components/RoverPhotosComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{}}}],["errorloading",{"_index":326,"title":{},"body":{"components/DetailsComponent.html":{},"interfaces/StoreState.html":{},"miscellaneous/variables.html":{}}}],["errorloadingmanifest",{"_index":646,"title":{},"body":{"interfaces/Rover.html":{},"interfaces/RoverCamera.html":{},"interfaces/RoverListItem.html":{},"interfaces/RoverPhoto.html":{},"interfaces/RoverPhotosRequest.html":{},"miscellaneous/enumerations.html":{}}}],["errorloadingmanifestdata",{"_index":675,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["errormessage",{"_index":472,"title":{},"body":{"interfaces/ErrorDialogData.html":{},"interfaces/Rover.html":{},"interfaces/RoverCamera.html":{},"interfaces/RoverListItem.html":{},"interfaces/RoverPhoto.html":{},"interfaces/RoverPhotosRequest.html":{},"injectables/StoreEffects.html":{},"interfaces/StoreState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["event",{"_index":610,"title":{},"body":{"components/PaginatorComponent.html":{}}}],["eventemitter",{"_index":489,"title":{},"body":{"components/ErrorDialogLauncherComponent.html":{},"components/PaginatorComponent.html":{}}}],["execute",{"_index":586,"title":{},"body":{"components/PaginatorComponent.html":{},"injectables/StoreEffects.html":{},"miscellaneous/variables.html":{}}}],["executes",{"_index":614,"title":{},"body":{"components/PaginatorComponent.html":{}}}],["exist",{"_index":811,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["expanded",{"_index":706,"title":{},"body":{"components/RoverPanelComponent.html":{},"interfaces/StoreState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["expanded_panel",{"_index":1115,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["expandedpanel",{"_index":967,"title":{},"body":{"interfaces/StoreState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["expansion",{"_index":824,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["export",{"_index":31,"title":{},"body":{"interfaces/APIPhotoCameraResponse.html":{},"interfaces/APIPhotoDataReponse.html":{},"interfaces/APIPhotoResponse.html":{},"interfaces/APIPhotoRoverResponse.html":{},"interfaces/ApiManifest.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DetailsComponent.html":{},"modules/DetailsModule.html":{},"modules/DetailsRoutingModule.html":{},"interfaces/ErrorDialogData.html":{},"components/ErrorDialogLauncherComponent.html":{},"components/ErrorDialogPopupComponent.html":{},"components/LoaderComponent.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestPhoto.html":{},"components/PaginatorComponent.html":{},"interfaces/PanelLoadStatus.html":{},"interfaces/Rover.html":{},"interfaces/RoverCamera.html":{},"interfaces/RoverListItem.html":{},"components/RoverPanelComponent.html":{},"interfaces/RoverPhoto.html":{},"components/RoverPhotosComponent.html":{},"interfaces/RoverPhotosRequest.html":{},"modules/SharedModule.html":{},"injectables/StoreEffects.html":{},"interfaces/StoreState.html":{},"classes/Utils.html":{}}}],["exports",{"_index":273,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/DetailsRoutingModule.html":{},"modules/SharedModule.html":{}}}],["extends",{"_index":644,"title":{},"body":{"interfaces/Rover.html":{},"interfaces/RoverCamera.html":{},"interfaces/RoverListItem.html":{},"interfaces/RoverPhoto.html":{},"interfaces/RoverPhotosRequest.html":{}}}],["extract",{"_index":979,"title":{},"body":{"classes/Utils.html":{}}}],["false",{"_index":793,"title":{},"body":{"components/RoverPanelComponent.html":{},"injectables/StoreEffects.html":{},"interfaces/StoreState.html":{},"miscellaneous/variables.html":{}}}],["features",{"_index":875,"title":{},"body":{"modules/SharedModule.html":{}}}],["fhaz",{"_index":1170,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["fields",{"_index":1123,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/APIPhotoCameraResponse.html":{},"interfaces/APIPhotoDataReponse.html":{},"interfaces/APIPhotoResponse.html":{},"interfaces/APIPhotoRoverResponse.html":{},"interfaces/ApiManifest.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DetailsComponent.html":{},"modules/DetailsModule.html":{},"modules/DetailsRoutingModule.html":{},"interfaces/ErrorDialogData.html":{},"components/ErrorDialogLauncherComponent.html":{},"components/ErrorDialogPopupComponent.html":{},"components/LoaderComponent.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestPhoto.html":{},"components/PaginatorComponent.html":{},"interfaces/PanelLoadStatus.html":{},"interfaces/Rover.html":{},"interfaces/RoverCamera.html":{},"interfaces/RoverListItem.html":{},"components/RoverPanelComponent.html":{},"interfaces/RoverPhoto.html":{},"components/RoverPhotosComponent.html":{},"interfaces/RoverPhotosRequest.html":{},"modules/SharedModule.html":{},"injectables/StoreEffects.html":{},"interfaces/StoreState.html":{},"classes/Utils.html":{},"coverage.html":{}}}],["files",{"_index":1261,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filter",{"_index":980,"title":{},"body":{"classes/Utils.html":{}}}],["filter(roversol",{"_index":1312,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filtered",{"_index":982,"title":{},"body":{"classes/Utils.html":{}}}],["finish",{"_index":953,"title":{},"body":{"injectables/StoreEffects.html":{}}}],["finished",{"_index":1253,"title":{},"body":{"miscellaneous/variables.html":{}}}],["first",{"_index":589,"title":{},"body":{"components/PaginatorComponent.html":{},"components/RoverPanelComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["firstpageaction",{"_index":676,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["flex",{"_index":425,"title":{},"body":{"components/DetailsComponent.html":{},"components/ErrorDialogPopupComponent.html":{},"components/LoaderComponent.html":{},"components/PaginatorComponent.html":{},"components/RoverPanelComponent.html":{}}}],["folder",{"_index":1146,"title":{},"body":{"index.html":{}}}],["font",{"_index":457,"title":{},"body":{"components/DetailsComponent.html":{},"components/ErrorDialogPopupComponent.html":{},"components/LoaderComponent.html":{},"components/RoverPanelComponent.html":{}}}],["form",{"_index":624,"title":{},"body":{"components/PaginatorComponent.html":{}}}],["formcontrol",{"_index":622,"title":{},"body":{"components/PaginatorComponent.html":{}}}],["front_hazcam_left_a",{"_index":1188,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["front_hazcam_right_a",{"_index":1189,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["full",{"_index":21,"title":{},"body":{"interfaces/APIPhotoCameraResponse.html":{},"interfaces/APIPhotoDataReponse.html":{},"interfaces/APIPhotoResponse.html":{},"interfaces/APIPhotoRoverResponse.html":{},"interfaces/ApiManifest.html":{},"modules/AppRoutingModule.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestPhoto.html":{},"interfaces/Rover.html":{},"interfaces/RoverCamera.html":{},"interfaces/RoverListItem.html":{},"interfaces/RoverPhoto.html":{},"interfaces/RoverPhotosRequest.html":{}}}],["full_name",{"_index":14,"title":{},"body":{"interfaces/APIPhotoCameraResponse.html":{},"interfaces/APIPhotoDataReponse.html":{},"interfaces/APIPhotoResponse.html":{},"interfaces/APIPhotoRoverResponse.html":{},"interfaces/ApiManifest.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestPhoto.html":{}}}],["fulldate",{"_index":416,"title":{},"body":{"components/DetailsComponent.html":{},"components/RoverPanelComponent.html":{},"components/RoverPhotosComponent.html":{}}}],["function",{"_index":1021,"title":{},"body":{"coverage.html":{}}}],["getcameraslist",{"_index":1045,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getcodeslist",{"_index":1046,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getcurrentphotospage",{"_index":1047,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getdetailroverphotoslist",{"_index":1048,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getdetailscurrentpage",{"_index":1049,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getdetailsrover",{"_index":1050,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getenablenextbutton",{"_index":1051,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getenablepreviousbutton",{"_index":1052,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["geterrordata",{"_index":1053,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["geterrorloadingmanifestdata",{"_index":1054,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getexpandedpanelstatus",{"_index":1055,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["gethasdetailroverphotoslist",{"_index":1056,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["gethasdetailsminimumparams",{"_index":1057,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["gethasmanifest",{"_index":1058,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getinitialdataisready",{"_index":1059,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getiserrorloading",{"_index":1060,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getiserrorloadingmanifest",{"_index":1061,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getisloaded",{"_index":1062,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getisloadedmanifest",{"_index":1063,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getisloading",{"_index":1064,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getisloadingmanifest",{"_index":1065,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getlandingdates",{"_index":1066,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getlaunchdates",{"_index":1067,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getloadmanifeststatus",{"_index":1068,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getmaxdate",{"_index":1069,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getmaxsol",{"_index":1070,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getnomanifestloading",{"_index":1071,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getnotpaginatedphotolist",{"_index":1044,"title":{},"body":{"coverage.html":{}}}],["getnotpaginatedphotolist(state",{"_index":1270,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getphotoslist",{"_index":1072,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getphotospages",{"_index":1073,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getroverphotolisttotalpages",{"_index":1074,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getrovervaluefromstore",{"_index":976,"title":{},"body":{"classes/Utils.html":{}}}],["getrovervaluefromstore(store",{"_index":977,"title":{},"body":{"classes/Utils.html":{}}}],["getselectedindex",{"_index":1075,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getselectors",{"_index":1349,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getstatus",{"_index":1076,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getstoreref",{"_index":377,"title":{},"body":{"components/DetailsComponent.html":{},"components/RoverPanelComponent.html":{}}}],["getting",{"_index":1133,"title":{"index.html":{}},"body":{}}],["gettotalphotos",{"_index":1077,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["go",{"_index":1110,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["go_to_first_photos_page",{"_index":1109,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["go_to_last_photos_page",{"_index":1113,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["go_to_next_photos_page",{"_index":1112,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["go_to_photos_page",{"_index":1114,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["go_to_previous_photos_page",{"_index":1111,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["gotodashboard",{"_index":332,"title":{},"body":{"components/DetailsComponent.html":{}}}],["gotofirstphotospage",{"_index":1006,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["gotolastphotospage",{"_index":1007,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["gotonextphotospage",{"_index":1008,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["gotophotospage",{"_index":1009,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["gotopreviousphotospage",{"_index":1010,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["graph",{"_index":1160,"title":{},"body":{"modules.html":{}}}],["grid",{"_index":436,"title":{},"body":{"components/DetailsComponent.html":{},"components/RoverPanelComponent.html":{}}}],["h1",{"_index":533,"title":{},"body":{"components/ErrorDialogPopupComponent.html":{}}}],["h3",{"_index":534,"title":{},"body":{"components/ErrorDialogPopupComponent.html":{}}}],["handlepagechange",{"_index":333,"title":{},"body":{"components/DetailsComponent.html":{}}}],["handlepagechange(page",{"_index":346,"title":{},"body":{"components/DetailsComponent.html":{}}}],["hasdetailsdata",{"_index":327,"title":{},"body":{"components/DetailsComponent.html":{}}}],["hasmanifest",{"_index":677,"title":{},"body":{"components/RoverPanelComponent.html":{},"injectables/StoreEffects.html":{}}}],["hasmanifest.get(params[details_params.code",{"_index":920,"title":{},"body":{"injectables/StoreEffects.html":{}}}],["hasminimumparams",{"_index":919,"title":{},"body":{"injectables/StoreEffects.html":{}}}],["have_manifest",{"_index":1128,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["havemanifest",{"_index":647,"title":{},"body":{"interfaces/Rover.html":{},"interfaces/RoverCamera.html":{},"interfaces/RoverListItem.html":{},"interfaces/RoverPhoto.html":{},"interfaces/RoverPhotosRequest.html":{},"miscellaneous/enumerations.html":{}}}],["header",{"_index":848,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["height",{"_index":450,"title":{},"body":{"components/DetailsComponent.html":{},"components/RoverPanelComponent.html":{}}}],["here",{"_index":297,"title":{},"body":{"components/DashboardComponent.html":{}}}],["hidden",{"_index":840,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["html",{"_index":179,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DetailsComponent.html":{},"components/ErrorDialogLauncherComponent.html":{},"components/ErrorDialogPopupComponent.html":{},"components/LoaderComponent.html":{},"components/PaginatorComponent.html":{},"components/RoverPanelComponent.html":{},"components/RoverPhotosComponent.html":{}}}],["http",{"_index":87,"title":{},"body":{"injectables/ApiService.html":{}}}],["http://localhost:4200",{"_index":1152,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":82,"title":{},"body":{"injectables/ApiService.html":{}}}],["httpclientmodule",{"_index":242,"title":{},"body":{"modules/AppModule.html":{}}}],["https://api.nasa.gov",{"_index":812,"title":{},"body":{"components/RoverPanelComponent.html":{},"index.html":{}}}],["https://api.nasa.gov/mars",{"_index":121,"title":{},"body":{"injectables/ApiService.html":{}}}],["https://theguitxo.github.io/marsroverphotos",{"_index":1155,"title":{},"body":{"index.html":{}}}],["https://theguitxo.github.io/marsroverphotos/documentation/index.html",{"_index":1157,"title":{},"body":{"index.html":{}}}],["icon",{"_index":526,"title":{},"body":{"components/ErrorDialogPopupComponent.html":{}}}],["id",{"_index":15,"title":{},"body":{"interfaces/APIPhotoCameraResponse.html":{},"interfaces/APIPhotoDataReponse.html":{},"interfaces/APIPhotoResponse.html":{},"interfaces/APIPhotoRoverResponse.html":{},"interfaces/ApiManifest.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestPhoto.html":{},"interfaces/Rover.html":{},"interfaces/RoverCamera.html":{},"interfaces/RoverListItem.html":{},"interfaces/RoverPhoto.html":{},"interfaces/RoverPhotosRequest.html":{}}}],["identificator",{"_index":657,"title":{},"body":{"interfaces/Rover.html":{},"interfaces/RoverCamera.html":{},"interfaces/RoverListItem.html":{},"interfaces/RoverPhoto.html":{},"interfaces/RoverPhotosRequest.html":{}}}],["identifier",{"_index":986,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":62,"title":{},"body":{"interfaces/APIPhotoCameraResponse.html":{},"interfaces/APIPhotoDataReponse.html":{},"interfaces/APIPhotoResponse.html":{},"interfaces/APIPhotoRoverResponse.html":{},"interfaces/ApiManifest.html":{},"components/DetailsComponent.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestPhoto.html":{}}}],["images",{"_index":658,"title":{},"body":{"interfaces/Rover.html":{},"interfaces/RoverCamera.html":{},"interfaces/RoverListItem.html":{},"interfaces/RoverPhoto.html":{},"interfaces/RoverPhotosRequest.html":{}}}],["img",{"_index":449,"title":{},"body":{"components/DetailsComponent.html":{}}}],["img_src",{"_index":63,"title":{},"body":{"interfaces/APIPhotoCameraResponse.html":{},"interfaces/APIPhotoDataReponse.html":{},"interfaces/APIPhotoResponse.html":{},"interfaces/APIPhotoRoverResponse.html":{},"interfaces/ApiManifest.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestPhoto.html":{}}}],["imgsrc",{"_index":670,"title":{},"body":{"interfaces/Rover.html":{},"interfaces/RoverCamera.html":{},"interfaces/RoverListItem.html":{},"interfaces/RoverPhoto.html":{},"interfaces/RoverPhotosRequest.html":{}}}],["implements",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DetailsComponent.html":{},"components/ErrorDialogLauncherComponent.html":{},"components/LoaderComponent.html":{},"components/PaginatorComponent.html":{},"components/RoverPanelComponent.html":{}}}],["import",{"_index":24,"title":{},"body":{"interfaces/APIPhotoCameraResponse.html":{},"interfaces/APIPhotoDataReponse.html":{},"interfaces/APIPhotoResponse.html":{},"interfaces/APIPhotoRoverResponse.html":{},"interfaces/ApiManifest.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DetailsComponent.html":{},"modules/DetailsModule.html":{},"modules/DetailsRoutingModule.html":{},"components/ErrorDialogLauncherComponent.html":{},"components/ErrorDialogPopupComponent.html":{},"components/LoaderComponent.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestPhoto.html":{},"components/PaginatorComponent.html":{},"interfaces/Rover.html":{},"interfaces/RoverCamera.html":{},"interfaces/RoverListItem.html":{},"components/RoverPanelComponent.html":{},"interfaces/RoverPhoto.html":{},"components/RoverPhotosComponent.html":{},"interfaces/RoverPhotosRequest.html":{},"modules/SharedModule.html":{},"injectables/StoreEffects.html":{},"interfaces/StoreState.html":{},"classes/Utils.html":{}}}],["import('./modules/dashboard/dashboard.module').then(m",{"_index":263,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./modules/details/details.module').then(m",{"_index":266,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["important",{"_index":455,"title":{},"body":{"components/DetailsComponent.html":{},"components/RoverPhotosComponent.html":{}}}],["imports",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/DetailsModule.html":{},"modules/DetailsRoutingModule.html":{},"modules/SharedModule.html":{}}}],["index",{"_index":12,"title":{"index.html":{}},"body":{"interfaces/APIPhotoCameraResponse.html":{},"interfaces/APIPhotoDataReponse.html":{},"interfaces/APIPhotoResponse.html":{},"interfaces/APIPhotoRoverResponse.html":{},"interfaces/ApiManifest.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DetailsComponent.html":{},"interfaces/ErrorDialogData.html":{},"components/ErrorDialogLauncherComponent.html":{},"components/ErrorDialogPopupComponent.html":{},"components/LoaderComponent.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestPhoto.html":{},"components/PaginatorComponent.html":{},"interfaces/PanelLoadStatus.html":{},"interfaces/Rover.html":{},"interfaces/RoverCamera.html":{},"interfaces/RoverListItem.html":{},"components/RoverPanelComponent.html":{},"interfaces/RoverPhoto.html":{},"components/RoverPhotosComponent.html":{},"interfaces/RoverPhotosRequest.html":{},"injectables/StoreEffects.html":{},"interfaces/StoreState.html":{},"classes/Utils.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indicates",{"_index":1293,"title":{},"body":{"miscellaneous/variables.html":{}}}],["indicator",{"_index":365,"title":{},"body":{"components/DetailsComponent.html":{},"components/PaginatorComponent.html":{},"interfaces/PanelLoadStatus.html":{},"interfaces/Rover.html":{},"interfaces/RoverCamera.html":{},"interfaces/RoverListItem.html":{},"components/RoverPanelComponent.html":{},"interfaces/RoverPhoto.html":{},"interfaces/RoverPhotosRequest.html":{},"interfaces/StoreState.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/APIPhotoCameraResponse.html":{},"interfaces/APIPhotoDataReponse.html":{},"interfaces/APIPhotoResponse.html":{},"interfaces/APIPhotoRoverResponse.html":{},"interfaces/ApiManifest.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DetailsComponent.html":{},"modules/DetailsModule.html":{},"modules/DetailsRoutingModule.html":{},"interfaces/ErrorDialogData.html":{},"components/ErrorDialogLauncherComponent.html":{},"components/ErrorDialogPopupComponent.html":{},"components/LoaderComponent.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestPhoto.html":{},"components/PaginatorComponent.html":{},"interfaces/PanelLoadStatus.html":{},"interfaces/Rover.html":{},"interfaces/RoverCamera.html":{},"interfaces/RoverListItem.html":{},"components/RoverPanelComponent.html":{},"interfaces/RoverPhoto.html":{},"components/RoverPhotosComponent.html":{},"interfaces/RoverPhotosRequest.html":{},"modules/SharedModule.html":{},"injectables/StoreEffects.html":{},"interfaces/StoreState.html":{},"classes/Utils.html":{}}}],["information",{"_index":11,"title":{},"body":{"interfaces/APIPhotoCameraResponse.html":{},"interfaces/APIPhotoDataReponse.html":{},"interfaces/APIPhotoResponse.html":{},"interfaces/APIPhotoRoverResponse.html":{},"interfaces/ApiManifest.html":{},"modules/DashboardModule.html":{},"components/DetailsComponent.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestPhoto.html":{},"interfaces/PanelLoadStatus.html":{},"interfaces/Rover.html":{},"interfaces/RoverCamera.html":{},"interfaces/RoverListItem.html":{},"components/RoverPanelComponent.html":{},"interfaces/RoverPhoto.html":{},"components/RoverPhotosComponent.html":{},"interfaces/RoverPhotosRequest.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["init",{"_index":550,"title":{},"body":{"components/LoaderComponent.html":{},"miscellaneous/variables.html":{}}}],["initial",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"interfaces/StoreState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["initialdataisready",{"_index":145,"title":{},"body":{"components/AppComponent.html":{}}}],["initialdataready",{"_index":968,"title":{},"body":{"interfaces/StoreState.html":{},"miscellaneous/variables.html":{}}}],["initialstate",{"_index":972,"title":{},"body":{"interfaces/StoreState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["inits",{"_index":355,"title":{},"body":{"components/DetailsComponent.html":{},"components/RoverPanelComponent.html":{}}}],["initsubscriptions",{"_index":334,"title":{},"body":{"components/DetailsComponent.html":{}}}],["inject",{"_index":519,"title":{},"body":{"components/ErrorDialogPopupComponent.html":{}}}],["inject(mat_dialog_data",{"_index":516,"title":{},"body":{"components/ErrorDialogPopupComponent.html":{}}}],["injectable",{"_index":68,"title":{"injectables/ApiService.html":{},"injectables/StoreEffects.html":{}},"body":{"injectables/ApiService.html":{},"injectables/StoreEffects.html":{},"coverage.html":{}}}],["injectables",{"_index":70,"title":{},"body":{"injectables/ApiService.html":{},"injectables/StoreEffects.html":{},"overview.html":{}}}],["inline",{"_index":841,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["input",{"_index":495,"title":{},"body":{"components/ErrorDialogLauncherComponent.html":{},"components/LoaderComponent.html":{},"components/PaginatorComponent.html":{},"components/RoverPanelComponent.html":{},"components/RoverPhotosComponent.html":{}}}],["inputs",{"_index":480,"title":{},"body":{"components/ErrorDialogLauncherComponent.html":{},"components/LoaderComponent.html":{},"components/PaginatorComponent.html":{},"components/RoverPanelComponent.html":{},"components/RoverPhotosComponent.html":{}}}],["install",{"_index":1150,"title":{},"body":{"index.html":{}}}],["inteface",{"_index":662,"title":{},"body":{"interfaces/Rover.html":{},"interfaces/RoverCamera.html":{},"interfaces/RoverListItem.html":{},"interfaces/RoverPhoto.html":{},"interfaces/RoverPhotosRequest.html":{}}}],["interface",{"_index":0,"title":{"interfaces/APIPhotoCameraResponse.html":{},"interfaces/APIPhotoDataReponse.html":{},"interfaces/APIPhotoResponse.html":{},"interfaces/APIPhotoRoverResponse.html":{},"interfaces/ApiManifest.html":{},"interfaces/ErrorDialogData.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestPhoto.html":{},"interfaces/PanelLoadStatus.html":{},"interfaces/Rover.html":{},"interfaces/RoverCamera.html":{},"interfaces/RoverListItem.html":{},"interfaces/RoverPhoto.html":{},"interfaces/RoverPhotosRequest.html":{},"interfaces/StoreState.html":{}},"body":{"interfaces/APIPhotoCameraResponse.html":{},"interfaces/APIPhotoDataReponse.html":{},"interfaces/APIPhotoResponse.html":{},"interfaces/APIPhotoRoverResponse.html":{},"interfaces/ApiManifest.html":{},"interfaces/ErrorDialogData.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestPhoto.html":{},"interfaces/PanelLoadStatus.html":{},"interfaces/Rover.html":{},"interfaces/RoverCamera.html":{},"interfaces/RoverListItem.html":{},"interfaces/RoverPhoto.html":{},"interfaces/RoverPhotosRequest.html":{},"interfaces/StoreState.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/APIPhotoCameraResponse.html":{},"interfaces/APIPhotoDataReponse.html":{},"interfaces/APIPhotoResponse.html":{},"interfaces/APIPhotoRoverResponse.html":{},"interfaces/ApiManifest.html":{},"interfaces/ErrorDialogData.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestPhoto.html":{},"interfaces/PanelLoadStatus.html":{},"interfaces/Rover.html":{},"interfaces/RoverCamera.html":{},"interfaces/RoverListItem.html":{},"interfaces/RoverPhoto.html":{},"interfaces/RoverPhotosRequest.html":{},"interfaces/StoreState.html":{},"overview.html":{}}}],["iserrorloadingmanifest",{"_index":678,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["isexpanded",{"_index":679,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["isloadedmanifest",{"_index":680,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["isloadingmanifest",{"_index":681,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["isn't",{"_index":734,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["it's",{"_index":1147,"title":{},"body":{"index.html":{}}}],["item",{"_index":665,"title":{},"body":{"interfaces/Rover.html":{},"interfaces/RoverCamera.html":{},"interfaces/RoverListItem.html":{},"interfaces/RoverPhoto.html":{},"interfaces/RoverPhotosRequest.html":{}}}],["item.code",{"_index":1280,"title":{},"body":{"miscellaneous/variables.html":{}}}],["item.loadingmanifest",{"_index":1338,"title":{},"body":{"miscellaneous/variables.html":{}}}],["item[0",{"_index":1288,"title":{},"body":{"miscellaneous/variables.html":{}}}],["items",{"_index":427,"title":{},"body":{"components/DetailsComponent.html":{},"components/ErrorDialogPopupComponent.html":{},"components/LoaderComponent.html":{},"components/PaginatorComponent.html":{},"components/RoverPanelComponent.html":{},"miscellaneous/variables.html":{}}}],["jdouzcrqgxp0zk4cgyquemotb2ba2uvq2uhplgg8",{"_index":104,"title":{},"body":{"injectables/ApiService.html":{}}}],["justify",{"_index":429,"title":{},"body":{"components/DetailsComponent.html":{},"components/ErrorDialogPopupComponent.html":{},"components/LoaderComponent.html":{},"components/PaginatorComponent.html":{},"components/RoverPanelComponent.html":{}}}],["key",{"_index":105,"title":{},"body":{"injectables/ApiService.html":{}}}],["landing",{"_index":43,"title":{},"body":{"interfaces/APIPhotoCameraResponse.html":{},"interfaces/APIPhotoDataReponse.html":{},"interfaces/APIPhotoResponse.html":{},"interfaces/APIPhotoRoverResponse.html":{},"interfaces/ApiManifest.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestPhoto.html":{},"components/RoverPanelComponent.html":{},"miscellaneous/variables.html":{}}}],["landing_date",{"_index":44,"title":{},"body":{"interfaces/APIPhotoCameraResponse.html":{},"interfaces/APIPhotoDataReponse.html":{},"interfaces/APIPhotoResponse.html":{},"interfaces/APIPhotoRoverResponse.html":{},"interfaces/ApiManifest.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestPhoto.html":{},"miscellaneous/enumerations.html":{}}}],["landingdate",{"_index":682,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["last",{"_index":47,"title":{},"body":{"interfaces/APIPhotoCameraResponse.html":{},"interfaces/APIPhotoDataReponse.html":{},"interfaces/APIPhotoResponse.html":{},"interfaces/APIPhotoRoverResponse.html":{},"interfaces/ApiManifest.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestPhoto.html":{},"components/PaginatorComponent.html":{},"components/RoverPanelComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["lastpageaction",{"_index":683,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["launch",{"_index":58,"title":{},"body":{"interfaces/APIPhotoCameraResponse.html":{},"interfaces/APIPhotoDataReponse.html":{},"interfaces/APIPhotoResponse.html":{},"interfaces/APIPhotoRoverResponse.html":{},"interfaces/ApiManifest.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestPhoto.html":{},"components/RoverPanelComponent.html":{},"miscellaneous/variables.html":{}}}],["launch_date",{"_index":46,"title":{},"body":{"interfaces/APIPhotoCameraResponse.html":{},"interfaces/APIPhotoDataReponse.html":{},"interfaces/APIPhotoResponse.html":{},"interfaces/APIPhotoRoverResponse.html":{},"interfaces/ApiManifest.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestPhoto.html":{},"miscellaneous/enumerations.html":{}}}],["launchdate",{"_index":684,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["launched",{"_index":292,"title":{},"body":{"components/DashboardComponent.html":{},"index.html":{}}}],["launcher",{"_index":478,"title":{},"body":{"components/ErrorDialogLauncherComponent.html":{}}}],["launcher'},{'name",{"_index":192,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DetailsComponent.html":{},"components/ErrorDialogLauncherComponent.html":{},"components/ErrorDialogPopupComponent.html":{},"components/LoaderComponent.html":{},"components/PaginatorComponent.html":{},"components/RoverPanelComponent.html":{},"components/RoverPhotosComponent.html":{}}}],["launcher.component",{"_index":900,"title":{},"body":{"modules/SharedModule.html":{}}}],["launcher.component.ts",{"_index":477,"title":{},"body":{"components/ErrorDialogLauncherComponent.html":{},"coverage.html":{}}}],["launcher.component.ts:18",{"_index":488,"title":{},"body":{"components/ErrorDialogLauncherComponent.html":{}}}],["launcher.component.ts:22",{"_index":485,"title":{},"body":{"components/ErrorDialogLauncherComponent.html":{}}}],["launcher.component.ts:29",{"_index":494,"title":{},"body":{"components/ErrorDialogLauncherComponent.html":{}}}],["launcher.component.ts:35",{"_index":492,"title":{},"body":{"components/ErrorDialogLauncherComponent.html":{}}}],["launcher/error",{"_index":476,"title":{},"body":{"components/ErrorDialogLauncherComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["launching",{"_index":45,"title":{},"body":{"interfaces/APIPhotoCameraResponse.html":{},"interfaces/APIPhotoDataReponse.html":{},"interfaces/APIPhotoResponse.html":{},"interfaces/APIPhotoRoverResponse.html":{},"interfaces/ApiManifest.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestPhoto.html":{}}}],["left",{"_index":639,"title":{},"body":{"components/PaginatorComponent.html":{},"components/RoverPhotosComponent.html":{}}}],["legend",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DetailsComponent.html":{},"components/ErrorDialogLauncherComponent.html":{},"components/ErrorDialogPopupComponent.html":{},"components/LoaderComponent.html":{},"components/PaginatorComponent.html":{},"components/RoverPanelComponent.html":{},"components/RoverPhotosComponent.html":{}}}],["life",{"_index":281,"title":{},"body":{"components/DashboardComponent.html":{},"components/DetailsComponent.html":{},"components/ErrorDialogLauncherComponent.html":{},"components/LoaderComponent.html":{},"components/PaginatorComponent.html":{},"components/RoverPanelComponent.html":{}}}],["list",{"_index":50,"title":{},"body":{"interfaces/APIPhotoCameraResponse.html":{},"interfaces/APIPhotoDataReponse.html":{},"interfaces/APIPhotoResponse.html":{},"interfaces/APIPhotoRoverResponse.html":{},"interfaces/ApiManifest.html":{},"injectables/ApiService.html":{},"components/DashboardComponent.html":{},"components/DetailsComponent.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestPhoto.html":{},"components/PaginatorComponent.html":{},"interfaces/Rover.html":{},"interfaces/RoverCamera.html":{},"interfaces/RoverListItem.html":{},"components/RoverPanelComponent.html":{},"interfaces/RoverPhoto.html":{},"interfaces/RoverPhotosRequest.html":{},"injectables/StoreEffects.html":{},"interfaces/StoreState.html":{},"miscellaneous/variables.html":{}}}],["list?.foreach(item",{"_index":1300,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lists",{"_index":666,"title":{},"body":{"interfaces/Rover.html":{},"interfaces/RoverCamera.html":{},"interfaces/RoverListItem.html":{},"interfaces/RoverPhoto.html":{},"interfaces/RoverPhotosRequest.html":{}}}],["load",{"_index":93,"title":{},"body":{"injectables/ApiService.html":{},"components/DetailsComponent.html":{},"components/LoaderComponent.html":{},"interfaces/PanelLoadStatus.html":{},"components/RoverPanelComponent.html":{},"injectables/StoreEffects.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["load_cam_photos",{"_index":1119,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["load_cam_photos_error",{"_index":1121,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["load_cam_photos_success",{"_index":1120,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["load_rover_manifest",{"_index":1103,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["load_rover_manifest_error",{"_index":1106,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["load_rover_manifest_success",{"_index":1104,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["loadaction",{"_index":685,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["loadcamphotos",{"_index":905,"title":{},"body":{"injectables/StoreEffects.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadcamphotosaction",{"_index":328,"title":{},"body":{"components/DetailsComponent.html":{}}}],["loadcamphotoserror",{"_index":1011,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadcamphotossuccess",{"_index":1012,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadchildren",{"_index":262,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loaded",{"_index":329,"title":{},"body":{"components/DetailsComponent.html":{},"interfaces/PanelLoadStatus.html":{},"interfaces/Rover.html":{},"interfaces/RoverCamera.html":{},"interfaces/RoverListItem.html":{},"components/RoverPanelComponent.html":{},"interfaces/RoverPhoto.html":{},"interfaces/RoverPhotosRequest.html":{},"injectables/StoreEffects.html":{},"interfaces/StoreState.html":{},"miscellaneous/variables.html":{}}}],["loaded_manifest",{"_index":1125,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["loadedmanifest",{"_index":648,"title":{},"body":{"interfaces/Rover.html":{},"interfaces/RoverCamera.html":{},"interfaces/RoverListItem.html":{},"interfaces/RoverPhoto.html":{},"interfaces/RoverPhotosRequest.html":{},"miscellaneous/enumerations.html":{}}}],["loader",{"_index":542,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loader'},{'name",{"_index":196,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DetailsComponent.html":{},"components/ErrorDialogLauncherComponent.html":{},"components/ErrorDialogPopupComponent.html":{},"components/LoaderComponent.html":{},"components/PaginatorComponent.html":{},"components/RoverPanelComponent.html":{},"components/RoverPhotosComponent.html":{}}}],["loader.component.html",{"_index":544,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loader.component.scss",{"_index":543,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loadercomponent",{"_index":195,"title":{"components/LoaderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DetailsComponent.html":{},"components/ErrorDialogLauncherComponent.html":{},"components/ErrorDialogPopupComponent.html":{},"components/LoaderComponent.html":{},"components/PaginatorComponent.html":{},"components/RoverPanelComponent.html":{},"components/RoverPhotosComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{}}}],["loading",{"_index":330,"title":{},"body":{"components/DetailsComponent.html":{},"components/LoaderComponent.html":{},"interfaces/PanelLoadStatus.html":{},"interfaces/Rover.html":{},"interfaces/RoverCamera.html":{},"interfaces/RoverListItem.html":{},"components/RoverPanelComponent.html":{},"interfaces/RoverPhoto.html":{},"interfaces/RoverPhotosRequest.html":{},"interfaces/StoreState.html":{},"miscellaneous/variables.html":{}}}],["loading_manifest",{"_index":1124,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["loadingmanifest",{"_index":649,"title":{},"body":{"interfaces/Rover.html":{},"interfaces/RoverCamera.html":{},"interfaces/RoverListItem.html":{},"interfaces/RoverPhoto.html":{},"interfaces/RoverPhotosRequest.html":{},"miscellaneous/enumerations.html":{}}}],["loadrovermanifest",{"_index":78,"title":{},"body":{"injectables/ApiService.html":{},"injectables/StoreEffects.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadrovermanifest(rover",{"_index":90,"title":{},"body":{"injectables/ApiService.html":{}}}],["loadrovermanifesterror",{"_index":1013,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadrovermanifestsuccess",{"_index":1014,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadroverphotos",{"_index":79,"title":{},"body":{"injectables/ApiService.html":{}}}],["loadroverphotos(rover",{"_index":96,"title":{},"body":{"injectables/ApiService.html":{}}}],["loads",{"_index":92,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["local",{"_index":1143,"title":{},"body":{"index.html":{}}}],["logonly",{"_index":249,"title":{},"body":{"modules/AppModule.html":{}}}],["lot",{"_index":291,"title":{},"body":{"components/DashboardComponent.html":{}}}],["m.dashboardmodule",{"_index":264,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.detailsmodule",{"_index":267,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["machine",{"_index":1144,"title":{},"body":{"index.html":{}}}],["mahli",{"_index":1174,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["make",{"_index":100,"title":{},"body":{"injectables/ApiService.html":{},"index.html":{}}}],["manage",{"_index":315,"title":{},"body":{"modules/DashboardRoutingModule.html":{},"modules/DetailsRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["manifest",{"_index":30,"title":{"interfaces/Manifest.html":{}},"body":{"interfaces/APIPhotoCameraResponse.html":{},"interfaces/APIPhotoDataReponse.html":{},"interfaces/APIPhotoResponse.html":{},"interfaces/APIPhotoRoverResponse.html":{},"interfaces/ApiManifest.html":{},"injectables/ApiService.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestPhoto.html":{},"interfaces/Rover.html":{},"interfaces/RoverCamera.html":{},"interfaces/RoverListItem.html":{},"components/RoverPanelComponent.html":{},"interfaces/RoverPhoto.html":{},"interfaces/RoverPhotosRequest.html":{},"injectables/StoreEffects.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["manifestphoto",{"_index":32,"title":{"interfaces/ManifestPhoto.html":{}},"body":{"interfaces/APIPhotoCameraResponse.html":{},"interfaces/APIPhotoDataReponse.html":{},"interfaces/APIPhotoResponse.html":{},"interfaces/APIPhotoRoverResponse.html":{},"interfaces/ApiManifest.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestPhoto.html":{},"components/RoverPanelComponent.html":{},"components/RoverPhotosComponent.html":{},"coverage.html":{}}}],["map",{"_index":745,"title":{},"body":{"components/RoverPanelComponent.html":{},"injectables/StoreEffects.html":{},"classes/Utils.html":{},"miscellaneous/variables.html":{}}}],["map((data",{"_index":926,"title":{},"body":{"injectables/StoreEffects.html":{}}}],["map(roverphoto",{"_index":1315,"title":{},"body":{"miscellaneous/variables.html":{}}}],["map).get(code",{"_index":984,"title":{},"body":{"classes/Utils.html":{}}}],["mardi",{"_index":1175,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["margin",{"_index":453,"title":{},"body":{"components/DetailsComponent.html":{},"components/ErrorDialogPopupComponent.html":{},"components/PaginatorComponent.html":{},"components/RoverPanelComponent.html":{},"components/RoverPhotosComponent.html":{}}}],["maritan",{"_index":664,"title":{},"body":{"interfaces/Rover.html":{},"interfaces/RoverCamera.html":{},"interfaces/RoverListItem.html":{},"interfaces/RoverPhoto.html":{},"interfaces/RoverPhotosRequest.html":{}}}],["mars",{"_index":287,"title":{},"body":{"components/DashboardComponent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["martian",{"_index":33,"title":{},"body":{"interfaces/APIPhotoCameraResponse.html":{},"interfaces/APIPhotoDataReponse.html":{},"interfaces/APIPhotoResponse.html":{},"interfaces/APIPhotoRoverResponse.html":{},"interfaces/ApiManifest.html":{},"injectables/ApiService.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestPhoto.html":{},"interfaces/Rover.html":{},"interfaces/RoverCamera.html":{},"interfaces/RoverListItem.html":{},"components/RoverPanelComponent.html":{},"interfaces/RoverPhoto.html":{},"components/RoverPhotosComponent.html":{},"interfaces/RoverPhotosRequest.html":{},"miscellaneous/variables.html":{}}}],["mast",{"_index":1172,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["mat",{"_index":451,"title":{},"body":{"components/DetailsComponent.html":{},"components/ErrorDialogPopupComponent.html":{},"components/RoverPanelComponent.html":{},"components/RoverPhotosComponent.html":{}}}],["mat_dialog_data",{"_index":520,"title":{},"body":{"components/ErrorDialogPopupComponent.html":{}}}],["matbuttonmodule",{"_index":880,"title":{},"body":{"modules/SharedModule.html":{}}}],["matcardmodule",{"_index":892,"title":{},"body":{"modules/SharedModule.html":{}}}],["matching",{"_index":67,"title":{},"body":{"interfaces/APIPhotoCameraResponse.html":{},"interfaces/APIPhotoDataReponse.html":{},"interfaces/APIPhotoResponse.html":{},"interfaces/APIPhotoRoverResponse.html":{},"interfaces/ApiManifest.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DetailsComponent.html":{},"modules/DetailsModule.html":{},"modules/DetailsRoutingModule.html":{},"interfaces/ErrorDialogData.html":{},"components/ErrorDialogLauncherComponent.html":{},"components/ErrorDialogPopupComponent.html":{},"components/LoaderComponent.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestPhoto.html":{},"components/PaginatorComponent.html":{},"interfaces/PanelLoadStatus.html":{},"interfaces/Rover.html":{},"interfaces/RoverCamera.html":{},"interfaces/RoverListItem.html":{},"components/RoverPanelComponent.html":{},"interfaces/RoverPhoto.html":{},"components/RoverPhotosComponent.html":{},"interfaces/RoverPhotosRequest.html":{},"modules/SharedModule.html":{},"injectables/StoreEffects.html":{},"interfaces/StoreState.html":{},"classes/Utils.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matdialog",{"_index":484,"title":{},"body":{"components/ErrorDialogLauncherComponent.html":{}}}],["matdialogmodule",{"_index":898,"title":{},"body":{"modules/SharedModule.html":{}}}],["matdialogref",{"_index":512,"title":{},"body":{"components/ErrorDialogPopupComponent.html":{}}}],["matdividermodule",{"_index":894,"title":{},"body":{"modules/SharedModule.html":{}}}],["matexpansionmodule",{"_index":882,"title":{},"body":{"modules/SharedModule.html":{}}}],["math.ceil(getnotpaginatedphotolist(state",{"_index":1343,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maticonmodule",{"_index":884,"title":{},"body":{"modules/SharedModule.html":{}}}],["matlistmodule",{"_index":896,"title":{},"body":{"modules/SharedModule.html":{}}}],["matprogressspinnermodule",{"_index":886,"title":{},"body":{"modules/SharedModule.html":{}}}],["matselectchange",{"_index":612,"title":{},"body":{"components/PaginatorComponent.html":{}}}],["matselectmodule",{"_index":901,"title":{},"body":{"modules/SharedModule.html":{}}}],["mattabsmodule",{"_index":888,"title":{},"body":{"modules/SharedModule.html":{}}}],["max",{"_index":443,"title":{},"body":{"components/DetailsComponent.html":{},"components/PaginatorComponent.html":{},"components/RoverPanelComponent.html":{}}}],["max_date",{"_index":49,"title":{},"body":{"interfaces/APIPhotoCameraResponse.html":{},"interfaces/APIPhotoDataReponse.html":{},"interfaces/APIPhotoResponse.html":{},"interfaces/APIPhotoRoverResponse.html":{},"interfaces/ApiManifest.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestPhoto.html":{},"miscellaneous/enumerations.html":{}}}],["max_sol",{"_index":48,"title":{},"body":{"interfaces/APIPhotoCameraResponse.html":{},"interfaces/APIPhotoDataReponse.html":{},"interfaces/APIPhotoResponse.html":{},"interfaces/APIPhotoRoverResponse.html":{},"interfaces/ApiManifest.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestPhoto.html":{},"miscellaneous/enumerations.html":{}}}],["maxage",{"_index":247,"title":{},"body":{"modules/AppModule.html":{}}}],["maxdate",{"_index":686,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["maxsol",{"_index":687,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["mcz_left",{"_index":1187,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["mcz_right",{"_index":1186,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["media",{"_index":441,"title":{},"body":{"components/DetailsComponent.html":{},"components/PaginatorComponent.html":{},"components/RoverPanelComponent.html":{}}}],["message",{"_index":473,"title":{},"body":{"interfaces/ErrorDialogData.html":{},"components/ErrorDialogLauncherComponent.html":{},"interfaces/Rover.html":{},"interfaces/RoverCamera.html":{},"interfaces/RoverListItem.html":{},"interfaces/RoverPhoto.html":{},"interfaces/RoverPhotosRequest.html":{},"interfaces/StoreState.html":{}}}],["messages",{"_index":507,"title":{},"body":{"components/ErrorDialogPopupComponent.html":{}}}],["metadata",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DetailsComponent.html":{},"components/ErrorDialogLauncherComponent.html":{},"components/ErrorDialogPopupComponent.html":{},"components/LoaderComponent.html":{},"components/PaginatorComponent.html":{},"components/RoverPanelComponent.html":{},"components/RoverPhotosComponent.html":{}}}],["methods",{"_index":77,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DetailsComponent.html":{},"components/ErrorDialogLauncherComponent.html":{},"components/LoaderComponent.html":{},"components/PaginatorComponent.html":{},"components/RoverPanelComponent.html":{},"components/RoverPhotosComponent.html":{},"classes/Utils.html":{}}}],["minimum",{"_index":1321,"title":{},"body":{"miscellaneous/variables.html":{}}}],["minites",{"_index":1178,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["miscellaneous",{"_index":1097,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":936,"title":{},"body":{"injectables/StoreEffects.html":{}}}],["modal",{"_index":363,"title":{},"body":{"components/DetailsComponent.html":{},"interfaces/ErrorDialogData.html":{},"components/ErrorDialogLauncherComponent.html":{},"components/ErrorDialogPopupComponent.html":{},"components/RoverPanelComponent.html":{},"interfaces/StoreState.html":{},"miscellaneous/variables.html":{}}}],["modals",{"_index":487,"title":{},"body":{"components/ErrorDialogLauncherComponent.html":{}}}],["model",{"_index":470,"title":{},"body":{"interfaces/ErrorDialogData.html":{}}}],["models",{"_index":166,"title":{},"body":{"components/AppComponent.html":{}}}],["models/constants",{"_index":746,"title":{},"body":{"components/RoverPanelComponent.html":{},"components/RoverPhotosComponent.html":{},"injectables/StoreEffects.html":{}}}],["models/error",{"_index":381,"title":{},"body":{"components/DetailsComponent.html":{},"components/ErrorDialogLauncherComponent.html":{},"components/ErrorDialogPopupComponent.html":{},"components/RoverPanelComponent.html":{}}}],["models/manifest",{"_index":112,"title":{},"body":{"injectables/ApiService.html":{},"components/RoverPanelComponent.html":{},"components/RoverPhotosComponent.html":{},"injectables/StoreEffects.html":{}}}],["models/rovers",{"_index":113,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/RoverPanelComponent.html":{},"injectables/StoreEffects.html":{},"interfaces/StoreState.html":{}}}],["module",{"_index":204,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/DetailsModule.html":{},"modules/DetailsRoutingModule.html":{},"modules/SharedModule.html":{}},"body":{"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/DetailsModule.html":{},"modules/DetailsRoutingModule.html":{},"modules/SharedModule.html":{}}}],["modules",{"_index":206,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/DetailsModule.html":{},"modules/DetailsRoutingModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/shared/utils.class",{"_index":748,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["monitor_heart",{"_index":814,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["more",{"_index":1137,"title":{},"body":{"index.html":{}}}],["moves",{"_index":1245,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name",{"_index":16,"title":{},"body":{"interfaces/APIPhotoCameraResponse.html":{},"interfaces/APIPhotoDataReponse.html":{},"interfaces/APIPhotoResponse.html":{},"interfaces/APIPhotoRoverResponse.html":{},"interfaces/ApiManifest.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DetailsComponent.html":{},"components/ErrorDialogLauncherComponent.html":{},"components/ErrorDialogPopupComponent.html":{},"components/LoaderComponent.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestPhoto.html":{},"components/PaginatorComponent.html":{},"interfaces/Rover.html":{},"interfaces/RoverCamera.html":{},"interfaces/RoverListItem.html":{},"components/RoverPanelComponent.html":{},"interfaces/RoverPhoto.html":{},"components/RoverPhotosComponent.html":{},"interfaces/RoverPhotosRequest.html":{},"injectables/StoreEffects.html":{},"classes/Utils.html":{}}}],["nasa",{"_index":75,"title":{},"body":{"injectables/ApiService.html":{},"components/DashboardComponent.html":{},"injectables/StoreEffects.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["navcam",{"_index":1176,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["navcam_left",{"_index":1184,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["navcam_right",{"_index":1185,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["navigate",{"_index":344,"title":{},"body":{"components/DetailsComponent.html":{},"components/PaginatorComponent.html":{},"index.html":{}}}],["navigates",{"_index":859,"title":{},"body":{"components/RoverPhotosComponent.html":{}}}],["navigation",{"_index":607,"title":{},"body":{"components/PaginatorComponent.html":{},"injectables/StoreEffects.html":{}}}],["necessary",{"_index":1148,"title":{},"body":{"index.html":{}}}],["needed",{"_index":354,"title":{},"body":{"components/DetailsComponent.html":{},"components/RoverPanelComponent.html":{},"injectables/StoreEffects.html":{},"miscellaneous/variables.html":{}}}],["needs",{"_index":904,"title":{},"body":{"injectables/StoreEffects.html":{}}}],["new",{"_index":349,"title":{},"body":{"components/DetailsComponent.html":{},"components/ErrorDialogLauncherComponent.html":{},"components/PaginatorComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":592,"title":{},"body":{"components/PaginatorComponent.html":{},"components/RoverPanelComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["nextbuttonenabled",{"_index":688,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["nextpageaction",{"_index":689,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["ngmodule",{"_index":220,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/DetailsModule.html":{},"modules/DetailsRoutingModule.html":{},"modules/SharedModule.html":{}}}],["ngonchanges",{"_index":571,"title":{},"body":{"components/PaginatorComponent.html":{}}}],["ngoninit",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DetailsComponent.html":{},"components/ErrorDialogLauncherComponent.html":{},"components/LoaderComponent.html":{},"components/RoverPanelComponent.html":{}}}],["ngrx/effects",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"injectables/StoreEffects.html":{},"dependencies.html":{}}}],["ngrx/router",{"_index":237,"title":{},"body":{"modules/AppModule.html":{},"injectables/StoreEffects.html":{},"dependencies.html":{}}}],["ngrx/store",{"_index":157,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/DetailsComponent.html":{},"components/LoaderComponent.html":{},"components/PaginatorComponent.html":{},"components/RoverPanelComponent.html":{},"injectables/StoreEffects.html":{},"classes/Utils.html":{},"dependencies.html":{}}}],["ngrx/store/src/models",{"_index":552,"title":{},"body":{"components/LoaderComponent.html":{},"components/PaginatorComponent.html":{}}}],["nomanifestloading",{"_index":690,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["none",{"_index":826,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["note",{"_index":820,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["notpagined",{"_index":1269,"title":{},"body":{"miscellaneous/variables.html":{}}}],["notpagined.slice(init",{"_index":1277,"title":{},"body":{"miscellaneous/variables.html":{}}}],["npm",{"_index":1149,"title":{},"body":{"index.html":{}}}],["number",{"_index":22,"title":{},"body":{"interfaces/APIPhotoCameraResponse.html":{},"interfaces/APIPhotoDataReponse.html":{},"interfaces/APIPhotoResponse.html":{},"interfaces/APIPhotoRoverResponse.html":{},"interfaces/ApiManifest.html":{},"components/DetailsComponent.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestPhoto.html":{},"components/PaginatorComponent.html":{},"interfaces/Rover.html":{},"interfaces/RoverCamera.html":{},"interfaces/RoverListItem.html":{},"components/RoverPanelComponent.html":{},"interfaces/RoverPhoto.html":{},"components/RoverPhotosComponent.html":{},"interfaces/RoverPhotosRequest.html":{},"miscellaneous/variables.html":{}}}],["number:'0.0",{"_index":813,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["number:\\'0.0",{"_index":849,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["object",{"_index":53,"title":{},"body":{"interfaces/APIPhotoCameraResponse.html":{},"interfaces/APIPhotoDataReponse.html":{},"interfaces/APIPhotoResponse.html":{},"interfaces/APIPhotoRoverResponse.html":{},"interfaces/ApiManifest.html":{},"components/ErrorDialogLauncherComponent.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestPhoto.html":{}}}],["object.entries(rover",{"_index":1286,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":95,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DetailsComponent.html":{},"components/RoverPanelComponent.html":{}}}],["obtained",{"_index":981,"title":{},"body":{"classes/Utils.html":{}}}],["occurred",{"_index":366,"title":{},"body":{"components/DetailsComponent.html":{},"interfaces/PanelLoadStatus.html":{},"interfaces/Rover.html":{},"interfaces/RoverCamera.html":{},"interfaces/RoverListItem.html":{},"components/RoverPanelComponent.html":{},"interfaces/RoverPhoto.html":{},"interfaces/RoverPhotosRequest.html":{},"interfaces/StoreState.html":{},"miscellaneous/variables.html":{}}}],["oftype",{"_index":955,"title":{},"body":{"injectables/StoreEffects.html":{}}}],["oftype(loadcamphotos",{"_index":912,"title":{},"body":{"injectables/StoreEffects.html":{}}}],["oftype(loadrovermanifest",{"_index":940,"title":{},"body":{"injectables/StoreEffects.html":{}}}],["oftype(router_navigated",{"_index":948,"title":{},"body":{"injectables/StoreEffects.html":{}}}],["on(actions.collapsedpanel",{"_index":1226,"title":{},"body":{"miscellaneous/variables.html":{}}}],["on(actions.expandedpanel",{"_index":1224,"title":{},"body":{"miscellaneous/variables.html":{}}}],["on(actions.gotofirstphotospage",{"_index":1214,"title":{},"body":{"miscellaneous/variables.html":{}}}],["on(actions.gotolastphotospage",{"_index":1220,"title":{},"body":{"miscellaneous/variables.html":{}}}],["on(actions.gotonextphotospage",{"_index":1218,"title":{},"body":{"miscellaneous/variables.html":{}}}],["on(actions.gotophotospage",{"_index":1222,"title":{},"body":{"miscellaneous/variables.html":{}}}],["on(actions.gotopreviousphotospage",{"_index":1216,"title":{},"body":{"miscellaneous/variables.html":{}}}],["on(actions.loadcamphotos",{"_index":1232,"title":{},"body":{"miscellaneous/variables.html":{}}}],["on(actions.loadcamphotoserror",{"_index":1236,"title":{},"body":{"miscellaneous/variables.html":{}}}],["on(actions.loadcamphotossuccess",{"_index":1234,"title":{},"body":{"miscellaneous/variables.html":{}}}],["on(actions.loadrovermanifest",{"_index":1204,"title":{},"body":{"miscellaneous/variables.html":{}}}],["on(actions.loadrovermanifesterror",{"_index":1208,"title":{},"body":{"miscellaneous/variables.html":{}}}],["on(actions.loadrovermanifestsuccess",{"_index":1206,"title":{},"body":{"miscellaneous/variables.html":{}}}],["on(actions.reseterrorrover",{"_index":1212,"title":{},"body":{"miscellaneous/variables.html":{}}}],["on(actions.resetloadstatus",{"_index":1230,"title":{},"body":{"miscellaneous/variables.html":{}}}],["on(actions.resetrovermanifestload",{"_index":1210,"title":{},"body":{"miscellaneous/variables.html":{}}}],["on(actions.selectedtabchanged",{"_index":1228,"title":{},"body":{"miscellaneous/variables.html":{}}}],["on(actions.setinitialdata",{"_index":1202,"title":{},"body":{"miscellaneous/variables.html":{}}}],["onchanges",{"_index":564,"title":{},"body":{"components/PaginatorComponent.html":{}}}],["onclose",{"_index":482,"title":{},"body":{"components/ErrorDialogLauncherComponent.html":{}}}],["one",{"_index":954,"title":{},"body":{"injectables/StoreEffects.html":{}}}],["oninit",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DetailsComponent.html":{},"components/ErrorDialogLauncherComponent.html":{},"components/LoaderComponent.html":{},"components/RoverPanelComponent.html":{}}}],["open",{"_index":486,"title":{},"body":{"components/ErrorDialogLauncherComponent.html":{}}}],["opened",{"_index":514,"title":{},"body":{"components/ErrorDialogPopupComponent.html":{}}}],["opens",{"_index":493,"title":{},"body":{"components/ErrorDialogLauncherComponent.html":{}}}],["operation",{"_index":541,"title":{},"body":{"components/LoaderComponent.html":{}}}],["optional",{"_index":86,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DetailsComponent.html":{},"components/ErrorDialogLauncherComponent.html":{},"components/ErrorDialogPopupComponent.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestPhoto.html":{},"components/PaginatorComponent.html":{},"interfaces/Rover.html":{},"interfaces/RoverCamera.html":{},"components/RoverPanelComponent.html":{},"components/RoverPhotosComponent.html":{},"interfaces/RoverPhotosRequest.html":{},"injectables/StoreEffects.html":{},"classes/Utils.html":{}}}],["orange",{"_index":532,"title":{},"body":{"components/ErrorDialogPopupComponent.html":{}}}],["origin",{"_index":603,"title":{},"body":{"components/PaginatorComponent.html":{}}}],["out",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"modules/DetailsModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["output",{"_index":496,"title":{},"body":{"components/ErrorDialogLauncherComponent.html":{},"components/PaginatorComponent.html":{}}}],["outputs",{"_index":481,"title":{},"body":{"components/ErrorDialogLauncherComponent.html":{},"components/PaginatorComponent.html":{}}}],["overflow",{"_index":839,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["overview",{"_index":1161,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1083,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":421,"title":{},"body":{"components/DetailsComponent.html":{},"components/ErrorDialogPopupComponent.html":{},"components/LoaderComponent.html":{},"components/PaginatorComponent.html":{},"components/RoverPanelComponent.html":{},"components/RoverPhotosComponent.html":{}}}],["page",{"_index":345,"title":{},"body":{"components/DetailsComponent.html":{},"components/PaginatorComponent.html":{},"interfaces/Rover.html":{},"interfaces/RoverCamera.html":{},"interfaces/RoverListItem.html":{},"components/RoverPanelComponent.html":{},"interfaces/RoverPhoto.html":{},"components/RoverPhotosComponent.html":{},"interfaces/RoverPhotosRequest.html":{},"injectables/StoreEffects.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["pagechange",{"_index":584,"title":{},"body":{"components/PaginatorComponent.html":{}}}],["paged",{"_index":1342,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pages",{"_index":376,"title":{},"body":{"components/DetailsComponent.html":{},"components/PaginatorComponent.html":{},"interfaces/Rover.html":{},"interfaces/RoverCamera.html":{},"interfaces/RoverListItem.html":{},"components/RoverPanelComponent.html":{},"interfaces/RoverPhoto.html":{},"interfaces/RoverPhotosRequest.html":{},"miscellaneous/variables.html":{}}}],["pageselector",{"_index":568,"title":{},"body":{"components/PaginatorComponent.html":{}}}],["pageslist",{"_index":569,"title":{},"body":{"components/PaginatorComponent.html":{}}}],["paginate",{"_index":604,"title":{},"body":{"components/PaginatorComponent.html":{}}}],["paginated",{"_index":1278,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pagination",{"_index":637,"title":{},"body":{"components/PaginatorComponent.html":{}}}],["paginator",{"_index":565,"title":{},"body":{"components/PaginatorComponent.html":{},"miscellaneous/variables.html":{}}}],["paginator'},{'name",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DetailsComponent.html":{},"components/ErrorDialogLauncherComponent.html":{},"components/ErrorDialogPopupComponent.html":{},"components/LoaderComponent.html":{},"components/PaginatorComponent.html":{},"components/RoverPanelComponent.html":{},"components/RoverPhotosComponent.html":{}}}],["paginator.component.html",{"_index":567,"title":{},"body":{"components/PaginatorComponent.html":{}}}],["paginator.component.scss",{"_index":566,"title":{},"body":{"components/PaginatorComponent.html":{}}}],["paginatorcomponent",{"_index":197,"title":{"components/PaginatorComponent.html":{}},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DetailsComponent.html":{},"components/ErrorDialogLauncherComponent.html":{},"components/ErrorDialogPopupComponent.html":{},"components/LoaderComponent.html":{},"components/PaginatorComponent.html":{},"components/RoverPanelComponent.html":{},"components/RoverPhotosComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{}}}],["pancam",{"_index":1177,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["panel",{"_index":642,"title":{},"body":{"interfaces/PanelLoadStatus.html":{},"components/RoverPanelComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["panel'},{'name",{"_index":200,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DetailsComponent.html":{},"components/ErrorDialogLauncherComponent.html":{},"components/ErrorDialogPopupComponent.html":{},"components/LoaderComponent.html":{},"components/PaginatorComponent.html":{},"components/RoverPanelComponent.html":{},"components/RoverPhotosComponent.html":{}}}],["panel.component",{"_index":311,"title":{},"body":{"modules/DashboardModule.html":{}}}],["panel.component.html",{"_index":674,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["panel.component.scss",{"_index":673,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["panel.component.ts",{"_index":672,"title":{},"body":{"components/RoverPanelComponent.html":{},"coverage.html":{}}}],["panel.component.ts:101",{"_index":718,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["panel.component.ts:105",{"_index":738,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["panel.component.ts:109",{"_index":732,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["panel.component.ts:113",{"_index":725,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["panel.component.ts:117",{"_index":716,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["panel.component.ts:121",{"_index":737,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["panel.component.ts:125",{"_index":730,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["panel.component.ts:129",{"_index":741,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["panel.component.ts:134",{"_index":744,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["panel.component.ts:136",{"_index":700,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["panel.component.ts:149",{"_index":711,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["panel.component.ts:157",{"_index":705,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["panel.component.ts:164",{"_index":702,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["panel.component.ts:172",{"_index":708,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["panel.component.ts:182",{"_index":709,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["panel.component.ts:191",{"_index":713,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["panel.component.ts:218",{"_index":712,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["panel.component.ts:26",{"_index":701,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["panel.component.ts:31",{"_index":739,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["panel.component.ts:35",{"_index":721,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["panel.component.ts:39",{"_index":719,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["panel.component.ts:43",{"_index":723,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["panel.component.ts:47",{"_index":722,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["panel.component.ts:51",{"_index":720,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["panel.component.ts:55",{"_index":717,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["panel.component.ts:59",{"_index":733,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["panel.component.ts:63",{"_index":727,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["panel.component.ts:68",{"_index":726,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["panel.component.ts:72",{"_index":724,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["panel.component.ts:76",{"_index":728,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["panel.component.ts:80",{"_index":729,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["panel.component.ts:84",{"_index":742,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["panel.component.ts:88",{"_index":735,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["panel.component.ts:92",{"_index":740,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["panel.component.ts:96",{"_index":714,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["panel/rover",{"_index":310,"title":{},"body":{"modules/DashboardModule.html":{},"components/RoverPanelComponent.html":{},"coverage.html":{}}}],["panelloadstatus",{"_index":640,"title":{"interfaces/PanelLoadStatus.html":{}},"body":{"interfaces/PanelLoadStatus.html":{},"coverage.html":{}}}],["panels",{"_index":306,"title":{},"body":{"modules/DashboardModule.html":{},"interfaces/StoreState.html":{},"miscellaneous/variables.html":{}}}],["param",{"_index":117,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DetailsComponent.html":{},"components/ErrorDialogLauncherComponent.html":{},"components/ErrorDialogPopupComponent.html":{},"components/RoverPanelComponent.html":{},"components/RoverPhotosComponent.html":{},"injectables/StoreEffects.html":{},"classes/Utils.html":{}}}],["parameters",{"_index":85,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DetailsComponent.html":{},"components/ErrorDialogLauncherComponent.html":{},"components/ErrorDialogPopupComponent.html":{},"components/PaginatorComponent.html":{},"components/RoverPanelComponent.html":{},"components/RoverPhotosComponent.html":{},"injectables/StoreEffects.html":{},"classes/Utils.html":{},"miscellaneous/variables.html":{}}}],["params",{"_index":918,"title":{},"body":{"injectables/StoreEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["params)?.length",{"_index":1344,"title":{},"body":{"miscellaneous/variables.html":{}}}],["params[\"code\"])?.roverphotoscurrentpage",{"_index":1281,"title":{},"body":{"miscellaneous/variables.html":{}}}],["params[details_params.camera",{"_index":923,"title":{},"body":{"injectables/StoreEffects.html":{}}}],["params[details_params.code",{"_index":928,"title":{},"body":{"injectables/StoreEffects.html":{}}}],["params[details_params.sol",{"_index":922,"title":{},"body":{"injectables/StoreEffects.html":{}}}],["params[rover_constants.details_params.camera",{"_index":1317,"title":{},"body":{"miscellaneous/variables.html":{}}}],["params[rover_constants.details_params.code",{"_index":1274,"title":{},"body":{"miscellaneous/variables.html":{}}}],["params[rover_constants.details_params.sol",{"_index":1314,"title":{},"body":{"miscellaneous/variables.html":{}}}],["params[rover_constants.details_params.sol])?.cameras",{"_index":1308,"title":{},"body":{"miscellaneous/variables.html":{}}}],["path",{"_index":260,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/DetailsRoutingModule.html":{}}}],["pathmatch",{"_index":271,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["photo",{"_index":8,"title":{},"body":{"interfaces/APIPhotoCameraResponse.html":{},"interfaces/APIPhotoDataReponse.html":{},"interfaces/APIPhotoResponse.html":{},"interfaces/APIPhotoRoverResponse.html":{},"interfaces/ApiManifest.html":{},"components/DetailsComponent.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestPhoto.html":{},"interfaces/Rover.html":{},"interfaces/RoverCamera.html":{},"interfaces/RoverListItem.html":{},"components/RoverPanelComponent.html":{},"interfaces/RoverPhoto.html":{},"components/RoverPhotosComponent.html":{},"interfaces/RoverPhotosRequest.html":{},"miscellaneous/variables.html":{}}}],["photo_camera",{"_index":816,"title":{},"body":{"components/RoverPanelComponent.html":{},"components/RoverPhotosComponent.html":{}}}],["photo_library",{"_index":819,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["photo_manifest",{"_index":55,"title":{},"body":{"interfaces/APIPhotoCameraResponse.html":{},"interfaces/APIPhotoDataReponse.html":{},"interfaces/APIPhotoResponse.html":{},"interfaces/APIPhotoRoverResponse.html":{},"interfaces/ApiManifest.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestPhoto.html":{}}}],["photos",{"_index":29,"title":{},"body":{"interfaces/APIPhotoCameraResponse.html":{},"interfaces/APIPhotoDataReponse.html":{},"interfaces/APIPhotoResponse.html":{},"interfaces/APIPhotoRoverResponse.html":{},"interfaces/ApiManifest.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DetailsComponent.html":{},"modules/DetailsModule.html":{},"components/ErrorDialogLauncherComponent.html":{},"components/ErrorDialogPopupComponent.html":{},"components/LoaderComponent.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestPhoto.html":{},"components/PaginatorComponent.html":{},"interfaces/Rover.html":{},"interfaces/RoverCamera.html":{},"interfaces/RoverListItem.html":{},"components/RoverPanelComponent.html":{},"interfaces/RoverPhoto.html":{},"components/RoverPhotosComponent.html":{},"interfaces/RoverPhotosRequest.html":{},"injectables/StoreEffects.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["photos.component",{"_index":313,"title":{},"body":{"modules/DashboardModule.html":{}}}],["photos.component.html",{"_index":852,"title":{},"body":{"components/RoverPhotosComponent.html":{}}}],["photos.component.scss",{"_index":851,"title":{},"body":{"components/RoverPhotosComponent.html":{}}}],["photos.component.ts",{"_index":850,"title":{},"body":{"components/RoverPhotosComponent.html":{},"coverage.html":{}}}],["photos.component.ts:19",{"_index":856,"title":{},"body":{"components/RoverPhotosComponent.html":{}}}],["photos.component.ts:23",{"_index":855,"title":{},"body":{"components/RoverPhotosComponent.html":{}}}],["photos.component.ts:38",{"_index":858,"title":{},"body":{"components/RoverPhotosComponent.html":{}}}],["photos.component.ts:46",{"_index":861,"title":{},"body":{"components/RoverPhotosComponent.html":{}}}],["photos/api/v1/manifests/${rover}?api_key=${this.apikey",{"_index":122,"title":{},"body":{"injectables/ApiService.html":{}}}],["photos/api/v1/rovers/${rover}/photos?${queryparams.join",{"_index":130,"title":{},"body":{"injectables/ApiService.html":{}}}],["photos/rover",{"_index":312,"title":{},"body":{"modules/DashboardModule.html":{},"components/RoverPhotosComponent.html":{},"coverage.html":{}}}],["photos_pages",{"_index":1129,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["photos_per_page",{"_index":993,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["photosfirstpage",{"_index":572,"title":{},"body":{"components/PaginatorComponent.html":{}}}],["photoslastpage",{"_index":573,"title":{},"body":{"components/PaginatorComponent.html":{}}}],["photoslist",{"_index":691,"title":{},"body":{"components/RoverPanelComponent.html":{},"miscellaneous/variables.html":{}}}],["photoslist[1].slice(init",{"_index":1341,"title":{},"body":{"miscellaneous/variables.html":{}}}],["photosnextpage",{"_index":574,"title":{},"body":{"components/PaginatorComponent.html":{}}}],["photospages",{"_index":650,"title":{},"body":{"interfaces/Rover.html":{},"interfaces/RoverCamera.html":{},"interfaces/RoverListItem.html":{},"interfaces/RoverPhoto.html":{},"interfaces/RoverPhotosRequest.html":{},"miscellaneous/enumerations.html":{}}}],["photospreviouspage",{"_index":575,"title":{},"body":{"components/PaginatorComponent.html":{}}}],["photosrover.sol",{"_index":1307,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pipe(delay(0",{"_index":937,"title":{},"body":{"injectables/StoreEffects.html":{}}}],["pipe(take(1",{"_index":391,"title":{},"body":{"components/DetailsComponent.html":{}}}],["pipe(take(1)).subscribe(([cameraslist",{"_index":172,"title":{},"body":{"components/AppComponent.html":{}}}],["pnanel",{"_index":661,"title":{},"body":{"interfaces/Rover.html":{},"interfaces/RoverCamera.html":{},"interfaces/RoverListItem.html":{},"interfaces/RoverPhoto.html":{},"interfaces/RoverPhotosRequest.html":{}}}],["points",{"_index":108,"title":{},"body":{"injectables/ApiService.html":{}}}],["popup",{"_index":508,"title":{},"body":{"components/ErrorDialogPopupComponent.html":{}}}],["popup'},{'name",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DetailsComponent.html":{},"components/ErrorDialogLauncherComponent.html":{},"components/ErrorDialogPopupComponent.html":{},"components/LoaderComponent.html":{},"components/PaginatorComponent.html":{},"components/RoverPanelComponent.html":{},"components/RoverPhotosComponent.html":{}}}],["popup.component",{"_index":499,"title":{},"body":{"components/ErrorDialogLauncherComponent.html":{},"modules/SharedModule.html":{}}}],["popup.component.html",{"_index":510,"title":{},"body":{"components/ErrorDialogPopupComponent.html":{}}}],["popup.component.scss",{"_index":509,"title":{},"body":{"components/ErrorDialogPopupComponent.html":{}}}],["popup.component.ts",{"_index":506,"title":{},"body":{"components/ErrorDialogPopupComponent.html":{},"coverage.html":{}}}],["popup.component.ts:13",{"_index":513,"title":{},"body":{"components/ErrorDialogPopupComponent.html":{}}}],["popup.component.ts:20",{"_index":518,"title":{},"body":{"components/ErrorDialogPopupComponent.html":{}}}],["popup.component.ts:21",{"_index":517,"title":{},"body":{"components/ErrorDialogPopupComponent.html":{}}}],["popup/error",{"_index":498,"title":{},"body":{"components/ErrorDialogLauncherComponent.html":{},"components/ErrorDialogPopupComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["press",{"_index":588,"title":{},"body":{"components/PaginatorComponent.html":{},"components/RoverPanelComponent.html":{}}}],["previous",{"_index":594,"title":{},"body":{"components/PaginatorComponent.html":{},"components/RoverPanelComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["previousbuttonenabled",{"_index":692,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["previouspageaction",{"_index":693,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["private",{"_index":118,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DetailsComponent.html":{},"components/RoverPanelComponent.html":{},"components/RoverPhotosComponent.html":{},"injectables/StoreEffects.html":{}}}],["process",{"_index":1252,"title":{},"body":{"miscellaneous/variables.html":{}}}],["produced",{"_index":1296,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":295,"title":{},"body":{"components/DashboardComponent.html":{}}}],["properties",{"_index":13,"title":{"properties.html":{}},"body":{"interfaces/APIPhotoCameraResponse.html":{},"interfaces/APIPhotoDataReponse.html":{},"interfaces/APIPhotoResponse.html":{},"interfaces/APIPhotoRoverResponse.html":{},"interfaces/ApiManifest.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DetailsComponent.html":{},"interfaces/ErrorDialogData.html":{},"components/ErrorDialogLauncherComponent.html":{},"components/ErrorDialogPopupComponent.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestPhoto.html":{},"components/PaginatorComponent.html":{},"interfaces/PanelLoadStatus.html":{},"interfaces/Rover.html":{},"interfaces/RoverCamera.html":{},"interfaces/RoverListItem.html":{},"components/RoverPanelComponent.html":{},"interfaces/RoverPhoto.html":{},"interfaces/RoverPhotosRequest.html":{},"injectables/StoreEffects.html":{},"interfaces/StoreState.html":{},"properties.html":{}}}],["props",{"_index":1242,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provided",{"_index":1136,"title":{},"body":{"index.html":{}}}],["providedin",{"_index":114,"title":{},"body":{"injectables/ApiService.html":{}}}],["providers",{"_index":254,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["provides",{"_index":340,"title":{},"body":{"components/DetailsComponent.html":{},"classes/Utils.html":{}}}],["public",{"_index":479,"title":{},"body":{"components/ErrorDialogLauncherComponent.html":{},"components/ErrorDialogPopupComponent.html":{}}}],["query",{"_index":1350,"title":{},"body":{"miscellaneous/variables.html":{}}}],["queryparams",{"_index":125,"title":{},"body":{"injectables/ApiService.html":{}}}],["queryparams.push(`api_key=${this.apikey",{"_index":129,"title":{},"body":{"injectables/ApiService.html":{}}}],["queryparams.push(`camera=${requestdata.camera",{"_index":128,"title":{},"body":{"injectables/ApiService.html":{}}}],["queryparams.push(`sol=${requestdata.sol",{"_index":126,"title":{},"body":{"injectables/ApiService.html":{}}}],["radius",{"_index":833,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["readonly",{"_index":119,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DetailsComponent.html":{},"components/RoverPanelComponent.html":{},"components/RoverPhotosComponent.html":{},"injectables/StoreEffects.html":{}}}],["ready",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"interfaces/StoreState.html":{},"miscellaneous/variables.html":{}}}],["rear_hazcam_left",{"_index":1190,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["rear_hazcam_right",{"_index":1191,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["received",{"_index":65,"title":{},"body":{"interfaces/APIPhotoCameraResponse.html":{},"interfaces/APIPhotoDataReponse.html":{},"interfaces/APIPhotoResponse.html":{},"interfaces/APIPhotoRoverResponse.html":{},"interfaces/ApiManifest.html":{},"components/DashboardComponent.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestPhoto.html":{},"classes/Utils.html":{}}}],["recent",{"_index":810,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["redirectto",{"_index":270,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reducer",{"_index":1239,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reference",{"_index":379,"title":{},"body":{"components/DetailsComponent.html":{},"components/ErrorDialogPopupComponent.html":{},"components/RoverPanelComponent.html":{}}}],["reponse",{"_index":51,"title":{},"body":{"interfaces/APIPhotoCameraResponse.html":{},"interfaces/APIPhotoDataReponse.html":{},"interfaces/APIPhotoResponse.html":{},"interfaces/APIPhotoRoverResponse.html":{},"interfaces/ApiManifest.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestPhoto.html":{}}}],["request",{"_index":101,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/Rover.html":{},"interfaces/RoverCamera.html":{},"interfaces/RoverListItem.html":{},"interfaces/RoverPhoto.html":{},"interfaces/RoverPhotosRequest.html":{}}}],["requestdata",{"_index":97,"title":{},"body":{"injectables/ApiService.html":{}}}],["requestdata.camera",{"_index":127,"title":{},"body":{"injectables/ApiService.html":{}}}],["requestparams",{"_index":921,"title":{},"body":{"injectables/StoreEffects.html":{}}}],["requestparams).pipe",{"_index":925,"title":{},"body":{"injectables/StoreEffects.html":{}}}],["reset",{"_index":214,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"modules/DetailsModule.html":{},"modules/SharedModule.html":{},"miscellaneous/enumerations.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["reset_error_rover",{"_index":1108,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["reset_load_status",{"_index":1118,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["reset_rover_manifest_load",{"_index":1107,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["reseterrorrover",{"_index":1015,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["resetloadstatus",{"_index":1016,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["resetrovermanifestload",{"_index":1017,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["resets",{"_index":1256,"title":{},"body":{"miscellaneous/variables.html":{}}}],["response",{"_index":56,"title":{},"body":{"interfaces/APIPhotoCameraResponse.html":{},"interfaces/APIPhotoDataReponse.html":{},"interfaces/APIPhotoResponse.html":{},"interfaces/APIPhotoRoverResponse.html":{},"interfaces/ApiManifest.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestPhoto.html":{}}}],["results",{"_index":66,"title":{},"body":{"interfaces/APIPhotoCameraResponse.html":{},"interfaces/APIPhotoDataReponse.html":{},"interfaces/APIPhotoResponse.html":{},"interfaces/APIPhotoRoverResponse.html":{},"interfaces/ApiManifest.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DetailsComponent.html":{},"modules/DetailsModule.html":{},"modules/DetailsRoutingModule.html":{},"interfaces/ErrorDialogData.html":{},"components/ErrorDialogLauncherComponent.html":{},"components/ErrorDialogPopupComponent.html":{},"components/LoaderComponent.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestPhoto.html":{},"components/PaginatorComponent.html":{},"interfaces/PanelLoadStatus.html":{},"interfaces/Rover.html":{},"interfaces/RoverCamera.html":{},"interfaces/RoverListItem.html":{},"components/RoverPanelComponent.html":{},"interfaces/RoverPhoto.html":{},"components/RoverPhotosComponent.html":{},"interfaces/RoverPhotosRequest.html":{},"modules/SharedModule.html":{},"injectables/StoreEffects.html":{},"interfaces/StoreState.html":{},"classes/Utils.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":123,"title":{},"body":{"injectables/ApiService.html":{},"components/DetailsComponent.html":{},"components/RoverPanelComponent.html":{},"injectables/StoreEffects.html":{},"classes/Utils.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":94,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DetailsComponent.html":{},"components/ErrorDialogLauncherComponent.html":{},"components/LoaderComponent.html":{},"components/PaginatorComponent.html":{},"components/RoverPanelComponent.html":{},"components/RoverPhotosComponent.html":{},"classes/Utils.html":{},"miscellaneous/variables.html":{}}}],["rhaz",{"_index":1171,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["right",{"_index":835,"title":{},"body":{"components/RoverPanelComponent.html":{},"components/RoverPhotosComponent.html":{}}}],["root",{"_index":115,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{}}}],["root'},{'name",{"_index":184,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DetailsComponent.html":{},"components/ErrorDialogLauncherComponent.html":{},"components/ErrorDialogPopupComponent.html":{},"components/LoaderComponent.html":{},"components/PaginatorComponent.html":{},"components/RoverPanelComponent.html":{},"components/RoverPhotosComponent.html":{}}}],["route",{"_index":935,"title":{},"body":{"injectables/StoreEffects.html":{},"miscellaneous/variables.html":{}}}],["router",{"_index":244,"title":{},"body":{"modules/AppModule.html":{},"components/DetailsComponent.html":{},"components/RoverPhotosComponent.html":{}}}],["router/router.selectors",{"_index":962,"title":{},"body":{"injectables/StoreEffects.html":{}}}],["router_navigated",{"_index":959,"title":{},"body":{"injectables/StoreEffects.html":{}}}],["routermodule",{"_index":257,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/DetailsRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":316,"title":{},"body":{"modules/DashboardRoutingModule.html":{},"modules/DetailsRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":272,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routernavigated",{"_index":906,"title":{},"body":{"injectables/StoreEffects.html":{}}}],["routerreducer",{"_index":235,"title":{},"body":{"modules/AppModule.html":{}}}],["routes",{"_index":258,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DetailsComponent.html":{},"modules/DetailsRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":224,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"modules/DetailsModule.html":{}}}],["routing.module.ts",{"_index":256,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/DashboardRoutingModule.html":{},"modules/DetailsRoutingModule.html":{}}}],["rover",{"_index":23,"title":{"interfaces/Rover.html":{}},"body":{"interfaces/APIPhotoCameraResponse.html":{},"interfaces/APIPhotoDataReponse.html":{},"interfaces/APIPhotoResponse.html":{},"interfaces/APIPhotoRoverResponse.html":{},"interfaces/ApiManifest.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DetailsComponent.html":{},"modules/DetailsModule.html":{},"components/ErrorDialogLauncherComponent.html":{},"components/ErrorDialogPopupComponent.html":{},"components/LoaderComponent.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestPhoto.html":{},"components/PaginatorComponent.html":{},"interfaces/Rover.html":{},"interfaces/RoverCamera.html":{},"interfaces/RoverListItem.html":{},"components/RoverPanelComponent.html":{},"interfaces/RoverPhoto.html":{},"components/RoverPhotosComponent.html":{},"interfaces/RoverPhotosRequest.html":{},"injectables/StoreEffects.html":{},"interfaces/StoreState.html":{},"classes/Utils.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["rover.errorcode",{"_index":1298,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rover.errorloadingmanifest",{"_index":1334,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rover.errormessage",{"_index":1299,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rover.loadedmanifest",{"_index":1333,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rover.loadingmanifest",{"_index":1332,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rover?.photos?.find(photosrover",{"_index":1306,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rover_actions",{"_index":382,"title":{},"body":{"components/DetailsComponent.html":{},"components/RoverPanelComponent.html":{}}}],["rover_actions.gotofirstphotospage",{"_index":800,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["rover_actions.gotolastphotospage",{"_index":806,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["rover_actions.gotonextphotospage",{"_index":804,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["rover_actions.gotopreviousphotospage",{"_index":802,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["rover_actions.loadcamphotos",{"_index":411,"title":{},"body":{"components/DetailsComponent.html":{}}}],["rover_actions.loadrovermanifest",{"_index":798,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["rover_constants.detail_photos_per_page",{"_index":1276,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rover_constants.photos_per_page",{"_index":1340,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rover_constants.rover_fields.cameras",{"_index":1266,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rover_constants.rover_fields.code",{"_index":1289,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rover_constants.rover_fields.current_photos_page",{"_index":1268,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rover_constants.rover_fields.error_loading_manifest",{"_index":1325,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rover_constants.rover_fields.have_manifest",{"_index":1322,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rover_constants.rover_fields.landing_date",{"_index":1330,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rover_constants.rover_fields.launch_date",{"_index":1331,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rover_constants.rover_fields.loaded_manifest",{"_index":1327,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rover_constants.rover_fields.loading_manifest",{"_index":1329,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rover_constants.rover_fields.max_date",{"_index":1335,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rover_constants.rover_fields.max_sol",{"_index":1336,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rover_constants.rover_fields.photos",{"_index":1339,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rover_constants.rover_fields.photos_pages",{"_index":1290,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rover_constants.rover_fields.selected_index",{"_index":1345,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rover_constants.rover_fields.status",{"_index":1346,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rover_constants.rover_fields.total_photos",{"_index":1347,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rover_fields",{"_index":1101,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["rover_id",{"_index":17,"title":{},"body":{"interfaces/APIPhotoCameraResponse.html":{},"interfaces/APIPhotoDataReponse.html":{},"interfaces/APIPhotoResponse.html":{},"interfaces/APIPhotoRoverResponse.html":{},"interfaces/ApiManifest.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestPhoto.html":{}}}],["rover_model",{"_index":167,"title":{},"body":{"components/AppComponent.html":{}}}],["rover_model.rovercamera",{"_index":176,"title":{},"body":{"components/AppComponent.html":{}}}],["rover_model.roverlistitem",{"_index":177,"title":{},"body":{"components/AppComponent.html":{}}}],["rover_selectors",{"_index":383,"title":{},"body":{"components/DetailsComponent.html":{},"components/RoverPanelComponent.html":{}}}],["rover_selectors.getcameraslist",{"_index":788,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["rover_selectors.getcurrentphotospage",{"_index":789,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["rover_selectors.getenablenextbutton",{"_index":795,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["rover_selectors.getenablepreviousbutton",{"_index":792,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["rover_selectors.geterrorloadingmanifestdata",{"_index":772,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["rover_selectors.getexpandedpanelstatus",{"_index":762,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["rover_selectors.gethasmanifest",{"_index":764,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["rover_selectors.getiserrorloadingmanifest",{"_index":770,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["rover_selectors.getisloadedmanifest",{"_index":768,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["rover_selectors.getisloadingmanifest",{"_index":766,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["rover_selectors.getlandingdates",{"_index":776,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["rover_selectors.getlaunchdates",{"_index":774,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["rover_selectors.getmaxdate",{"_index":778,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["rover_selectors.getmaxsol",{"_index":780,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["rover_selectors.getphotoslist",{"_index":784,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["rover_selectors.getphotospages",{"_index":796,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["rover_selectors.getselectedindex",{"_index":760,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["rover_selectors.getstatus",{"_index":786,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["rover_selectors.gettotalphotos",{"_index":782,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["rovercamera",{"_index":27,"title":{"interfaces/RoverCamera.html":{}},"body":{"interfaces/APIPhotoCameraResponse.html":{},"interfaces/APIPhotoDataReponse.html":{},"interfaces/APIPhotoResponse.html":{},"interfaces/APIPhotoRoverResponse.html":{},"interfaces/ApiManifest.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestPhoto.html":{},"interfaces/Rover.html":{},"interfaces/RoverCamera.html":{},"interfaces/RoverListItem.html":{},"components/RoverPanelComponent.html":{},"interfaces/RoverPhoto.html":{},"interfaces/RoverPhotosRequest.html":{},"interfaces/StoreState.html":{},"coverage.html":{}}}],["rovercodeslist",{"_index":969,"title":{},"body":{"interfaces/StoreState.html":{},"miscellaneous/variables.html":{}}}],["roveritem.code",{"_index":1304,"title":{},"body":{"miscellaneous/variables.html":{}}}],["roverlistitem",{"_index":667,"title":{"interfaces/RoverListItem.html":{}},"body":{"interfaces/Rover.html":{},"interfaces/RoverCamera.html":{},"interfaces/RoverListItem.html":{},"interfaces/RoverPhoto.html":{},"interfaces/RoverPhotosRequest.html":{},"coverage.html":{}}}],["roverpage",{"_index":1271,"title":{},"body":{"miscellaneous/variables.html":{}}}],["roverpage.roverphotoscurrentpage",{"_index":1275,"title":{},"body":{"miscellaneous/variables.html":{}}}],["roverpageitem.code",{"_index":1273,"title":{},"body":{"miscellaneous/variables.html":{}}}],["roverpanelcomponent",{"_index":199,"title":{"components/RoverPanelComponent.html":{}},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/DetailsComponent.html":{},"components/ErrorDialogLauncherComponent.html":{},"components/ErrorDialogPopupComponent.html":{},"components/LoaderComponent.html":{},"components/PaginatorComponent.html":{},"components/RoverPanelComponent.html":{},"components/RoverPhotosComponent.html":{},"coverage.html":{},"overview.html":{}}}],["roverphoto",{"_index":384,"title":{"interfaces/RoverPhoto.html":{}},"body":{"components/DetailsComponent.html":{},"interfaces/Rover.html":{},"interfaces/RoverCamera.html":{},"interfaces/RoverListItem.html":{},"interfaces/RoverPhoto.html":{},"interfaces/RoverPhotosRequest.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["roverphoto.camera",{"_index":1316,"title":{},"body":{"miscellaneous/variables.html":{}}}],["roverphotos",{"_index":651,"title":{},"body":{"interfaces/Rover.html":{},"interfaces/RoverCamera.html":{},"interfaces/RoverListItem.html":{},"interfaces/RoverPhoto.html":{},"interfaces/RoverPhotosRequest.html":{}}}],["roverphotoscomponent",{"_index":201,"title":{"components/RoverPhotosComponent.html":{}},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"components/DetailsComponent.html":{},"components/ErrorDialogLauncherComponent.html":{},"components/ErrorDialogPopupComponent.html":{},"components/LoaderComponent.html":{},"components/PaginatorComponent.html":{},"components/RoverPanelComponent.html":{},"components/RoverPhotosComponent.html":{},"coverage.html":{},"overview.html":{}}}],["roverphotoscurrentpage",{"_index":652,"title":{},"body":{"interfaces/Rover.html":{},"interfaces/RoverCamera.html":{},"interfaces/RoverListItem.html":{},"interfaces/RoverPhoto.html":{},"interfaces/RoverPhotosRequest.html":{}}}],["roverphotosrequest",{"_index":98,"title":{"interfaces/RoverPhotosRequest.html":{}},"body":{"injectables/ApiService.html":{},"interfaces/Rover.html":{},"interfaces/RoverCamera.html":{},"interfaces/RoverListItem.html":{},"interfaces/RoverPhoto.html":{},"interfaces/RoverPhotosRequest.html":{},"injectables/StoreEffects.html":{},"coverage.html":{}}}],["roverphotostotalitems",{"_index":653,"title":{},"body":{"interfaces/Rover.html":{},"interfaces/RoverCamera.html":{},"interfaces/RoverListItem.html":{},"interfaces/RoverPhoto.html":{},"interfaces/RoverPhotosRequest.html":{}}}],["roverphotostotalpages",{"_index":654,"title":{},"body":{"interfaces/Rover.html":{},"interfaces/RoverCamera.html":{},"interfaces/RoverListItem.html":{},"interfaces/RoverPhoto.html":{},"interfaces/RoverPhotosRequest.html":{}}}],["rovers",{"_index":28,"title":{},"body":{"interfaces/APIPhotoCameraResponse.html":{},"interfaces/APIPhotoDataReponse.html":{},"interfaces/APIPhotoResponse.html":{},"interfaces/APIPhotoRoverResponse.html":{},"interfaces/ApiManifest.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestPhoto.html":{},"interfaces/StoreState.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["roverslist",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"interfaces/StoreState.html":{},"miscellaneous/variables.html":{}}}],["roversol.sol",{"_index":1313,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rows",{"_index":439,"title":{},"body":{"components/DetailsComponent.html":{},"components/RoverPanelComponent.html":{}}}],["run",{"_index":1142,"title":{},"body":{"index.html":{}}}],["running",{"_index":1145,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":111,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DetailsComponent.html":{},"components/RoverPanelComponent.html":{},"injectables/StoreEffects.html":{},"classes/Utils.html":{},"dependencies.html":{}}}],["rxjs/ajax",{"_index":165,"title":{},"body":{"components/AppComponent.html":{}}}],["rxjs/operators",{"_index":500,"title":{},"body":{"components/ErrorDialogLauncherComponent.html":{}}}],["scale(2",{"_index":530,"title":{},"body":{"components/ErrorDialogPopupComponent.html":{}}}],["screen",{"_index":442,"title":{},"body":{"components/DetailsComponent.html":{},"components/RoverPanelComponent.html":{}}}],["section",{"_index":823,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["see",{"_index":821,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["selected",{"_index":660,"title":{},"body":{"interfaces/Rover.html":{},"interfaces/RoverCamera.html":{},"interfaces/RoverListItem.html":{},"components/RoverPanelComponent.html":{},"interfaces/RoverPhoto.html":{},"interfaces/RoverPhotosRequest.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["selected_index",{"_index":1127,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["selected_tab_changed",{"_index":1117,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["selectedindex",{"_index":655,"title":{},"body":{"interfaces/Rover.html":{},"interfaces/RoverCamera.html":{},"interfaces/RoverListItem.html":{},"components/RoverPanelComponent.html":{},"interfaces/RoverPhoto.html":{},"interfaces/RoverPhotosRequest.html":{},"miscellaneous/enumerations.html":{}}}],["selectedtabchanged",{"_index":1018,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selector",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DetailsComponent.html":{},"components/ErrorDialogLauncherComponent.html":{},"components/ErrorDialogPopupComponent.html":{},"components/LoaderComponent.html":{},"components/PaginatorComponent.html":{},"components/RoverPanelComponent.html":{},"components/RoverPhotosComponent.html":{},"classes/Utils.html":{},"miscellaneous/variables.html":{}}}],["selectors",{"_index":160,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"injectables/StoreEffects.html":{},"miscellaneous/variables.html":{}}}],["selectrouteparam(rover_constants.details_params.code",{"_index":1282,"title":{},"body":{"miscellaneous/variables.html":{}}}],["selectrouteparams",{"_index":961,"title":{},"body":{"injectables/StoreEffects.html":{},"miscellaneous/variables.html":{}}}],["selectstate",{"_index":1078,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["server",{"_index":1140,"title":{},"body":{"index.html":{}}}],["service",{"_index":72,"title":{},"body":{"injectables/ApiService.html":{},"components/DetailsComponent.html":{},"components/ErrorDialogLauncherComponent.html":{},"injectables/StoreEffects.html":{}}}],["services",{"_index":74,"title":{},"body":{"injectables/ApiService.html":{},"components/DashboardComponent.html":{},"injectables/StoreEffects.html":{}}}],["services/app.services",{"_index":958,"title":{},"body":{"injectables/StoreEffects.html":{}}}],["set",{"_index":283,"title":{},"body":{"components/DashboardComponent.html":{},"miscellaneous/enumerations.html":{}}}],["set(rover?.roverphotos",{"_index":1311,"title":{},"body":{"miscellaneous/variables.html":{}}}],["set_initial_data",{"_index":1102,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["setactions",{"_index":335,"title":{},"body":{"components/DetailsComponent.html":{},"components/RoverPanelComponent.html":{}}}],["setinitialdata",{"_index":1019,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["sets",{"_index":351,"title":{},"body":{"components/DetailsComponent.html":{},"components/RoverPanelComponent.html":{},"miscellaneous/variables.html":{}}}],["setsubscriptions",{"_index":699,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["shared",{"_index":874,"title":{},"body":{"modules/SharedModule.html":{}}}],["shared/shared.module",{"_index":307,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DetailsModule.html":{}}}],["sharedmodule",{"_index":303,"title":{"modules/SharedModule.html":{}},"body":{"modules/DashboardModule.html":{},"modules/DetailsModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["sherloc_watson",{"_index":1193,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["show",{"_index":305,"title":{},"body":{"modules/DashboardModule.html":{},"components/DetailsComponent.html":{},"modules/DetailsModule.html":{},"interfaces/ErrorDialogData.html":{},"components/ErrorDialogLauncherComponent.html":{},"components/ErrorDialogPopupComponent.html":{},"components/PaginatorComponent.html":{},"interfaces/Rover.html":{},"interfaces/RoverCamera.html":{},"interfaces/RoverListItem.html":{},"components/RoverPanelComponent.html":{},"interfaces/RoverPhoto.html":{},"components/RoverPhotosComponent.html":{},"interfaces/RoverPhotosRequest.html":{},"interfaces/StoreState.html":{},"miscellaneous/variables.html":{}}}],["showing",{"_index":656,"title":{},"body":{"interfaces/Rover.html":{},"interfaces/RoverCamera.html":{},"interfaces/RoverListItem.html":{},"interfaces/RoverPhoto.html":{},"interfaces/RoverPhotosRequest.html":{}}}],["shown",{"_index":359,"title":{},"body":{"components/DetailsComponent.html":{},"interfaces/Rover.html":{},"interfaces/RoverCamera.html":{},"interfaces/RoverListItem.html":{},"interfaces/RoverPhoto.html":{},"interfaces/RoverPhotosRequest.html":{}}}],["shows",{"_index":539,"title":{},"body":{"components/LoaderComponent.html":{},"components/PaginatorComponent.html":{},"components/RoverPanelComponent.html":{},"index.html":{}}}],["size",{"_index":557,"title":{},"body":{"components/LoaderComponent.html":{},"components/RoverPanelComponent.html":{},"components/RoverPhotosComponent.html":{}}}],["skycam",{"_index":1192,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["sol",{"_index":34,"title":{},"body":{"interfaces/APIPhotoCameraResponse.html":{},"interfaces/APIPhotoDataReponse.html":{},"interfaces/APIPhotoResponse.html":{},"interfaces/APIPhotoRoverResponse.html":{},"interfaces/ApiManifest.html":{},"injectables/ApiService.html":{},"components/DetailsComponent.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestPhoto.html":{},"interfaces/Rover.html":{},"interfaces/RoverCamera.html":{},"interfaces/RoverListItem.html":{},"components/RoverPanelComponent.html":{},"interfaces/RoverPhoto.html":{},"components/RoverPhotosComponent.html":{},"interfaces/RoverPhotosRequest.html":{},"injectables/StoreEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/APIPhotoCameraResponse.html":{},"interfaces/APIPhotoDataReponse.html":{},"interfaces/APIPhotoResponse.html":{},"interfaces/APIPhotoRoverResponse.html":{},"interfaces/ApiManifest.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"modules/DashboardModule.html":{},"modules/DashboardRoutingModule.html":{},"components/DetailsComponent.html":{},"modules/DetailsModule.html":{},"modules/DetailsRoutingModule.html":{},"interfaces/ErrorDialogData.html":{},"components/ErrorDialogLauncherComponent.html":{},"components/ErrorDialogPopupComponent.html":{},"components/LoaderComponent.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestPhoto.html":{},"components/PaginatorComponent.html":{},"interfaces/PanelLoadStatus.html":{},"interfaces/Rover.html":{},"interfaces/RoverCamera.html":{},"interfaces/RoverListItem.html":{},"components/RoverPanelComponent.html":{},"interfaces/RoverPhoto.html":{},"components/RoverPhotosComponent.html":{},"interfaces/RoverPhotosRequest.html":{},"modules/SharedModule.html":{},"injectables/StoreEffects.html":{},"interfaces/StoreState.html":{},"classes/Utils.html":{}}}],["space",{"_index":431,"title":{},"body":{"components/DetailsComponent.html":{},"components/RoverPanelComponent.html":{}}}],["spinner",{"_index":540,"title":{},"body":{"components/LoaderComponent.html":{},"modules/SharedModule.html":{}}}],["src/.../app.actions.ts",{"_index":1099,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../app.reducers.ts",{"_index":1197,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.selectors.ts",{"_index":1198,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.state.ts",{"_index":1199,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../constants.ts",{"_index":1100,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../router.selectors.ts",{"_index":1200,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":255,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:28",{"_index":149,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:41",{"_index":150,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":216,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/models/constants.ts",{"_index":989,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/models/error.ts",{"_index":469,"title":{},"body":{"interfaces/ErrorDialogData.html":{},"coverage.html":{}}}],["src/app/models/manifest.ts",{"_index":6,"title":{},"body":{"interfaces/APIPhotoCameraResponse.html":{},"interfaces/APIPhotoDataReponse.html":{},"interfaces/APIPhotoResponse.html":{},"interfaces/APIPhotoRoverResponse.html":{},"interfaces/ApiManifest.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestPhoto.html":{},"coverage.html":{}}}],["src/app/models/rovers",{"_index":385,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/models/rovers.ts",{"_index":643,"title":{},"body":{"interfaces/Rover.html":{},"interfaces/RoverCamera.html":{},"interfaces/RoverListItem.html":{},"interfaces/RoverPhoto.html":{},"interfaces/RoverPhotosRequest.html":{},"coverage.html":{}}}],["src/app/models/store.ts",{"_index":641,"title":{},"body":{"interfaces/PanelLoadStatus.html":{},"coverage.html":{}}}],["src/app/modules/dashboard/components/dashboard/dashboard.component.ts",{"_index":274,"title":{},"body":{"components/DashboardComponent.html":{},"coverage.html":{}}}],["src/app/modules/dashboard/components/dashboard/dashboard.component.ts:19",{"_index":279,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/modules/dashboard/components/dashboard/dashboard.component.ts:32",{"_index":280,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/modules/dashboard/components/rover",{"_index":671,"title":{},"body":{"components/RoverPanelComponent.html":{},"components/RoverPhotosComponent.html":{},"coverage.html":{}}}],["src/app/modules/dashboard/dashboard",{"_index":314,"title":{},"body":{"modules/DashboardRoutingModule.html":{}}}],["src/app/modules/dashboard/dashboard.module.ts",{"_index":304,"title":{},"body":{"modules/DashboardModule.html":{}}}],["src/app/modules/details/components/details/details.component.ts",{"_index":318,"title":{},"body":{"components/DetailsComponent.html":{},"coverage.html":{}}}],["src/app/modules/details/components/details/details.component.ts:109",{"_index":350,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/details/components/details/details.component.ts:125",{"_index":357,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/details/components/details/details.component.ts:23",{"_index":371,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/details/components/details/details.component.ts:28",{"_index":374,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/details/components/details/details.component.ts:32",{"_index":373,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/details/components/details/details.component.ts:36",{"_index":364,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/details/components/details/details.component.ts:40",{"_index":362,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/details/components/details/details.component.ts:45",{"_index":368,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/details/components/details/details.component.ts:49",{"_index":361,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/details/components/details/details.component.ts:53",{"_index":375,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/details/components/details/details.component.ts:57",{"_index":358,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/details/components/details/details.component.ts:62",{"_index":378,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/details/components/details/details.component.ts:64",{"_index":339,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/details/components/details/details.component.ts:79",{"_index":353,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/details/components/details/details.component.ts:87",{"_index":343,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/details/components/details/details.component.ts:95",{"_index":347,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/details/details",{"_index":467,"title":{},"body":{"modules/DetailsRoutingModule.html":{}}}],["src/app/modules/details/details.module.ts",{"_index":465,"title":{},"body":{"modules/DetailsModule.html":{}}}],["src/app/modules/shared/components/error",{"_index":474,"title":{},"body":{"components/ErrorDialogLauncherComponent.html":{},"components/ErrorDialogPopupComponent.html":{},"coverage.html":{}}}],["src/app/modules/shared/components/loader/loader.component.ts",{"_index":538,"title":{},"body":{"components/LoaderComponent.html":{},"coverage.html":{}}}],["src/app/modules/shared/components/loader/loader.component.ts:18",{"_index":547,"title":{},"body":{"components/LoaderComponent.html":{}}}],["src/app/modules/shared/components/loader/loader.component.ts:22",{"_index":546,"title":{},"body":{"components/LoaderComponent.html":{}}}],["src/app/modules/shared/components/loader/loader.component.ts:27",{"_index":549,"title":{},"body":{"components/LoaderComponent.html":{}}}],["src/app/modules/shared/components/paginator/paginator.component.ts",{"_index":561,"title":{},"body":{"components/PaginatorComponent.html":{},"coverage.html":{}}}],["src/app/modules/shared/components/paginator/paginator.component.ts:104",{"_index":620,"title":{},"body":{"components/PaginatorComponent.html":{}}}],["src/app/modules/shared/components/paginator/paginator.component.ts:111",{"_index":619,"title":{},"body":{"components/PaginatorComponent.html":{}}}],["src/app/modules/shared/components/paginator/paginator.component.ts:118",{"_index":613,"title":{},"body":{"components/PaginatorComponent.html":{}}}],["src/app/modules/shared/components/paginator/paginator.component.ts:20",{"_index":602,"title":{},"body":{"components/PaginatorComponent.html":{}}}],["src/app/modules/shared/components/paginator/paginator.component.ts:24",{"_index":585,"title":{},"body":{"components/PaginatorComponent.html":{}}}],["src/app/modules/shared/components/paginator/paginator.component.ts:28",{"_index":593,"title":{},"body":{"components/PaginatorComponent.html":{}}}],["src/app/modules/shared/components/paginator/paginator.component.ts:32",{"_index":591,"title":{},"body":{"components/PaginatorComponent.html":{}}}],["src/app/modules/shared/components/paginator/paginator.component.ts:36",{"_index":590,"title":{},"body":{"components/PaginatorComponent.html":{}}}],["src/app/modules/shared/components/paginator/paginator.component.ts:41",{"_index":595,"title":{},"body":{"components/PaginatorComponent.html":{}}}],["src/app/modules/shared/components/paginator/paginator.component.ts:45",{"_index":605,"title":{},"body":{"components/PaginatorComponent.html":{}}}],["src/app/modules/shared/components/paginator/paginator.component.ts:49",{"_index":601,"title":{},"body":{"components/PaginatorComponent.html":{}}}],["src/app/modules/shared/components/paginator/paginator.component.ts:53",{"_index":598,"title":{},"body":{"components/PaginatorComponent.html":{}}}],["src/app/modules/shared/components/paginator/paginator.component.ts:58",{"_index":606,"title":{},"body":{"components/PaginatorComponent.html":{}}}],["src/app/modules/shared/components/paginator/paginator.component.ts:62",{"_index":608,"title":{},"body":{"components/PaginatorComponent.html":{}}}],["src/app/modules/shared/components/paginator/paginator.component.ts:67",{"_index":609,"title":{},"body":{"components/PaginatorComponent.html":{}}}],["src/app/modules/shared/components/paginator/paginator.component.ts:72",{"_index":623,"title":{},"body":{"components/PaginatorComponent.html":{}}}],["src/app/modules/shared/components/paginator/paginator.component.ts:76",{"_index":626,"title":{},"body":{"components/PaginatorComponent.html":{}}}],["src/app/modules/shared/components/paginator/paginator.component.ts:81",{"_index":615,"title":{},"body":{"components/PaginatorComponent.html":{}}}],["src/app/modules/shared/components/paginator/paginator.component.ts:90",{"_index":618,"title":{},"body":{"components/PaginatorComponent.html":{}}}],["src/app/modules/shared/components/paginator/paginator.component.ts:97",{"_index":621,"title":{},"body":{"components/PaginatorComponent.html":{}}}],["src/app/modules/shared/shared.module.ts",{"_index":873,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/app/modules/shared/utils.class.ts",{"_index":974,"title":{},"body":{"classes/Utils.html":{},"coverage.html":{}}}],["src/app/modules/shared/utils.class.ts:15",{"_index":978,"title":{},"body":{"classes/Utils.html":{}}}],["src/app/services/app.services.ts",{"_index":71,"title":{},"body":{"injectables/ApiService.html":{},"coverage.html":{}}}],["src/app/services/app.services.ts:17",{"_index":84,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/app.services.ts:32",{"_index":91,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/services/app.services.ts:43",{"_index":99,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/store/app/app.actions.ts",{"_index":1004,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/app/store/app/app.effects.ts",{"_index":902,"title":{},"body":{"injectables/StoreEffects.html":{},"coverage.html":{}}}],["src/app/store/app/app.effects.ts:19",{"_index":908,"title":{},"body":{"injectables/StoreEffects.html":{}}}],["src/app/store/app/app.effects.ts:35",{"_index":952,"title":{},"body":{"injectables/StoreEffects.html":{}}}],["src/app/store/app/app.effects.ts:48",{"_index":947,"title":{},"body":{"injectables/StoreEffects.html":{}}}],["src/app/store/app/app.effects.ts:76",{"_index":938,"title":{},"body":{"injectables/StoreEffects.html":{}}}],["src/app/store/app/app.reducers.ts",{"_index":1020,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/store/app/app.selectors.ts",{"_index":1042,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/store/app/app.state.ts",{"_index":966,"title":{},"body":{"interfaces/StoreState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/store/router/router.selectors.ts",{"_index":1080,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":830,"title":{},"body":{"components/RoverPanelComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":1134,"title":{"index.html":{}},"body":{}}],["state",{"_index":971,"title":{},"body":{"interfaces/StoreState.html":{},"miscellaneous/variables.html":{}}}],["state?.errorcode",{"_index":1294,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state?.errorloading",{"_index":1324,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state?.errormessage",{"_index":1295,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state?.expandedpanel?.indexof(item",{"_index":1302,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state?.initialdataready",{"_index":1323,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state?.loaded",{"_index":1326,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state?.loading",{"_index":1328,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state?.rovercodeslist",{"_index":1267,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state?.roverslist?.every(item",{"_index":1337,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state?.roverslist?.find(item",{"_index":1279,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state?.roverslist?.find(roveritem",{"_index":1303,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state?.roverslist?.find(roverpageitem",{"_index":1272,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state?.roverslist?.foreach(rover",{"_index":1284,"title":{},"body":{"miscellaneous/variables.html":{}}}],["statements",{"_index":987,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":975,"title":{},"body":{"classes/Utils.html":{}}}],["status",{"_index":25,"title":{},"body":{"interfaces/APIPhotoCameraResponse.html":{},"interfaces/APIPhotoDataReponse.html":{},"interfaces/APIPhotoResponse.html":{},"interfaces/APIPhotoRoverResponse.html":{},"interfaces/ApiManifest.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestPhoto.html":{},"interfaces/PanelLoadStatus.html":{},"components/RoverPanelComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["store",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/DetailsComponent.html":{},"components/LoaderComponent.html":{},"components/PaginatorComponent.html":{},"components/RoverPanelComponent.html":{},"components/RoverPhotosComponent.html":{},"injectables/StoreEffects.html":{},"interfaces/StoreState.html":{},"classes/Utils.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["store.select(selector).pipe(map(data",{"_index":983,"title":{},"body":{"classes/Utils.html":{}}}],["store/app/app.actions",{"_index":163,"title":{},"body":{"components/AppComponent.html":{},"components/DetailsComponent.html":{},"components/RoverPanelComponent.html":{}}}],["store/app/app.effects",{"_index":241,"title":{},"body":{"modules/AppModule.html":{}}}],["store/app/app.reducers",{"_index":239,"title":{},"body":{"modules/AppModule.html":{}}}],["store/app/app.selectors",{"_index":161,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DetailsComponent.html":{},"components/RoverPanelComponent.html":{}}}],["store/app/app.state",{"_index":159,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DetailsComponent.html":{},"components/RoverPanelComponent.html":{}}}],["storedevtoolsmodule",{"_index":231,"title":{},"body":{"modules/AppModule.html":{}}}],["storedevtoolsmodule.instrument",{"_index":246,"title":{},"body":{"modules/AppModule.html":{}}}],["storeeffects",{"_index":240,"title":{"injectables/StoreEffects.html":{}},"body":{"modules/AppModule.html":{},"injectables/StoreEffects.html":{},"coverage.html":{}}}],["storemodule",{"_index":228,"title":{},"body":{"modules/AppModule.html":{}}}],["storemodule.forroot",{"_index":243,"title":{},"body":{"modules/AppModule.html":{}}}],["storereducer",{"_index":238,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{}}}],["storeref",{"_index":337,"title":{},"body":{"components/DetailsComponent.html":{},"components/RoverPanelComponent.html":{}}}],["storerouterconnectingmodule",{"_index":236,"title":{},"body":{"modules/AppModule.html":{}}}],["storerouterconnectingmodule.forroot",{"_index":253,"title":{},"body":{"modules/AppModule.html":{}}}],["storestate",{"_index":158,"title":{"interfaces/StoreState.html":{}},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DetailsComponent.html":{},"components/RoverPanelComponent.html":{},"injectables/StoreEffects.html":{},"interfaces/StoreState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["string",{"_index":18,"title":{},"body":{"interfaces/APIPhotoCameraResponse.html":{},"interfaces/APIPhotoDataReponse.html":{},"interfaces/APIPhotoResponse.html":{},"interfaces/APIPhotoRoverResponse.html":{},"interfaces/ApiManifest.html":{},"injectables/ApiService.html":{},"components/DetailsComponent.html":{},"interfaces/ErrorDialogData.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestPhoto.html":{},"interfaces/Rover.html":{},"interfaces/RoverCamera.html":{},"interfaces/RoverListItem.html":{},"components/RoverPanelComponent.html":{},"interfaces/RoverPhoto.html":{},"components/RoverPhotosComponent.html":{},"interfaces/RoverPhotosRequest.html":{},"injectables/StoreEffects.html":{},"interfaces/StoreState.html":{},"classes/Utils.html":{},"miscellaneous/variables.html":{}}}],["styles",{"_index":317,"title":{},"body":{"components/DetailsComponent.html":{},"components/ErrorDialogPopupComponent.html":{},"components/LoaderComponent.html":{},"components/PaginatorComponent.html":{},"components/RoverPanelComponent.html":{},"components/RoverPhotosComponent.html":{}}}],["styleurls",{"_index":320,"title":{},"body":{"components/DetailsComponent.html":{},"components/ErrorDialogPopupComponent.html":{},"components/LoaderComponent.html":{},"components/PaginatorComponent.html":{},"components/RoverPanelComponent.html":{},"components/RoverPhotosComponent.html":{}}}],["subscribe((rover",{"_index":392,"title":{},"body":{"components/DetailsComponent.html":{}}}],["subscriptions",{"_index":356,"title":{},"body":{"components/DetailsComponent.html":{},"components/RoverPanelComponent.html":{}}}],["subscritpions",{"_index":352,"title":{},"body":{"components/DetailsComponent.html":{},"components/RoverPanelComponent.html":{}}}],["success",{"_index":1105,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["support",{"_index":1158,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1159,"title":{},"body":{"modules.html":{}}}],["switchmap",{"_index":949,"title":{},"body":{"injectables/StoreEffects.html":{}}}],["switchmap(([_action",{"_index":917,"title":{},"body":{"injectables/StoreEffects.html":{}}}],["switchmap(action",{"_index":941,"title":{},"body":{"injectables/StoreEffects.html":{}}}],["tab",{"_index":659,"title":{},"body":{"interfaces/Rover.html":{},"interfaces/RoverCamera.html":{},"interfaces/RoverListItem.html":{},"components/RoverPanelComponent.html":{},"interfaces/RoverPhoto.html":{},"interfaces/RoverPhotosRequest.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["table",{"_index":1082,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1081,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"components/DetailsComponent.html":{},"components/ErrorDialogLauncherComponent.html":{}}}],["taken",{"_index":743,"title":{},"body":{"components/RoverPanelComponent.html":{},"components/RoverPhotosComponent.html":{},"index.html":{}}}],["template",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DetailsComponent.html":{},"components/ErrorDialogLauncherComponent.html":{},"components/ErrorDialogPopupComponent.html":{},"components/LoaderComponent.html":{},"components/PaginatorComponent.html":{},"components/RoverPanelComponent.html":{},"components/RoverPhotosComponent.html":{}}}],["templateurl",{"_index":143,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DetailsComponent.html":{},"components/ErrorDialogPopupComponent.html":{},"components/LoaderComponent.html":{},"components/PaginatorComponent.html":{},"components/RoverPanelComponent.html":{},"components/RoverPhotosComponent.html":{}}}],["text",{"_index":535,"title":{},"body":{"components/ErrorDialogPopupComponent.html":{},"components/LoaderComponent.html":{},"components/RoverPanelComponent.html":{}}}],["this.actions$.pipe",{"_index":911,"title":{},"body":{"injectables/StoreEffects.html":{}}}],["this.apiservice.loadrovermanifest(action.rover).pipe",{"_index":942,"title":{},"body":{"injectables/StoreEffects.html":{}}}],["this.apiservice.loadroverphotos(params[details_params.code",{"_index":924,"title":{},"body":{"injectables/StoreEffects.html":{}}}],["this.cameraslist",{"_index":787,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["this.code",{"_index":751,"title":{},"body":{"components/RoverPanelComponent.html":{},"components/RoverPhotosComponent.html":{}}}],["this.code).pipe(map(value",{"_index":790,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["this.codes",{"_index":285,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.currentpage",{"_index":408,"title":{},"body":{"components/DetailsComponent.html":{},"components/RoverPanelComponent.html":{}}}],["this.detailsdata",{"_index":404,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.dialog.open(errordialogpopupcomponent",{"_index":502,"title":{},"body":{"components/ErrorDialogLauncherComponent.html":{}}}],["this.errordata",{"_index":400,"title":{},"body":{"components/DetailsComponent.html":{},"components/ErrorDialogLauncherComponent.html":{}}}],["this.errorloading",{"_index":398,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.errorloadingmanifestdata",{"_index":771,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["this.firstpageaction",{"_index":799,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["this.hasdetailsdata",{"_index":402,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.hasmanifest",{"_index":763,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["this.http.get(url",{"_index":124,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.initialdataisready",{"_index":168,"title":{},"body":{"components/AppComponent.html":{}}}],["this.initsubscriptions",{"_index":388,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.iserrorloadingmanifest",{"_index":769,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["this.isexpanded",{"_index":761,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["this.isloadedmanifest",{"_index":767,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["this.isloadingmanifest",{"_index":765,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["this.landingdate",{"_index":775,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["this.lastpageaction",{"_index":805,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["this.launchdate",{"_index":773,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["this.loadaction",{"_index":797,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["this.loadcamphotosaction",{"_index":410,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.loaded",{"_index":396,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.loading",{"_index":394,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.maxdate",{"_index":777,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["this.maxsol",{"_index":779,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["this.nextbuttonenabled",{"_index":794,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["this.nextpageaction",{"_index":803,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["this.nomanifestloading",{"_index":756,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["this.onclose.emit",{"_index":505,"title":{},"body":{"components/ErrorDialogLauncherComponent.html":{}}}],["this.pagechange.emit(page.value",{"_index":636,"title":{},"body":{"components/PaginatorComponent.html":{}}}],["this.pageslist",{"_index":629,"title":{},"body":{"components/PaginatorComponent.html":{}}}],["this.photoslist",{"_index":783,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["this.previousbuttonenabled",{"_index":791,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["this.previouspageaction",{"_index":801,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["this.router.navigate(['dashboard",{"_index":389,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.router.navigate(['details",{"_index":862,"title":{},"body":{"components/RoverPhotosComponent.html":{}}}],["this.selectedindex",{"_index":758,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["this.setactions",{"_index":387,"title":{},"body":{"components/DetailsComponent.html":{},"components/RoverPanelComponent.html":{}}}],["this.setsubscriptions",{"_index":749,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["this.status",{"_index":785,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["this.store",{"_index":386,"title":{},"body":{"components/DetailsComponent.html":{},"components/RoverPanelComponent.html":{}}}],["this.store.dispatch(actions.setinitialdata",{"_index":174,"title":{},"body":{"components/AppComponent.html":{}}}],["this.store.dispatch(rover_actions.collapsedpanel",{"_index":752,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["this.store.dispatch(rover_actions.expandedpanel",{"_index":750,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["this.store.dispatch(rover_actions.gotophotospage",{"_index":393,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.store.dispatch(rover_actions.reseterrorrover",{"_index":754,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["this.store.dispatch(rover_actions.resetrovermanifestload",{"_index":755,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["this.store.dispatch(rover_actions.selectedtabchanged",{"_index":753,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["this.store.dispatch(this.action",{"_index":553,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.store.dispatch(this.actionfirst",{"_index":632,"title":{},"body":{"components/PaginatorComponent.html":{}}}],["this.store.dispatch(this.actionlast",{"_index":635,"title":{},"body":{"components/PaginatorComponent.html":{}}}],["this.store.dispatch(this.actionnext",{"_index":634,"title":{},"body":{"components/PaginatorComponent.html":{}}}],["this.store.dispatch(this.actionprevious",{"_index":633,"title":{},"body":{"components/PaginatorComponent.html":{}}}],["this.store.select(rover_selectors.getdetailroverphotoslist",{"_index":405,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.store.select(rover_selectors.getdetailscurrentpage",{"_index":409,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.store.select(rover_selectors.getdetailsrover",{"_index":390,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.store.select(rover_selectors.geterrordata",{"_index":401,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.store.select(rover_selectors.gethasdetailroverphotoslist",{"_index":403,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.store.select(rover_selectors.getiserrorloading",{"_index":399,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.store.select(rover_selectors.getisloaded",{"_index":397,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.store.select(rover_selectors.getisloading",{"_index":395,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.store.select(rover_selectors.getnomanifestloading",{"_index":757,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["this.store.select(rover_selectors.getroverphotolisttotalpages",{"_index":407,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.store.select(selectors.getcodeslist",{"_index":286,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.store.select(selectors.gethasdetailsminimumparams",{"_index":916,"title":{},"body":{"injectables/StoreEffects.html":{}}}],["this.store.select(selectors.gethasmanifest",{"_index":915,"title":{},"body":{"injectables/StoreEffects.html":{}}}],["this.store.select(selectors.getinitialdataisready",{"_index":169,"title":{},"body":{"components/AppComponent.html":{}}}],["this.store.select(selectrouteparams",{"_index":914,"title":{},"body":{"injectables/StoreEffects.html":{}}}],["this.totalpages",{"_index":406,"title":{},"body":{"components/DetailsComponent.html":{},"components/PaginatorComponent.html":{},"components/RoverPanelComponent.html":{}}}],["this.totalphotos",{"_index":781,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["title",{"_index":828,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["titlecase",{"_index":807,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["took",{"_index":60,"title":{},"body":{"interfaces/APIPhotoCameraResponse.html":{},"interfaces/APIPhotoDataReponse.html":{},"interfaces/APIPhotoResponse.html":{},"interfaces/APIPhotoRoverResponse.html":{},"interfaces/ApiManifest.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestPhoto.html":{},"components/RoverPanelComponent.html":{},"components/RoverPhotosComponent.html":{}}}],["tools",{"_index":341,"title":{},"body":{"components/DetailsComponent.html":{}}}],["top",{"_index":559,"title":{},"body":{"components/LoaderComponent.html":{}}}],["total",{"_index":38,"title":{},"body":{"interfaces/APIPhotoCameraResponse.html":{},"interfaces/APIPhotoDataReponse.html":{},"interfaces/APIPhotoResponse.html":{},"interfaces/APIPhotoRoverResponse.html":{},"interfaces/ApiManifest.html":{},"components/DetailsComponent.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestPhoto.html":{},"components/PaginatorComponent.html":{},"interfaces/Rover.html":{},"interfaces/RoverCamera.html":{},"interfaces/RoverListItem.html":{},"components/RoverPanelComponent.html":{},"interfaces/RoverPhoto.html":{},"interfaces/RoverPhotosRequest.html":{},"miscellaneous/variables.html":{}}}],["total_photos",{"_index":40,"title":{},"body":{"interfaces/APIPhotoCameraResponse.html":{},"interfaces/APIPhotoDataReponse.html":{},"interfaces/APIPhotoResponse.html":{},"interfaces/APIPhotoRoverResponse.html":{},"interfaces/ApiManifest.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestPhoto.html":{},"miscellaneous/enumerations.html":{}}}],["totalpages",{"_index":331,"title":{},"body":{"components/DetailsComponent.html":{},"components/PaginatorComponent.html":{},"components/RoverPanelComponent.html":{},"miscellaneous/variables.html":{}}}],["totalphotos",{"_index":694,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["transform",{"_index":529,"title":{},"body":{"components/ErrorDialogPopupComponent.html":{}}}],["tree",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DetailsComponent.html":{},"components/ErrorDialogLauncherComponent.html":{},"components/ErrorDialogPopupComponent.html":{},"components/LoaderComponent.html":{},"components/PaginatorComponent.html":{},"components/RoverPanelComponent.html":{},"components/RoverPhotosComponent.html":{}}}],["true",{"_index":252,"title":{},"body":{"modules/AppModule.html":{},"components/ErrorDialogLauncherComponent.html":{}}}],["tslib",{"_index":1093,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":19,"title":{},"body":{"interfaces/APIPhotoCameraResponse.html":{},"interfaces/APIPhotoDataReponse.html":{},"interfaces/APIPhotoResponse.html":{},"interfaces/APIPhotoRoverResponse.html":{},"interfaces/ApiManifest.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DetailsComponent.html":{},"interfaces/ErrorDialogData.html":{},"components/ErrorDialogLauncherComponent.html":{},"components/ErrorDialogPopupComponent.html":{},"components/LoaderComponent.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestPhoto.html":{},"components/PaginatorComponent.html":{},"interfaces/PanelLoadStatus.html":{},"interfaces/Rover.html":{},"interfaces/RoverCamera.html":{},"interfaces/RoverListItem.html":{},"components/RoverPanelComponent.html":{},"interfaces/RoverPhoto.html":{},"components/RoverPhotosComponent.html":{},"interfaces/RoverPhotosRequest.html":{},"injectables/StoreEffects.html":{},"interfaces/StoreState.html":{},"classes/Utils.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1167,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typedaction",{"_index":545,"title":{},"body":{"components/LoaderComponent.html":{},"components/PaginatorComponent.html":{}}}],["types",{"_index":1169,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["typical",{"_index":1141,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":1283,"title":{},"body":{"miscellaneous/variables.html":{}}}],["up",{"_index":1151,"title":{},"body":{"index.html":{}}}],["upate",{"_index":616,"title":{},"body":{"components/PaginatorComponent.html":{}}}],["uppercase",{"_index":815,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["url",{"_index":61,"title":{},"body":{"interfaces/APIPhotoCameraResponse.html":{},"interfaces/APIPhotoDataReponse.html":{},"interfaces/APIPhotoResponse.html":{},"interfaces/APIPhotoRoverResponse.html":{},"interfaces/ApiManifest.html":{},"injectables/ApiService.html":{},"interfaces/Manifest.html":{},"interfaces/ManifestPhoto.html":{},"interfaces/Rover.html":{},"interfaces/RoverCamera.html":{},"interfaces/RoverListItem.html":{},"interfaces/RoverPhoto.html":{},"interfaces/RoverPhotosRequest.html":{},"index.html":{}}}],["use",{"_index":106,"title":{},"body":{"injectables/ApiService.html":{},"components/PaginatorComponent.html":{},"injectables/StoreEffects.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["usebuttons",{"_index":582,"title":{},"body":{"components/PaginatorComponent.html":{}}}],["used",{"_index":1257,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useeffectserrorhandler",{"_index":951,"title":{},"body":{"injectables/StoreEffects.html":{}}}],["usepageselector",{"_index":583,"title":{},"body":{"components/PaginatorComponent.html":{}}}],["user",{"_index":587,"title":{},"body":{"components/PaginatorComponent.html":{}}}],["uses",{"_index":1135,"title":{},"body":{"index.html":{}}}],["using",{"_index":290,"title":{},"body":{"components/DashboardComponent.html":{},"components/PaginatorComponent.html":{}}}],["utils",{"_index":747,"title":{"classes/Utils.html":{}},"body":{"components/RoverPanelComponent.html":{},"classes/Utils.html":{},"coverage.html":{}}}],["utils.getrovervaluefromstore(this.store",{"_index":759,"title":{},"body":{"components/RoverPanelComponent.html":{}}}],["value",{"_index":103,"title":{},"body":{"injectables/ApiService.html":{},"components/PaginatorComponent.html":{},"components/RoverPanelComponent.html":{},"injectables/StoreEffects.html":{},"classes/Utils.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":663,"title":{},"body":{"interfaces/Rover.html":{},"interfaces/RoverCamera.html":{},"interfaces/RoverListItem.html":{},"interfaces/RoverPhoto.html":{},"interfaces/RoverPhotosRequest.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DetailsComponent.html":{},"components/ErrorDialogLauncherComponent.html":{},"components/ErrorDialogPopupComponent.html":{},"components/LoaderComponent.html":{},"components/PaginatorComponent.html":{},"components/RoverPanelComponent.html":{},"components/RoverPhotosComponent.html":{}}}],["variable",{"_index":990,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1196,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1154,"title":{},"body":{"index.html":{},"properties.html":{}}}],["viewcameraphotos",{"_index":853,"title":{},"body":{"components/RoverPhotosComponent.html":{}}}],["viewcameraphotos(day",{"_index":857,"title":{},"body":{"components/RoverPhotosComponent.html":{}}}],["viewroverphotos",{"_index":854,"title":{},"body":{"components/RoverPhotosComponent.html":{}}}],["viewroverphotos(day",{"_index":860,"title":{},"body":{"components/RoverPhotosComponent.html":{}}}],["void",{"_index":152,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/DetailsComponent.html":{},"components/ErrorDialogLauncherComponent.html":{},"components/LoaderComponent.html":{},"components/PaginatorComponent.html":{},"components/RoverPanelComponent.html":{},"components/RoverPhotosComponent.html":{}}}],["warning",{"_index":521,"title":{},"body":{"components/ErrorDialogPopupComponent.html":{}}}],["weight",{"_index":458,"title":{},"body":{"components/DetailsComponent.html":{},"components/ErrorDialogPopupComponent.html":{},"components/RoverPanelComponent.html":{}}}],["width",{"_index":444,"title":{},"body":{"components/DetailsComponent.html":{},"components/ErrorDialogPopupComponent.html":{},"components/PaginatorComponent.html":{},"components/RoverPanelComponent.html":{}}}],["work",{"_index":342,"title":{},"body":{"components/DetailsComponent.html":{}}}],["zone.js",{"_index":1095,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":213,"title":{},"body":{"modules/AppModule.html":{},"modules/DashboardModule.html":{},"modules/DetailsModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/APIPhotoCameraResponse.html":{"url":"interfaces/APIPhotoCameraResponse.html","title":"interface - APIPhotoCameraResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  APIPhotoCameraResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/manifest.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface with photo camera API information\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            full_name\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            rover_id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        full_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        full_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Full name of camera\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Id of camera\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         CAMERA\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CAMERA\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Name of camera\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rover_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rover_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Id of rover\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { CAMERA, STATUS } from \"./constants\";\nimport { RoverCamera } from \"./rovers\";\n\n/**\n * Interface for information of photos in rover manifest\n */\nexport interface ManifestPhoto {\n  /**\n   * Martian sol of photos\n   */\n  sol?: number;\n  /**\n   * Earth date of photos\n   */\n  earth_date?: string;\n  /**\n   * Total photos of day\n   */\n  total_photos?: number;\n  /**\n   * Camera photos\n   */\n  cameras?: CAMERA[];\n  /**\n   * Camera photos info\n   */\n  camerasInfo?: RoverCamera[];\n}\n\n/**\n * Information about a rover\n */\nexport interface Manifest {\n  /**\n   * Name of rover\n   */\n  name?: string;\n  /**\n   * Landing earth date\n   */\n  landing_date?: string;\n  /**\n   * Launching earth date\n   */\n  launch_date?: string;\n  /**\n   * Status of the rover\n   */\n  status?: STATUS;\n  /**\n   * Last martian day\n   */\n  max_sol?: number;\n  /**\n   * Last earth date\n   */\n  max_date?: string;\n  /**\n   * Total rover photos\n   */\n  total_photos?: number;\n  /**\n   * List of rover photos\n   */\n  photos?: ManifestPhoto[];\n}\n\n/**\n * Interface for the API reponse about the rover manifest\n */\nexport interface ApiManifest {\n  /**\n   * Object with rover photo data\n   */\n  photo_manifest: Manifest\n}\n\n/**\n * Interface with photo camera API information\n */\nexport interface APIPhotoCameraResponse {\n  /**\n   * Id of camera\n   */\n  id: number;\n  /**\n   * Name of camera\n   */\n  name: CAMERA;\n  /**\n   * Id of rover\n   */\n  rover_id: number;\n  /**\n   * Full name of camera\n   */\n  full_name: string;\n}\n\n/**\n * Interface for rover info response\n */\nexport interface APIPhotoRoverResponse {\n  /**\n   * Id for rover\n   */\n  id: number;\n  /**\n   * Rover name\n   */\n  name: string;\n  /**\n   * Landing earth date\n   */\n  landing_date: string;\n  /**\n   * Launch earth date\n   */\n  launch_date: string;\n  /**\n   * Rover status\n   */\n  status: STATUS;\n}\n\n/**\n * Interface with photo information from the API\n */\nexport interface APIPhotoDataReponse {\n  /**\n   * Photo id\n   */\n  id: number;\n  /**\n   * Martian sol of the photo\n   */\n  sol: number;\n  /**\n   * Information about the camera that took the photo\n   */\n  camera: APIPhotoCameraResponse;\n  /**\n   * URL to the image\n   */\n  img_src: string;\n  /**\n   * Earth date of the photo\n   */\n  earth_date: string;\n  /**\n   * Information about the rover that took the photo\n   */\n  rover: APIPhotoRoverResponse;\n}\n\n/**\n * Interface with information about the reponse for photos from the API\n */\nexport interface APIPhotoResponse {\n  /**\n   * List of photos received from the API\n   */\n  photos: APIPhotoDataReponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/APIPhotoDataReponse.html":{"url":"interfaces/APIPhotoDataReponse.html","title":"interface - APIPhotoDataReponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  APIPhotoDataReponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/manifest.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface with photo information from the API\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            camera\n                                        \n                                \n                                \n                                        \n                                            earth_date\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            img_src\n                                        \n                                \n                                \n                                        \n                                            rover\n                                        \n                                \n                                \n                                        \n                                            sol\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        camera\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        camera:         APIPhotoCameraResponse\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         APIPhotoCameraResponse\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Information about the camera that took the photo\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        earth_date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        earth_date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Earth date of the photo\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Photo id\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        img_src\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        img_src:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    URL to the image\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rover\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rover:         APIPhotoRoverResponse\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         APIPhotoRoverResponse\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Information about the rover that took the photo\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sol\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sol:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Martian sol of the photo\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { CAMERA, STATUS } from \"./constants\";\nimport { RoverCamera } from \"./rovers\";\n\n/**\n * Interface for information of photos in rover manifest\n */\nexport interface ManifestPhoto {\n  /**\n   * Martian sol of photos\n   */\n  sol?: number;\n  /**\n   * Earth date of photos\n   */\n  earth_date?: string;\n  /**\n   * Total photos of day\n   */\n  total_photos?: number;\n  /**\n   * Camera photos\n   */\n  cameras?: CAMERA[];\n  /**\n   * Camera photos info\n   */\n  camerasInfo?: RoverCamera[];\n}\n\n/**\n * Information about a rover\n */\nexport interface Manifest {\n  /**\n   * Name of rover\n   */\n  name?: string;\n  /**\n   * Landing earth date\n   */\n  landing_date?: string;\n  /**\n   * Launching earth date\n   */\n  launch_date?: string;\n  /**\n   * Status of the rover\n   */\n  status?: STATUS;\n  /**\n   * Last martian day\n   */\n  max_sol?: number;\n  /**\n   * Last earth date\n   */\n  max_date?: string;\n  /**\n   * Total rover photos\n   */\n  total_photos?: number;\n  /**\n   * List of rover photos\n   */\n  photos?: ManifestPhoto[];\n}\n\n/**\n * Interface for the API reponse about the rover manifest\n */\nexport interface ApiManifest {\n  /**\n   * Object with rover photo data\n   */\n  photo_manifest: Manifest\n}\n\n/**\n * Interface with photo camera API information\n */\nexport interface APIPhotoCameraResponse {\n  /**\n   * Id of camera\n   */\n  id: number;\n  /**\n   * Name of camera\n   */\n  name: CAMERA;\n  /**\n   * Id of rover\n   */\n  rover_id: number;\n  /**\n   * Full name of camera\n   */\n  full_name: string;\n}\n\n/**\n * Interface for rover info response\n */\nexport interface APIPhotoRoverResponse {\n  /**\n   * Id for rover\n   */\n  id: number;\n  /**\n   * Rover name\n   */\n  name: string;\n  /**\n   * Landing earth date\n   */\n  landing_date: string;\n  /**\n   * Launch earth date\n   */\n  launch_date: string;\n  /**\n   * Rover status\n   */\n  status: STATUS;\n}\n\n/**\n * Interface with photo information from the API\n */\nexport interface APIPhotoDataReponse {\n  /**\n   * Photo id\n   */\n  id: number;\n  /**\n   * Martian sol of the photo\n   */\n  sol: number;\n  /**\n   * Information about the camera that took the photo\n   */\n  camera: APIPhotoCameraResponse;\n  /**\n   * URL to the image\n   */\n  img_src: string;\n  /**\n   * Earth date of the photo\n   */\n  earth_date: string;\n  /**\n   * Information about the rover that took the photo\n   */\n  rover: APIPhotoRoverResponse;\n}\n\n/**\n * Interface with information about the reponse for photos from the API\n */\nexport interface APIPhotoResponse {\n  /**\n   * List of photos received from the API\n   */\n  photos: APIPhotoDataReponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/APIPhotoResponse.html":{"url":"interfaces/APIPhotoResponse.html","title":"interface - APIPhotoResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  APIPhotoResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/manifest.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface with information about the reponse for photos from the API\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            photos\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        photos\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        photos:         APIPhotoDataReponse[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         APIPhotoDataReponse[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    List of photos received from the API\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { CAMERA, STATUS } from \"./constants\";\nimport { RoverCamera } from \"./rovers\";\n\n/**\n * Interface for information of photos in rover manifest\n */\nexport interface ManifestPhoto {\n  /**\n   * Martian sol of photos\n   */\n  sol?: number;\n  /**\n   * Earth date of photos\n   */\n  earth_date?: string;\n  /**\n   * Total photos of day\n   */\n  total_photos?: number;\n  /**\n   * Camera photos\n   */\n  cameras?: CAMERA[];\n  /**\n   * Camera photos info\n   */\n  camerasInfo?: RoverCamera[];\n}\n\n/**\n * Information about a rover\n */\nexport interface Manifest {\n  /**\n   * Name of rover\n   */\n  name?: string;\n  /**\n   * Landing earth date\n   */\n  landing_date?: string;\n  /**\n   * Launching earth date\n   */\n  launch_date?: string;\n  /**\n   * Status of the rover\n   */\n  status?: STATUS;\n  /**\n   * Last martian day\n   */\n  max_sol?: number;\n  /**\n   * Last earth date\n   */\n  max_date?: string;\n  /**\n   * Total rover photos\n   */\n  total_photos?: number;\n  /**\n   * List of rover photos\n   */\n  photos?: ManifestPhoto[];\n}\n\n/**\n * Interface for the API reponse about the rover manifest\n */\nexport interface ApiManifest {\n  /**\n   * Object with rover photo data\n   */\n  photo_manifest: Manifest\n}\n\n/**\n * Interface with photo camera API information\n */\nexport interface APIPhotoCameraResponse {\n  /**\n   * Id of camera\n   */\n  id: number;\n  /**\n   * Name of camera\n   */\n  name: CAMERA;\n  /**\n   * Id of rover\n   */\n  rover_id: number;\n  /**\n   * Full name of camera\n   */\n  full_name: string;\n}\n\n/**\n * Interface for rover info response\n */\nexport interface APIPhotoRoverResponse {\n  /**\n   * Id for rover\n   */\n  id: number;\n  /**\n   * Rover name\n   */\n  name: string;\n  /**\n   * Landing earth date\n   */\n  landing_date: string;\n  /**\n   * Launch earth date\n   */\n  launch_date: string;\n  /**\n   * Rover status\n   */\n  status: STATUS;\n}\n\n/**\n * Interface with photo information from the API\n */\nexport interface APIPhotoDataReponse {\n  /**\n   * Photo id\n   */\n  id: number;\n  /**\n   * Martian sol of the photo\n   */\n  sol: number;\n  /**\n   * Information about the camera that took the photo\n   */\n  camera: APIPhotoCameraResponse;\n  /**\n   * URL to the image\n   */\n  img_src: string;\n  /**\n   * Earth date of the photo\n   */\n  earth_date: string;\n  /**\n   * Information about the rover that took the photo\n   */\n  rover: APIPhotoRoverResponse;\n}\n\n/**\n * Interface with information about the reponse for photos from the API\n */\nexport interface APIPhotoResponse {\n  /**\n   * List of photos received from the API\n   */\n  photos: APIPhotoDataReponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/APIPhotoRoverResponse.html":{"url":"interfaces/APIPhotoRoverResponse.html","title":"interface - APIPhotoRoverResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  APIPhotoRoverResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/manifest.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for rover info response\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            landing_date\n                                        \n                                \n                                \n                                        \n                                            launch_date\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Id for rover\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        landing_date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        landing_date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Landing earth date\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        launch_date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        launch_date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Launch earth date\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Rover name\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         STATUS\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         STATUS\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Rover status\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { CAMERA, STATUS } from \"./constants\";\nimport { RoverCamera } from \"./rovers\";\n\n/**\n * Interface for information of photos in rover manifest\n */\nexport interface ManifestPhoto {\n  /**\n   * Martian sol of photos\n   */\n  sol?: number;\n  /**\n   * Earth date of photos\n   */\n  earth_date?: string;\n  /**\n   * Total photos of day\n   */\n  total_photos?: number;\n  /**\n   * Camera photos\n   */\n  cameras?: CAMERA[];\n  /**\n   * Camera photos info\n   */\n  camerasInfo?: RoverCamera[];\n}\n\n/**\n * Information about a rover\n */\nexport interface Manifest {\n  /**\n   * Name of rover\n   */\n  name?: string;\n  /**\n   * Landing earth date\n   */\n  landing_date?: string;\n  /**\n   * Launching earth date\n   */\n  launch_date?: string;\n  /**\n   * Status of the rover\n   */\n  status?: STATUS;\n  /**\n   * Last martian day\n   */\n  max_sol?: number;\n  /**\n   * Last earth date\n   */\n  max_date?: string;\n  /**\n   * Total rover photos\n   */\n  total_photos?: number;\n  /**\n   * List of rover photos\n   */\n  photos?: ManifestPhoto[];\n}\n\n/**\n * Interface for the API reponse about the rover manifest\n */\nexport interface ApiManifest {\n  /**\n   * Object with rover photo data\n   */\n  photo_manifest: Manifest\n}\n\n/**\n * Interface with photo camera API information\n */\nexport interface APIPhotoCameraResponse {\n  /**\n   * Id of camera\n   */\n  id: number;\n  /**\n   * Name of camera\n   */\n  name: CAMERA;\n  /**\n   * Id of rover\n   */\n  rover_id: number;\n  /**\n   * Full name of camera\n   */\n  full_name: string;\n}\n\n/**\n * Interface for rover info response\n */\nexport interface APIPhotoRoverResponse {\n  /**\n   * Id for rover\n   */\n  id: number;\n  /**\n   * Rover name\n   */\n  name: string;\n  /**\n   * Landing earth date\n   */\n  landing_date: string;\n  /**\n   * Launch earth date\n   */\n  launch_date: string;\n  /**\n   * Rover status\n   */\n  status: STATUS;\n}\n\n/**\n * Interface with photo information from the API\n */\nexport interface APIPhotoDataReponse {\n  /**\n   * Photo id\n   */\n  id: number;\n  /**\n   * Martian sol of the photo\n   */\n  sol: number;\n  /**\n   * Information about the camera that took the photo\n   */\n  camera: APIPhotoCameraResponse;\n  /**\n   * URL to the image\n   */\n  img_src: string;\n  /**\n   * Earth date of the photo\n   */\n  earth_date: string;\n  /**\n   * Information about the rover that took the photo\n   */\n  rover: APIPhotoRoverResponse;\n}\n\n/**\n * Interface with information about the reponse for photos from the API\n */\nexport interface APIPhotoResponse {\n  /**\n   * List of photos received from the API\n   */\n  photos: APIPhotoDataReponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApiManifest.html":{"url":"interfaces/ApiManifest.html","title":"interface - ApiManifest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ApiManifest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/manifest.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the API reponse about the rover manifest\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            photo_manifest\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        photo_manifest\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        photo_manifest:         Manifest\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Manifest\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Object with rover photo data\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { CAMERA, STATUS } from \"./constants\";\nimport { RoverCamera } from \"./rovers\";\n\n/**\n * Interface for information of photos in rover manifest\n */\nexport interface ManifestPhoto {\n  /**\n   * Martian sol of photos\n   */\n  sol?: number;\n  /**\n   * Earth date of photos\n   */\n  earth_date?: string;\n  /**\n   * Total photos of day\n   */\n  total_photos?: number;\n  /**\n   * Camera photos\n   */\n  cameras?: CAMERA[];\n  /**\n   * Camera photos info\n   */\n  camerasInfo?: RoverCamera[];\n}\n\n/**\n * Information about a rover\n */\nexport interface Manifest {\n  /**\n   * Name of rover\n   */\n  name?: string;\n  /**\n   * Landing earth date\n   */\n  landing_date?: string;\n  /**\n   * Launching earth date\n   */\n  launch_date?: string;\n  /**\n   * Status of the rover\n   */\n  status?: STATUS;\n  /**\n   * Last martian day\n   */\n  max_sol?: number;\n  /**\n   * Last earth date\n   */\n  max_date?: string;\n  /**\n   * Total rover photos\n   */\n  total_photos?: number;\n  /**\n   * List of rover photos\n   */\n  photos?: ManifestPhoto[];\n}\n\n/**\n * Interface for the API reponse about the rover manifest\n */\nexport interface ApiManifest {\n  /**\n   * Object with rover photo data\n   */\n  photo_manifest: Manifest\n}\n\n/**\n * Interface with photo camera API information\n */\nexport interface APIPhotoCameraResponse {\n  /**\n   * Id of camera\n   */\n  id: number;\n  /**\n   * Name of camera\n   */\n  name: CAMERA;\n  /**\n   * Id of rover\n   */\n  rover_id: number;\n  /**\n   * Full name of camera\n   */\n  full_name: string;\n}\n\n/**\n * Interface for rover info response\n */\nexport interface APIPhotoRoverResponse {\n  /**\n   * Id for rover\n   */\n  id: number;\n  /**\n   * Rover name\n   */\n  name: string;\n  /**\n   * Landing earth date\n   */\n  landing_date: string;\n  /**\n   * Launch earth date\n   */\n  launch_date: string;\n  /**\n   * Rover status\n   */\n  status: STATUS;\n}\n\n/**\n * Interface with photo information from the API\n */\nexport interface APIPhotoDataReponse {\n  /**\n   * Photo id\n   */\n  id: number;\n  /**\n   * Martian sol of the photo\n   */\n  sol: number;\n  /**\n   * Information about the camera that took the photo\n   */\n  camera: APIPhotoCameraResponse;\n  /**\n   * URL to the image\n   */\n  img_src: string;\n  /**\n   * Earth date of the photo\n   */\n  earth_date: string;\n  /**\n   * Information about the rover that took the photo\n   */\n  rover: APIPhotoRoverResponse;\n}\n\n/**\n * Interface with information about the reponse for photos from the API\n */\nexport interface APIPhotoResponse {\n  /**\n   * List of photos received from the API\n   */\n  photos: APIPhotoDataReponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApiService.html":{"url":"injectables/ApiService.html","title":"injectable - ApiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/app.services.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for call the services of the Nasa API\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                apiKey\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadRoverManifest\n                            \n                            \n                                loadRoverPhotos\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/app.services.ts:17\n                            \n                        \n\n                \n                    \n                            Constructor for the service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular service for HTTP calls\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loadRoverManifest\n                        \n                    \n                \n            \n            \n                \nloadRoverManifest(rover: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/app.services.ts:32\n                \n            \n\n\n            \n                \n                    Loads a rover manifest\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    rover\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Name of the rover for load their manifest\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        Observable with the manifest for a rover\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadRoverPhotos\n                        \n                    \n                \n            \n            \n                \nloadRoverPhotos(rover: string, requestData: RoverPhotosRequest)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/app.services.ts:43\n                \n            \n\n\n            \n                \n                    Loads the list of photos for a rover, day, and camera\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    rover\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Name of the rover to load their photos\n\n                                    \n                                \n                                \n                                    requestData\n                                    \n                                                RoverPhotosRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Data for make the request: martian sol and camera (optional)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        apiKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'jDOUZcRQgxp0zk4cGyqUeMOtb2ba2UVq2UHpLgG8'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/app.services.ts:17\n                        \n                    \n\n            \n                \n                    API Key for use with the end-points\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { ApiManifest, APIPhotoResponse } from \"../models/manifest\";\nimport { RoverPhotosRequest } from \"../models/rovers\";\n\n/**\n * Service for call the services of the Nasa API\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  /**\n   * API Key for use with the end-points\n   */\n  apiKey = 'jDOUZcRQgxp0zk4cGyqUeMOtb2ba2UVq2UHpLgG8';\n\n  /**\n   * Constructor for the service\n   * @param http Angular service for HTTP calls\n   */\n  constructor(\n    private readonly http: HttpClient\n  ) {}\n\n  /**\n   * Loads a rover manifest\n   * @param {string} rover Name of the rover for load their manifest\n   * @returns {Observable} Observable with the manifest for a rover\n   */\n  loadRoverManifest(rover: string): Observable {\n    const url = `https://api.nasa.gov/mars-photos/api/v1/manifests/${rover}?api_key=${this.apiKey}`;\n    return this.http.get(url);\n  }\n\n  /**\n   * Loads the list of photos for a rover, day, and camera\n   * @param {string} rover Name of the rover to load their photos\n   * @param {RoverPhotosRequest} requestData Data for make the request: martian sol and camera (optional)\n   * @returns {Observable} \n   */\n  loadRoverPhotos(rover: string, requestData: RoverPhotosRequest): Observable {\n    const queryParams = [];\n    queryParams.push(`sol=${requestData.sol}`);\n    if (requestData.camera) {\n      queryParams.push(`camera=${requestData.camera}`);\n    }\n    queryParams.push(`api_key=${this.apiKey}`);\n\n    const url = `https://api.nasa.gov/mars-photos/api/v1/rovers/${rover}/photos?${queryParams.join('&')}`;\n\n    return this.http.get(url);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        Root component for the app\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                initialDataIsReady\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:28\n                            \n                        \n\n                \n                    \n                            Constructor for root component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Store for app data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:41\n                \n            \n\n\n            \n                \n                    Loads initial data of rovers for the app\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        initialDataIsReady\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:28\n                        \n                    \n\n            \n                \n                    To check if initial data of rovers is ready\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n// RXJS\nimport { Observable, take, combineLatest } from 'rxjs';\n\n// STORE\nimport { Store } from '@ngrx/store';\nimport { StoreState } from './store/app/app.state';\nimport * as SELECTORS from './store/app/app.selectors';\nimport * as ACTIONS from './store/app/app.actions';\nimport { ajax } from 'rxjs/ajax';\n\n// MODELS\nimport * as ROVER_MODEL from './models/rovers';\n\n/**\n * Root component for the app\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent implements OnInit {\n  /**\n   * To check if initial data of rovers is ready\n   */\n  initialDataIsReady!: Observable;\n\n  /**\n   * Constructor for root component\n   * @param {Store} store Store for app data\n   */\n  constructor(\n    private readonly store: Store\n  ) {}\n\n  /**\n   * Loads initial data of rovers for the app\n   */\n  ngOnInit(): void {\n    this.initialDataIsReady = this.store.select(SELECTORS.getInitialDataIsReady);\n\n    combineLatest([\n      ajax.getJSON('assets/info/cameras.list.json'),\n      ajax.getJSON('assets/info/rovers.list.json')\n    ]).pipe(take(1)).subscribe(([camerasList, roversList]) => {\n      this.store.dispatch(ACTIONS.setInitialData({\n        camerasList: camerasList as ROVER_MODEL.RoverCamera[],\n        roversList: roversList as ROVER_MODEL.RoverListItem[]\n      }));\n    });\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'ErrorDialogLauncherComponent', 'selector': 'app-error-dialog-launcher'},{'name': 'ErrorDialogPopupComponent', 'selector': 'app-error-dialog-popup'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'PaginatorComponent', 'selector': 'app-paginator'},{'name': 'RoverPanelComponent', 'selector': 'app-rover-panel'},{'name': 'RoverPhotosComponent', 'selector': 'app-rover-photos'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { StoreModule } from '@ngrx/store';\nimport { environment } from '../environments/environment';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { EffectsModule } from '@ngrx/effects';\nimport { routerReducer, StoreRouterConnectingModule } from '@ngrx/router-store';\nimport { storeReducer } from './store/app/app.reducers';\nimport { StoreEffects } from './store/app/app.effects';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    StoreModule.forRoot({\n      store: storeReducer,\n      router: routerReducer\n    }),\n    EffectsModule.forRoot([StoreEffects]),\n    StoreDevtoolsModule.instrument({\n      maxAge: 25,\n      logOnly: environment.production,\n      autoPause: true,\n    }),\n    StoreRouterConnectingModule.forRoot()\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: 'dashboard',\n    loadChildren: () => \"import('./modules/dashboard/dashboard.module').then(m => m.DashboardModule)\"\n  },\n  {\n    path: 'details',\n    loadChildren: () => \"import('./modules/details/details.module').then(m => m.DetailsModule)\"\n  },  \n  {\n    path: 'details/:code/:sol',\n    loadChildren: () => \"import('./modules/details/details.module').then(m => m.DetailsModule)\"\n  },\n  {\n    path: 'details/:code/:sol/:camera',\n    loadChildren: () => \"import('./modules/details/details.module').then(m => m.DetailsModule)\"\n  },  \n  {\n    path: '',\n    redirectTo: 'dashboard',\n    pathMatch: 'full'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DashboardComponent.html":{"url":"components/DashboardComponent.html","title":"component - DashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/dashboard/components/dashboard/dashboard.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for the dashboard\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dashboard\n            \n\n\n\n\n            \n                templateUrl\n                ./dashboard.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                codes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/dashboard/components/dashboard/dashboard.component.ts:19\n                            \n                        \n\n                \n                    \n                            Constructor for the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Store for app data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/dashboard/components/dashboard/dashboard.component.ts:32\n                \n            \n\n\n            \n                \n                    Angular life cycle: set the list of rover codes\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        codes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/dashboard/components/dashboard/dashboard.component.ts:19\n                        \n                    \n\n            \n                \n                    List of rover codes\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, OnInit } from \"@angular/core\";\nimport { Store } from \"@ngrx/store\";\nimport { Observable } from \"rxjs\";\nimport { StoreState } from \"../../../../store/app/app.state\";\nimport * as SELECTORS from '../../../../store/app/app.selectors';\n\n/**\n * Component for the dashboard\n */\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DashboardComponent implements OnInit {\n  /**\n   * List of rover codes\n   */\n  codes!: Observable;\n  \n  /**\n   * Constructor for the component\n   *@param {Store} store Store for app data\n   */\n  constructor(\n    private readonly store: Store\n  ) {}\n\n  /**\n   * Angular life cycle: set the list of rover codes\n   */\n  ngOnInit(): void {\n    this.codes = this.store.select(SELECTORS.getCodesList);\n  }\n}\n\n    \n\n    \n        \n  NASA Mars Rovers Photos\n  \n    With this application you can browse, using a NASA API, a lot of photos received from the rovers launched to Mars\n  \n  \n    The code documentation (components, services, ...) for this project is available here\n  \n  \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  NASA Mars Rovers Photos      With this application you can browse, using a NASA API, a lot of photos received from the rovers launched to Mars        The code documentation (components, services, ...) for this project is available here          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'ErrorDialogLauncherComponent', 'selector': 'app-error-dialog-launcher'},{'name': 'ErrorDialogPopupComponent', 'selector': 'app-error-dialog-popup'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'PaginatorComponent', 'selector': 'app-paginator'},{'name': 'RoverPanelComponent', 'selector': 'app-rover-panel'},{'name': 'RoverPhotosComponent', 'selector': 'app-rover-photos'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DashboardModule.html":{"url":"modules/DashboardModule.html","title":"module - DashboardModule","body":"\n                   \n\n\n\n\n    Modules\n    DashboardModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_DashboardModule\n\n\n\ncluster_DashboardModule_declarations\n\n\n\ncluster_DashboardModule_imports\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\n\n\nDashboardModule\n\nDashboardModule\n\nDashboardModule -->\n\nDashboardComponent->DashboardModule\n\n\n\n\n\nRoverPanelComponent\n\nRoverPanelComponent\n\nDashboardModule -->\n\nRoverPanelComponent->DashboardModule\n\n\n\n\n\nRoverPhotosComponent\n\nRoverPhotosComponent\n\nDashboardModule -->\n\nRoverPhotosComponent->DashboardModule\n\n\n\n\n\nDashboardRoutingModule\n\nDashboardRoutingModule\n\nDashboardModule -->\n\nDashboardRoutingModule->DashboardModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nDashboardModule -->\n\nSharedModule->DashboardModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/dashboard/dashboard.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Module for the dashboard that show the panels of rovers with their information\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DashboardComponent\n                        \n                        \n                            RoverPanelComponent\n                        \n                        \n                            RoverPhotosComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DashboardRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from \"@angular/core\";\nimport { DashboardRoutingModule } from \"./dashboard-routing.module\";\nimport { SharedModule } from \"../shared/shared.module\";\nimport { DashboardComponent } from \"./components/dashboard/dashboard.component\";\nimport { RoverPanelComponent } from \"./components/rover-panel/rover-panel.component\";\nimport { RoverPhotosComponent } from \"./components/rover-photos/rover-photos.component\";\n\n/**\n * Module for the dashboard that show the panels of rovers with their information\n */\n@NgModule({\n  imports: [\n    SharedModule,\n    DashboardRoutingModule\n  ],\n  declarations: [\n    DashboardComponent,\n    RoverPanelComponent,\n    RoverPhotosComponent\n  ]\n})\nexport class DashboardModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DashboardRoutingModule.html":{"url":"modules/DashboardRoutingModule.html","title":"module - DashboardRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    DashboardRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/dashboard/dashboard-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { DashboardComponent } from \"./components/dashboard/dashboard.component\";\n\n/**\n * Routes for the dashboard module\n */\nconst routes: Routes = [\n  {\n    path: '',\n    component: DashboardComponent\n  }\n];\n\n/**\n * Module for manage the routes in the dashboard module\n */\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class DashboardRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DetailsComponent.html":{"url":"components/DetailsComponent.html","title":"component - DetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/details/components/details/details.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for show a detailed rover photos list\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-details\n            \n\n            \n                styleUrls\n                details.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./details.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentPage\n                            \n                            \n                                detailsData\n                            \n                            \n                                errorData\n                            \n                            \n                                errorLoading\n                            \n                            \n                                hasDetailsData\n                            \n                            \n                                loadCamPhotosAction\n                            \n                            \n                                loaded\n                            \n                            \n                                loading\n                            \n                            \n                                totalPages\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goToDashboard\n                            \n                            \n                                handlePageChange\n                            \n                            \n                                    Private\n                                initSubscriptions\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                setActions\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    storeRef\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/details/components/details/details.component.ts:64\n                            \n                        \n\n                \n                    \n                            Constructor for the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular service that provides tools for work with routes\n\n                                                        \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Store for app data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        goToDashboard\n                        \n                    \n                \n            \n            \n                \ngoToDashboard()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/details/components/details/details.component.ts:87\n                \n            \n\n\n            \n                \n                    Navigate to the dashboard page\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handlePageChange\n                        \n                    \n                \n            \n            \n                \nhandlePageChange(page: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/details/components/details/details.component.ts:95\n                \n            \n\n\n            \n                \n                    Changes the page of the list\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    page\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        new number of page for show the list\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        initSubscriptions\n                        \n                    \n                \n            \n            \n                \n                    \n                    initSubscriptions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/details/components/details/details.component.ts:109\n                \n            \n\n\n            \n                \n                    Sets the subscritpions for the component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/details/components/details/details.component.ts:79\n                \n            \n\n\n            \n                \n                    Angular life cycle: sets the actions needed in the component and inits the subscriptions\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setActions\n                        \n                    \n                \n            \n            \n                \n                    \n                    setActions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/details/components/details/details.component.ts:125\n                \n            \n\n\n            \n                \n                    Sets the actions for the component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/details/components/details/details.component.ts:57\n                        \n                    \n\n            \n                \n                    Page number that is shown currently\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        detailsData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/details/components/details/details.component.ts:49\n                        \n                    \n\n            \n                \n                    List of detailed photo information\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/details/components/details/details.component.ts:40\n                        \n                    \n\n            \n                \n                    Information about an error to show in modal\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/details/components/details/details.component.ts:36\n                        \n                    \n\n            \n                \n                    Indicator that an error was occurred during load data\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasDetailsData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/details/components/details/details.component.ts:45\n                        \n                    \n\n            \n                \n                    Indicator that the detail data is available in the store\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadCamPhotosAction\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Action\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/details/components/details/details.component.ts:23\n                        \n                    \n\n            \n                \n                    Action for load de photos list\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loaded\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/details/components/details/details.component.ts:32\n                        \n                    \n\n            \n                \n                    Indicator that data is loaded\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/details/components/details/details.component.ts:28\n                        \n                    \n\n            \n                \n                    Indicator that data is loading\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalPages\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/details/components/details/details.component.ts:53\n                        \n                    \n\n            \n                \n                    Total pages of the list\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        storeRef\n                    \n                \n\n                \n                    \n                        getstoreRef()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/details/components/details/details.component.ts:62\n                                \n                            \n                    \n                        \n                                Returns a reference to the store\n\n\n                                \n                                    Returns :         Store\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { Action, Store } from \"@ngrx/store\";\nimport { Observable, take } from \"rxjs\";\nimport { ErrorDialogData } from \"../../../../models/error\";\nimport { StoreState } from \"../../../../store/app/app.state\";\nimport * as ROVER_ACTIONS from '../../../../store/app/app.actions';\nimport * as ROVER_SELECTORS from \"../../../../store/app/app.selectors\";\nimport { RoverPhoto } from \"src/app/models/rovers\";\n\n/**\n * Component for show a detailed rover photos list\n */\n@Component({\n  selector: 'app-details',\n  templateUrl: './details.component.html',\n  styleUrls: ['details.component.scss']\n})\nexport class DetailsComponent implements OnInit {\n  /**\n   * Action for load de photos list\n   */\n  loadCamPhotosAction!: Action;\n\n  /**\n   * Indicator that data is loading\n   */\n  loading!: Observable;\n  /**\n   * Indicator that data is loaded\n   */\n  loaded!: Observable;\n  /**\n   * Indicator that an error was occurred during load data\n   */\n  errorLoading!: Observable;\n  /**\n   * Information about an error to show in modal\n   */\n  errorData!: Observable;\n\n  /**\n   * Indicator that the detail data is available in the store\n   */\n  hasDetailsData!: Observable;\n  /**\n   * List of detailed photo information\n   */\n  detailsData!: Observable;\n  /**\n   * Total pages of the list\n   */\n  totalPages!: Observable;\n  /**\n   * Page number that is shown currently\n   */\n  currentPage!: Observable;\n\n  /**\n   * Returns a reference to the store\n   */\n  get storeRef(): Store {\n    return this.store;\n  }\n\n  /**\n   * Constructor for the component\n   * @param {Router} router Angular service that provides tools for work with routes\n   * @param {Store} store Store for app data\n   */\n  constructor(\n    private readonly router: Router,\n    private readonly store: Store\n  ){}\n\n  /**\n   * Angular life cycle: sets the actions needed in the component and inits the subscriptions\n   */\n  ngOnInit(): void {\n    this.setActions();\n    this.initSubscriptions();\n  }\n\n  /**\n   * Navigate to the dashboard page\n   */\n  goToDashboard(): void {\n    this.router.navigate(['dashboard']);\n  }\n\n  /**\n   * Changes the page of the list\n   * @param {number} page new number of page for show the list\n   */\n  handlePageChange(page: number): void {\n    this.store.select(ROVER_SELECTORS.getDetailsRover)\n      .pipe(take(1))\n      .subscribe((rover: string) => {\n        this.store.dispatch(ROVER_ACTIONS.goToPhotosPage({\n          rover,\n          page\n        }))\n      });\n  }\n\n  /**\n   * Sets the subscritpions for the component\n   */\n  private initSubscriptions(): void {\n    this.loading = this.store.select(ROVER_SELECTORS.getIsLoading);\n    this.loaded = this.store.select(ROVER_SELECTORS.getIsLoaded);\n    this.errorLoading = this.store.select(ROVER_SELECTORS.getIsErrorLoading);\n    this.errorData = this.store.select(ROVER_SELECTORS.getErrorData);\n\n    this.hasDetailsData = this.store.select(ROVER_SELECTORS.getHasDetailRoverPhotosList);\n    this.detailsData = this.store.select(ROVER_SELECTORS.getDetailRoverPhotosList);\n\n    this.totalPages = this.store.select(ROVER_SELECTORS.getRoverPhotoListTotalPages);\n    this.currentPage = this.store.select(ROVER_SELECTORS.getDetailsCurrentPage);\n  }\n\n  /**\n   * Sets the actions for the component\n   */\n  private setActions(): void {\n    this.loadCamPhotosAction = ROVER_ACTIONS.loadCamPhotos();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          chevron_left\n          Back to dashboard\n        \n      \n    \n    \n      \n      \n    \n  \n\n  \n    \n      \n        {{ detail.id }}\n        {{ detail.earthDate | date: 'fullDate' }} (Sol: {{ detail.sol}})\n        \n          \n          \n            {{ detail.camera }}: {{ detail.cameraFullName }}\n          \n        \n      \n    \n  \n\n\n\n\n\n\n\n\n    \n\n    \n                \n                    details.component.scss\n                \n                .photos-list {\n  &__bar {\n    padding: .25rem 1rem;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n\n  &__back-button-content {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n\n  &__wrapper {\n    display: grid;\n    grid-template-columns: 20% 20% 20% 20% 20%;\n    grid-template-rows: auto;\n\n    @media only screen and (max-width: 600px) {\n      grid-template-columns: 100%;\n    }\n  }\n\n  &__item {\n    padding: .5rem;\n\n    & img {\n      width: 100%;\n      height: auto;\n    }\n\n    & .mat-card-image {\n      margin: 0 !important;\n    }\n  }\n\n  &__camera {\n    &-info {\n      padding: .5rem 0;\n    }\n    &-code {\n      font-weight: bold;\n    }\n  }\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              chevron_left          Back to dashboard                                                            {{ detail.id }}        {{ detail.earthDate | date: \\'fullDate\\' }} (Sol: {{ detail.sol}})                                        {{ detail.camera }}: {{ detail.cameraFullName }}                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'ErrorDialogLauncherComponent', 'selector': 'app-error-dialog-launcher'},{'name': 'ErrorDialogPopupComponent', 'selector': 'app-error-dialog-popup'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'PaginatorComponent', 'selector': 'app-paginator'},{'name': 'RoverPanelComponent', 'selector': 'app-rover-panel'},{'name': 'RoverPhotosComponent', 'selector': 'app-rover-photos'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DetailsModule.html":{"url":"modules/DetailsModule.html","title":"module - DetailsModule","body":"\n                   \n\n\n\n\n    Modules\n    DetailsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_DetailsModule\n\n\n\ncluster_DetailsModule_declarations\n\n\n\ncluster_DetailsModule_imports\n\n\n\n\nDetailsComponent\n\nDetailsComponent\n\n\n\nDetailsModule\n\nDetailsModule\n\nDetailsModule -->\n\nDetailsComponent->DetailsModule\n\n\n\n\n\nDetailsRoutingModule\n\nDetailsRoutingModule\n\nDetailsModule -->\n\nDetailsRoutingModule->DetailsModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nDetailsModule -->\n\nSharedModule->DetailsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/details/details.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Module for show details about the photos for a rover, day and camera\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DetailsComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DetailsRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from \"@angular/core\";\nimport { SharedModule } from \"../shared/shared.module\";\nimport { DetailsComponent } from \"./components/details/details.component\";\nimport { DetailsRoutingModule } from \"./details-routing.module\";\n\n/**\n * Module for show details about the photos for a rover, day and camera\n */\n@NgModule({\n  imports: [\n    SharedModule,\n    DetailsRoutingModule\n  ],\n  declarations: [\n    DetailsComponent\n  ]\n})\nexport class DetailsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DetailsRoutingModule.html":{"url":"modules/DetailsRoutingModule.html","title":"module - DetailsRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    DetailsRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/details/details-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { DetailsComponent } from \"./components/details/details.component\";\n\n/**\n * Routes for the details module\n */\nconst routes: Routes = [\n  {\n    path: '',\n    component: DetailsComponent\n  }\n];\n\n/**\n * Module for manage the routes for the detais module\n */\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class DetailsRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ErrorDialogData.html":{"url":"interfaces/ErrorDialogData.html","title":"interface - ErrorDialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ErrorDialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/error.ts\n        \n\n\n            \n                Description\n            \n            \n                Model for error dialog modal\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            errorCode\n                                        \n                                \n                                \n                                        \n                                            errorMessage\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errorCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    error code for show in modal\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errorMessage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorMessage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    error message for show in modal\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ErrorDialogData {\n  /**\n   * error code for show in modal\n   */\n  errorCode: string;\n  /**\n   * error message for show in modal\n   */\n  errorMessage: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorDialogLauncherComponent.html":{"url":"components/ErrorDialogLauncherComponent.html","title":"component - ErrorDialogLauncherComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ErrorDialogLauncherComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/shared/components/error-dialog/error-dialog-launcher/error-dialog-launcher.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component to show a modal with an error message\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-error-dialog-launcher\n            \n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                errorData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onClose\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/shared/components/error-dialog/error-dialog-launcher/error-dialog-launcher.component.ts:22\n                            \n                        \n\n                \n                    \n                            Constructor of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to open dialog modals\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        errorData\n                    \n                \n                \n                    \n                        Type :         ErrorDialogData\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/shared/components/error-dialog/error-dialog-launcher/error-dialog-launcher.component.ts:18\n                            \n                        \n                \n                    \n                        An object with the code and message of the error\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onClose\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/shared/components/error-dialog/error-dialog-launcher/error-dialog-launcher.component.ts:22\n                            \n                        \n                \n                    \n                        Action to emit when the modal is closed\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/shared/components/error-dialog/error-dialog-launcher/error-dialog-launcher.component.ts:35\n                \n            \n\n\n            \n                \n                    Angular life cycle onInit: opens the modal\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/shared/components/error-dialog/error-dialog-launcher/error-dialog-launcher.component.ts:29\n                        \n                    \n\n            \n                \n                    Service to open dialog modals\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { ErrorDialogPopupComponent } from \"../error-dialog-popup/error-dialog-popup.component\";\nimport { take } from 'rxjs/operators';\nimport { ErrorDialogData } from \"../../../../../models/error\";\n\n/**\n * Component to show a modal with an error message\n */\n@Component({\n  selector: 'app-error-dialog-launcher',\n  template: ''\n})\nexport class ErrorDialogLauncherComponent implements OnInit {\n  /**\n   * An object with the code and message of the error\n   */\n  @Input() errorData!: ErrorDialogData;\n  /**\n   * Action to emit when the modal is closed\n   */\n  @Output() onClose = new EventEmitter();\n\n  /**\n   * Constructor of the component\n   * @param {MatDialog} dialog Service to open dialog modals\n   */\n  constructor(\n    public dialog: MatDialog\n  ){}\n\n  /**\n   * Angular life cycle onInit: opens the modal\n   */\n  ngOnInit(): void {\n    const dialogRef = this.dialog.open(ErrorDialogPopupComponent, {\n      data: this.errorData,\n      disableClose: true\n    });\n\n    dialogRef.afterClosed().pipe(take(1)).subscribe(_r => {\n      this.onClose.emit();\n    });\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'ErrorDialogLauncherComponent', 'selector': 'app-error-dialog-launcher'},{'name': 'ErrorDialogPopupComponent', 'selector': 'app-error-dialog-popup'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'PaginatorComponent', 'selector': 'app-paginator'},{'name': 'RoverPanelComponent', 'selector': 'app-rover-panel'},{'name': 'RoverPhotosComponent', 'selector': 'app-rover-photos'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ErrorDialogLauncherComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorDialogPopupComponent.html":{"url":"components/ErrorDialogPopupComponent.html","title":"component - ErrorDialogPopupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ErrorDialogPopupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/shared/components/error-dialog/error-dialog-popup/error-dialog-popup.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component with the content of the modal for show error messages\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-error-dialog-popup\n            \n\n            \n                styleUrls\n                ./error-dialog-popup.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./error-dialog-popup.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: ErrorDialogData)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/shared/components/error-dialog/error-dialog-popup/error-dialog-popup.component.ts:13\n                            \n                        \n\n                \n                    \n                            Constructor of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Reference to the dialog opened\n\n                                                        \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        ErrorDialogData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                data to show into the dialog\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ErrorDialogData\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/modules/shared/components/error-dialog/error-dialog-popup/error-dialog-popup.component.ts:21\n                        \n                    \n\n            \n                \n                    data to show into the dialog\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/shared/components/error-dialog/error-dialog-popup/error-dialog-popup.component.ts:20\n                        \n                    \n\n            \n                \n                    Reference to the dialog opened\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject } from \"@angular/core\";\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport { ErrorDialogData } from \"../../../../../models/error\";\n\n/**\n * Component with the content of the modal for show error messages\n */\n@Component({\n  selector: 'app-error-dialog-popup',\n  templateUrl: './error-dialog-popup.component.html',\n  styleUrls: ['./error-dialog-popup.component.scss']\n})\nexport class ErrorDialogPopupComponent {\n  /**\n   * Constructor of the component\n   * @param {MatDialogRef} dialogRef Reference to the dialog opened\n   * @param {ErrorDialogData} data data to show into the dialog\n   */\n  constructor (\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: ErrorDialogData\n  ) {}\n}\n\n    \n\n    \n        \n  \n    warning\n  \n\n{{ data.errorCode }}\n{{ data.errorMessage }}\n\n  Close\n\n\n    \n\n    \n                \n                    ./error-dialog-popup.component.scss\n                \n                .alert-icon {\n  &__wrapper {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: 1rem;\n    margin-bottom: 1rem;\n  }\n  &__image {\n    transform: scale(2);\n    color: orange;\n  }\n}\n\n.mat-dialog-actions {\n  justify-content: center;\n}\n\nh1, h3 {\n  width: 100%;\n  text-align: center;\n  margin-bottom: .5rem;\n}\n\nh1 {\n  font-weight: 500;\n  color: brown;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      warning  {{ data.errorCode }}{{ data.errorMessage }}  Close'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'ErrorDialogLauncherComponent', 'selector': 'app-error-dialog-launcher'},{'name': 'ErrorDialogPopupComponent', 'selector': 'app-error-dialog-popup'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'PaginatorComponent', 'selector': 'app-paginator'},{'name': 'RoverPanelComponent', 'selector': 'app-rover-panel'},{'name': 'RoverPhotosComponent', 'selector': 'app-rover-photos'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ErrorDialogPopupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoaderComponent.html":{"url":"components/LoaderComponent.html","title":"component - LoaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/shared/components/loader/loader.component.ts\n\n\n\n    \n        Description\n    \n    \n        Shows a spinner during a data loading operation\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-loader\n            \n\n            \n                styleUrls\n                ./loader.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./loader.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                action\n                            \n                            \n                                store\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        action\n                    \n                \n                \n                    \n                        Type :     TypedAction\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/shared/components/loader/loader.component.ts:22\n                            \n                        \n                \n                    \n                        Action for load the data\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        store\n                    \n                \n                \n                    \n                        Type :     Store\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/shared/components/loader/loader.component.ts:18\n                            \n                        \n                \n                    \n                        Store that contains the action for load the data\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/shared/components/loader/loader.component.ts:27\n                \n            \n\n\n            \n                \n                    Angular life cycle init: dispatch the action to load the data\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input, OnInit } from \"@angular/core\";\nimport { Store } from \"@ngrx/store\";\nimport { TypedAction } from \"@ngrx/store/src/models\";\n\n/**\n * Shows a spinner during a data loading operation\n */\n@Component({\n  selector: 'app-loader',\n  templateUrl: './loader.component.html',\n  styleUrls: ['./loader.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LoaderComponent implements OnInit {\n  /**\n   * Store that contains the action for load the data\n   */\n  @Input() store!: Store;\n  /**\n   * Action for load the data\n   */\n  @Input() action!: TypedAction;\n\n  /**\n   * Angular life cycle init: dispatch the action to load the data\n   */\n  ngOnInit(): void {\n      this.store.dispatch(this.action);\n  }\n}\n    \n\n    \n        \n  \n  Loading...\n\n\n    \n\n    \n                \n                    ./loader.component.scss\n                \n                .loader {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 3rem 0;\n\n  .loading-text {\n    font-size: 2rem;\n    padding-top: 2rem;\n    color: #3f51b5;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Loading...'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'ErrorDialogLauncherComponent', 'selector': 'app-error-dialog-launcher'},{'name': 'ErrorDialogPopupComponent', 'selector': 'app-error-dialog-popup'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'PaginatorComponent', 'selector': 'app-paginator'},{'name': 'RoverPanelComponent', 'selector': 'app-rover-panel'},{'name': 'RoverPhotosComponent', 'selector': 'app-rover-photos'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Manifest.html":{"url":"interfaces/Manifest.html","title":"interface - Manifest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Manifest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/manifest.ts\n        \n\n\n            \n                Description\n            \n            \n                Information about a rover\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            landing_date\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            launch_date\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            max_date\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            max_sol\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            photos\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            status\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            total_photos\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        landing_date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        landing_date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Landing earth date\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        launch_date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        launch_date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Launching earth date\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        max_date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        max_date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Last earth date\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        max_sol\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        max_sol:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Last martian day\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Name of rover\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        photos\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        photos:     ManifestPhoto[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ManifestPhoto[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    List of rover photos\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         STATUS\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         STATUS\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Status of the rover\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        total_photos\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        total_photos:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Total rover photos\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { CAMERA, STATUS } from \"./constants\";\nimport { RoverCamera } from \"./rovers\";\n\n/**\n * Interface for information of photos in rover manifest\n */\nexport interface ManifestPhoto {\n  /**\n   * Martian sol of photos\n   */\n  sol?: number;\n  /**\n   * Earth date of photos\n   */\n  earth_date?: string;\n  /**\n   * Total photos of day\n   */\n  total_photos?: number;\n  /**\n   * Camera photos\n   */\n  cameras?: CAMERA[];\n  /**\n   * Camera photos info\n   */\n  camerasInfo?: RoverCamera[];\n}\n\n/**\n * Information about a rover\n */\nexport interface Manifest {\n  /**\n   * Name of rover\n   */\n  name?: string;\n  /**\n   * Landing earth date\n   */\n  landing_date?: string;\n  /**\n   * Launching earth date\n   */\n  launch_date?: string;\n  /**\n   * Status of the rover\n   */\n  status?: STATUS;\n  /**\n   * Last martian day\n   */\n  max_sol?: number;\n  /**\n   * Last earth date\n   */\n  max_date?: string;\n  /**\n   * Total rover photos\n   */\n  total_photos?: number;\n  /**\n   * List of rover photos\n   */\n  photos?: ManifestPhoto[];\n}\n\n/**\n * Interface for the API reponse about the rover manifest\n */\nexport interface ApiManifest {\n  /**\n   * Object with rover photo data\n   */\n  photo_manifest: Manifest\n}\n\n/**\n * Interface with photo camera API information\n */\nexport interface APIPhotoCameraResponse {\n  /**\n   * Id of camera\n   */\n  id: number;\n  /**\n   * Name of camera\n   */\n  name: CAMERA;\n  /**\n   * Id of rover\n   */\n  rover_id: number;\n  /**\n   * Full name of camera\n   */\n  full_name: string;\n}\n\n/**\n * Interface for rover info response\n */\nexport interface APIPhotoRoverResponse {\n  /**\n   * Id for rover\n   */\n  id: number;\n  /**\n   * Rover name\n   */\n  name: string;\n  /**\n   * Landing earth date\n   */\n  landing_date: string;\n  /**\n   * Launch earth date\n   */\n  launch_date: string;\n  /**\n   * Rover status\n   */\n  status: STATUS;\n}\n\n/**\n * Interface with photo information from the API\n */\nexport interface APIPhotoDataReponse {\n  /**\n   * Photo id\n   */\n  id: number;\n  /**\n   * Martian sol of the photo\n   */\n  sol: number;\n  /**\n   * Information about the camera that took the photo\n   */\n  camera: APIPhotoCameraResponse;\n  /**\n   * URL to the image\n   */\n  img_src: string;\n  /**\n   * Earth date of the photo\n   */\n  earth_date: string;\n  /**\n   * Information about the rover that took the photo\n   */\n  rover: APIPhotoRoverResponse;\n}\n\n/**\n * Interface with information about the reponse for photos from the API\n */\nexport interface APIPhotoResponse {\n  /**\n   * List of photos received from the API\n   */\n  photos: APIPhotoDataReponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ManifestPhoto.html":{"url":"interfaces/ManifestPhoto.html","title":"interface - ManifestPhoto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ManifestPhoto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/manifest.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for information of photos in rover manifest\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            cameras\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            camerasInfo\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            earth_date\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sol\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            total_photos\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cameras\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cameras:         CAMERA[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CAMERA[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Camera photos\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        camerasInfo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        camerasInfo:     RoverCamera[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     RoverCamera[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Camera photos info\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        earth_date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        earth_date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Earth date of photos\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sol\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sol:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Martian sol of photos\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        total_photos\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        total_photos:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Total photos of day\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { CAMERA, STATUS } from \"./constants\";\nimport { RoverCamera } from \"./rovers\";\n\n/**\n * Interface for information of photos in rover manifest\n */\nexport interface ManifestPhoto {\n  /**\n   * Martian sol of photos\n   */\n  sol?: number;\n  /**\n   * Earth date of photos\n   */\n  earth_date?: string;\n  /**\n   * Total photos of day\n   */\n  total_photos?: number;\n  /**\n   * Camera photos\n   */\n  cameras?: CAMERA[];\n  /**\n   * Camera photos info\n   */\n  camerasInfo?: RoverCamera[];\n}\n\n/**\n * Information about a rover\n */\nexport interface Manifest {\n  /**\n   * Name of rover\n   */\n  name?: string;\n  /**\n   * Landing earth date\n   */\n  landing_date?: string;\n  /**\n   * Launching earth date\n   */\n  launch_date?: string;\n  /**\n   * Status of the rover\n   */\n  status?: STATUS;\n  /**\n   * Last martian day\n   */\n  max_sol?: number;\n  /**\n   * Last earth date\n   */\n  max_date?: string;\n  /**\n   * Total rover photos\n   */\n  total_photos?: number;\n  /**\n   * List of rover photos\n   */\n  photos?: ManifestPhoto[];\n}\n\n/**\n * Interface for the API reponse about the rover manifest\n */\nexport interface ApiManifest {\n  /**\n   * Object with rover photo data\n   */\n  photo_manifest: Manifest\n}\n\n/**\n * Interface with photo camera API information\n */\nexport interface APIPhotoCameraResponse {\n  /**\n   * Id of camera\n   */\n  id: number;\n  /**\n   * Name of camera\n   */\n  name: CAMERA;\n  /**\n   * Id of rover\n   */\n  rover_id: number;\n  /**\n   * Full name of camera\n   */\n  full_name: string;\n}\n\n/**\n * Interface for rover info response\n */\nexport interface APIPhotoRoverResponse {\n  /**\n   * Id for rover\n   */\n  id: number;\n  /**\n   * Rover name\n   */\n  name: string;\n  /**\n   * Landing earth date\n   */\n  landing_date: string;\n  /**\n   * Launch earth date\n   */\n  launch_date: string;\n  /**\n   * Rover status\n   */\n  status: STATUS;\n}\n\n/**\n * Interface with photo information from the API\n */\nexport interface APIPhotoDataReponse {\n  /**\n   * Photo id\n   */\n  id: number;\n  /**\n   * Martian sol of the photo\n   */\n  sol: number;\n  /**\n   * Information about the camera that took the photo\n   */\n  camera: APIPhotoCameraResponse;\n  /**\n   * URL to the image\n   */\n  img_src: string;\n  /**\n   * Earth date of the photo\n   */\n  earth_date: string;\n  /**\n   * Information about the rover that took the photo\n   */\n  rover: APIPhotoRoverResponse;\n}\n\n/**\n * Interface with information about the reponse for photos from the API\n */\nexport interface APIPhotoResponse {\n  /**\n   * List of photos received from the API\n   */\n  photos: APIPhotoDataReponse[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PaginatorComponent.html":{"url":"components/PaginatorComponent.html","title":"component - PaginatorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PaginatorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/shared/components/paginator/paginator.component.ts\n\n\n\n    \n        Description\n    \n    \n        Shows buttons or a page selector, according a value, for navigate about the pages of a results list\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-paginator\n            \n\n            \n                styleUrls\n                ./paginator.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./paginator.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                pageSelector\n                            \n                            \n                                pagesList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changePage\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                photosFirstPage\n                            \n                            \n                                photosLastPage\n                            \n                            \n                                photosNextPage\n                            \n                            \n                                photosPreviousPage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                actionFirst\n                            \n                            \n                                actionLast\n                            \n                            \n                                actionNext\n                            \n                            \n                                actionPrevious\n                            \n                            \n                                currentPage\n                            \n                            \n                                enabledNext\n                            \n                            \n                                enabledPrevious\n                            \n                            \n                                store\n                            \n                            \n                                totalPages\n                            \n                            \n                                useButtons\n                            \n                            \n                                usePageSelector\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                pageChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        actionFirst\n                    \n                \n                \n                    \n                        Type :     TypedAction\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/shared/components/paginator/paginator.component.ts:24\n                            \n                        \n                \n                    \n                        Store action for execute when user press the First button\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        actionLast\n                    \n                \n                \n                    \n                        Type :     TypedAction\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/shared/components/paginator/paginator.component.ts:36\n                            \n                        \n                \n                    \n                        Store action for execute when user press the Last button\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        actionNext\n                    \n                \n                \n                    \n                        Type :     TypedAction\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/shared/components/paginator/paginator.component.ts:32\n                            \n                        \n                \n                    \n                        Store action for execute when user press the Next button\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        actionPrevious\n                    \n                \n                \n                    \n                        Type :     TypedAction\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/shared/components/paginator/paginator.component.ts:28\n                            \n                        \n                \n                    \n                        Store action for execute when user press the Previous button\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        currentPage\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/shared/components/paginator/paginator.component.ts:41\n                            \n                        \n                \n                    \n                        Current page to show in the component\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        enabledNext\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/shared/components/paginator/paginator.component.ts:53\n                            \n                        \n                \n                    \n                        Indicator to enable / disable the Next and Last buttons\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        enabledPrevious\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/shared/components/paginator/paginator.component.ts:49\n                            \n                        \n                \n                    \n                        Indicator to enable / disable the Previous and First buttons\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        store\n                    \n                \n                \n                    \n                        Type :     Store\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/shared/components/paginator/paginator.component.ts:20\n                            \n                        \n                \n                    \n                        Store as the origin of data to paginate\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        totalPages\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/shared/components/paginator/paginator.component.ts:45\n                            \n                        \n                \n                    \n                        Total pages in the results list\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        useButtons\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/shared/components/paginator/paginator.component.ts:58\n                            \n                        \n                \n                    \n                        Indicator to use the navigation buttons in the paginator\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        usePageSelector\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/shared/components/paginator/paginator.component.ts:62\n                            \n                        \n                \n                    \n                        Indicator to use the pages selector in the paginator\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        pageChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/shared/components/paginator/paginator.component.ts:67\n                            \n                        \n                \n                    \n                        Event to emit when pages changes using the selector\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changePage\n                        \n                    \n                \n            \n            \n                \nchangePage(page: MatSelectChange)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/shared/components/paginator/paginator.component.ts:118\n                \n            \n\n\n            \n                \n                    Executes the action when the pages changes in the selector\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    page\n                                    \n                                            MatSelectChange\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/shared/components/paginator/paginator.component.ts:81\n                \n            \n\n\n            \n                \n                    Angular life cycle event to upate the pages list on change the total pages value\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        photosFirstPage\n                        \n                    \n                \n            \n            \n                \nphotosFirstPage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/shared/components/paginator/paginator.component.ts:90\n                \n            \n\n\n            \n                \n                    Executes the action for the first page button\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        photosLastPage\n                        \n                    \n                \n            \n            \n                \nphotosLastPage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/shared/components/paginator/paginator.component.ts:111\n                \n            \n\n\n            \n                \n                    Executes the action for the last page button\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        photosNextPage\n                        \n                    \n                \n            \n            \n                \nphotosNextPage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/shared/components/paginator/paginator.component.ts:104\n                \n            \n\n\n            \n                \n                    Executes the action for the next page button\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        photosPreviousPage\n                        \n                    \n                \n            \n            \n                \nphotosPreviousPage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/shared/components/paginator/paginator.component.ts:97\n                \n            \n\n\n            \n                \n                    Executes the action for the previous page button\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        pageSelector\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormControl\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/shared/components/paginator/paginator.component.ts:72\n                        \n                    \n\n            \n                \n                    Form control for the pages selector\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pagesList\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/shared/components/paginator/paginator.component.ts:76\n                        \n                    \n\n            \n                \n                    List of pages for the selector\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, Output } from \"@angular/core\";\nimport { FormControl } from \"@angular/forms\";\nimport { MatSelectChange } from \"@angular/material/select\";\nimport { Store } from \"@ngrx/store\";\nimport { TypedAction } from \"@ngrx/store/src/models\";\n\n/**\n * Shows buttons or a page selector, according a value, for navigate about the pages of a results list\n */\n@Component({\n  selector: 'app-paginator',\n  templateUrl: './paginator.component.html',\n  styleUrls: ['./paginator.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PaginatorComponent implements OnChanges {\n  /**\n   * Store as the origin of data to paginate\n   */\n  @Input() store!: Store;\n  /**\n   * Store action for execute when user press the First button\n   */\n  @Input() actionFirst!: TypedAction;\n  /**\n   * Store action for execute when user press the Previous button\n   */  \n  @Input() actionPrevious!: TypedAction;\n  /**\n   * Store action for execute when user press the Next button\n   */  \n  @Input() actionNext!: TypedAction;\n  /**\n   * Store action for execute when user press the Last button\n   */  \n  @Input() actionLast!: TypedAction;\n\n  /**\n   * Current page to show in the component\n   */\n  @Input() currentPage!: number;\n  /**\n   * Total pages in the results list\n   */\n  @Input() totalPages!: number;\n  /**\n   * Indicator to enable / disable the Previous and First buttons\n   */\n  @Input() enabledPrevious!: boolean;\n  /**\n   * Indicator to enable / disable the Next and Last buttons\n   */\n  @Input() enabledNext!: boolean;\n\n  /**\n   * Indicator to use the navigation buttons in the paginator\n   */\n  @Input() useButtons!: boolean;\n  /**\n   * Indicator to use the pages selector in the paginator\n   */\n  @Input() usePageSelector!: boolean;\n\n  /**\n   * Event to emit when pages changes using the selector\n   */\n  @Output() pageChange: EventEmitter = new EventEmitter();\n\n  /**\n   * Form control for the pages selector\n   */\n  pageSelector!: FormControl;\n  /**\n   * List of pages for the selector\n   */\n  pagesList!: number[];\n\n  /**\n   * Angular life cycle event to upate the pages list on change the total pages value\n   */\n  ngOnChanges(): void {\n    if (this.totalPages) {\n      this.pagesList = new Array(this.totalPages).fill(0).map((_i, index) => (index + 1));\n    }\n  }\n\n  /**\n   * Executes the action for the first page button\n   */\n  photosFirstPage(): void {\n    this.store.dispatch(this.actionFirst);\n  }\n\n  /**\n   * Executes the action for the previous page button\n   */\n  photosPreviousPage(): void {\n    this.store.dispatch(this.actionPrevious);\n  }\n\n  /**\n   * Executes the action for the next page button\n   */  \n  photosNextPage(): void {\n    this.store.dispatch(this.actionNext);\n  }\n\n  /**\n   * Executes the action for the last page button\n   */\n  photosLastPage(): void {\n    this.store.dispatch(this.actionLast);\n  }\n\n  /**\n   * Executes the action when the pages changes in the selector\n   */\n  changePage(page: MatSelectChange): void {\n    this.pageChange.emit(page.value);\n  }\n}\n\n    \n\n    \n        \n  \n    First\n    \n    Previous\n    \n    Page {{ currentPage }} of {{ totalPages }}\n    Next\n    \n    Last\n    \n  \n\n  \n    \n      Page (of {{ totalPages }})\n      \n        {{ page }}\n      \n    \n  \n\n    \n\n    \n                \n                    ./paginator.component.scss\n                \n                .pagination {\n  padding: 1.5rem .5rem;\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n\n  @media (max-width: 600px) {\n    flex-direction: column;\n\n    & > * {\n      margin-left: 0;\n      margin-bottom: .5rem;\n    }\n  }\n\n  & > * {\n    margin-left: .5rem;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      First        Previous        Page {{ currentPage }} of {{ totalPages }}    Next        Last                  Page (of {{ totalPages }})              {{ page }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'ErrorDialogLauncherComponent', 'selector': 'app-error-dialog-launcher'},{'name': 'ErrorDialogPopupComponent', 'selector': 'app-error-dialog-popup'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'PaginatorComponent', 'selector': 'app-paginator'},{'name': 'RoverPanelComponent', 'selector': 'app-rover-panel'},{'name': 'RoverPhotosComponent', 'selector': 'app-rover-photos'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PaginatorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PanelLoadStatus.html":{"url":"interfaces/PanelLoadStatus.html","title":"interface - PanelLoadStatus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PanelLoadStatus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/store.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface with information about the load status for an information panel\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            loaded\n                                        \n                                \n                                \n                                        \n                                            loading\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Indicator that an error is occurred\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loaded\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loaded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Indicator that is loaded\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Indicator that is loading\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface PanelLoadStatus {\n  /**\n   * Indicator that is loading\n   */\n  loading: boolean;\n  /**\n   * Indicator that is loaded\n   */\n  loaded: boolean;\n  /**\n   * Indicator that an error is occurred\n   */\n  error: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Rover.html":{"url":"interfaces/Rover.html","title":"interface - Rover","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Rover\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/rovers.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface with information about a rover\n\n            \n\n            \n                Extends\n            \n            \n                        Manifest\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cameras\n                                        \n                                \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            currentPhotosPage\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            errorCode\n                                        \n                                \n                                \n                                        \n                                            errorLoadingManifest\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            errorMessage\n                                        \n                                \n                                \n                                        \n                                            haveManifest\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            loadedManifest\n                                        \n                                \n                                \n                                        \n                                            loadingManifest\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            photosPages\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            roverPhotos\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            roverPhotosCurrentPage\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            roverPhotosTotalItems\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            roverPhotosTotalPages\n                                        \n                                \n                                \n                                        \n                                            selectedIndex\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cameras\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cameras:     RoverCamera[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     RoverCamera[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    List of rover cameras\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Code for the rover\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        currentPhotosPage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        currentPhotosPage:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The current photo page is showing\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errorCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Code to show in the error dialog\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errorLoadingManifest\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorLoadingManifest:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Indicator that an error has occurred loading manifest information\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errorMessage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorMessage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Message to show in the error dialog\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        haveManifest\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        haveManifest:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Indicator that the manifest info of rover is in\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Identificator for the rover\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loadedManifest\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loadedManifest:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Indicator that the manifest information is loaded\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loadingManifest\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loadingManifest:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Indicator that is loading the manifest information\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        photosPages\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        photosPages:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Total number of information photo pages\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roverPhotos\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roverPhotos:     RoverPhoto[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     RoverPhoto[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    List of rover photos (images)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roverPhotosCurrentPage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roverPhotosCurrentPage:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Number of rover photo page that is shown (images)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roverPhotosTotalItems\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roverPhotosTotalItems:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Total number of rover photos (images)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roverPhotosTotalPages\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roverPhotosTotalPages:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Total number of rover photo pages (images)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedIndex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selectedIndex:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Tab index selected in the pnanel\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { CAMERA } from \"./constants\";\nimport { Manifest } from \"./manifest\";\n\n/**\n * Inteface with values for request a rover photos list\n */\nexport interface RoverPhotosRequest {\n  /**\n   * Maritan sol for request the photos\n   */\n  sol: string;\n  /**\n   * Rover camera for request the photos\n   */\n  camera?: string;\n}\n\n/**\n * Interface for rover item for lists\n */\nexport interface RoverListItem {\n  /**\n   * Rover code\n   */\n  code: string;\n  /**\n   * Rover name\n   */\n  name: string;\n  /**\n   * Camera list of camera\n   */\n  camera: CAMERA[];\n}\n\n/**\n * Interface with information for a rover camera\n */\nexport interface RoverCamera {\n  /**\n   * Camera code\n   */\n  camera: CAMERA;\n  /**\n   * Camera description\n   */\n  description?: string;\n}\n\n/**\n * Interface with information for a rover photo\n */\nexport interface RoverPhoto {\n  /**\n   * Id of photo\n   */\n  id: number;\n  /**\n   * Photo camera code\n   */\n  camera: CAMERA;\n  /**\n   * Photo camera full name\n   */\n  cameraFullName: string;\n  /**\n   * Photo earth date\n   */\n  earthDate: string;\n  /**\n   * Photo martian sol\n   */\n  sol: number;\n  /**\n   * URL of the photo\n   */\n  imgSrc: string;\n}\n\n/**\n * Interface with information about a rover\n */\nexport interface Rover extends Manifest {\n  /**\n   * Identificator for the rover\n   */\n  id: string;\n  /**\n   * Code for the rover\n   */\n  code: string;\n  /**\n   * Tab index selected in the pnanel\n   */\n  selectedIndex: number;\n  /**\n   * List of rover cameras\n   */\n  cameras: RoverCamera[];\n  /**\n   * Indicator that the manifest info of rover is in\n   */\n  haveManifest: boolean;\n  /**\n   * Indicator that is loading the manifest information\n   */\n  loadingManifest: boolean;\n  /**\n   * Indicator that the manifest information is loaded\n   */\n  loadedManifest: boolean;\n  /**\n   * Indicator that an error has occurred loading manifest information\n   */\n  errorLoadingManifest: boolean;\n  /**\n   * Total number of information photo pages\n   */\n  photosPages?: number;\n  /**\n   * The current photo page is showing\n   */\n  currentPhotosPage?: number;\n  /**\n   * Code to show in the error dialog\n   */\n  errorCode?: string;\n  /**\n   * Message to show in the error dialog\n   */\n  errorMessage?: string;\n  /**\n   * List of rover photos (images)\n   */\n  roverPhotos?: RoverPhoto[];\n  /**\n   * Total number of rover photos (images)\n   */\n  roverPhotosTotalItems?: number;\n  /**\n   * Total number of rover photo pages (images)\n   */\n  roverPhotosTotalPages?: number;\n  /**\n   * Number of rover photo page that is shown (images)\n   */\n  roverPhotosCurrentPage?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RoverCamera.html":{"url":"interfaces/RoverCamera.html","title":"interface - RoverCamera","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RoverCamera\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/rovers.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface with information for a rover camera\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            camera\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        camera\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        camera:         CAMERA\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CAMERA\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Camera code\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Camera description\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { CAMERA } from \"./constants\";\nimport { Manifest } from \"./manifest\";\n\n/**\n * Inteface with values for request a rover photos list\n */\nexport interface RoverPhotosRequest {\n  /**\n   * Maritan sol for request the photos\n   */\n  sol: string;\n  /**\n   * Rover camera for request the photos\n   */\n  camera?: string;\n}\n\n/**\n * Interface for rover item for lists\n */\nexport interface RoverListItem {\n  /**\n   * Rover code\n   */\n  code: string;\n  /**\n   * Rover name\n   */\n  name: string;\n  /**\n   * Camera list of camera\n   */\n  camera: CAMERA[];\n}\n\n/**\n * Interface with information for a rover camera\n */\nexport interface RoverCamera {\n  /**\n   * Camera code\n   */\n  camera: CAMERA;\n  /**\n   * Camera description\n   */\n  description?: string;\n}\n\n/**\n * Interface with information for a rover photo\n */\nexport interface RoverPhoto {\n  /**\n   * Id of photo\n   */\n  id: number;\n  /**\n   * Photo camera code\n   */\n  camera: CAMERA;\n  /**\n   * Photo camera full name\n   */\n  cameraFullName: string;\n  /**\n   * Photo earth date\n   */\n  earthDate: string;\n  /**\n   * Photo martian sol\n   */\n  sol: number;\n  /**\n   * URL of the photo\n   */\n  imgSrc: string;\n}\n\n/**\n * Interface with information about a rover\n */\nexport interface Rover extends Manifest {\n  /**\n   * Identificator for the rover\n   */\n  id: string;\n  /**\n   * Code for the rover\n   */\n  code: string;\n  /**\n   * Tab index selected in the pnanel\n   */\n  selectedIndex: number;\n  /**\n   * List of rover cameras\n   */\n  cameras: RoverCamera[];\n  /**\n   * Indicator that the manifest info of rover is in\n   */\n  haveManifest: boolean;\n  /**\n   * Indicator that is loading the manifest information\n   */\n  loadingManifest: boolean;\n  /**\n   * Indicator that the manifest information is loaded\n   */\n  loadedManifest: boolean;\n  /**\n   * Indicator that an error has occurred loading manifest information\n   */\n  errorLoadingManifest: boolean;\n  /**\n   * Total number of information photo pages\n   */\n  photosPages?: number;\n  /**\n   * The current photo page is showing\n   */\n  currentPhotosPage?: number;\n  /**\n   * Code to show in the error dialog\n   */\n  errorCode?: string;\n  /**\n   * Message to show in the error dialog\n   */\n  errorMessage?: string;\n  /**\n   * List of rover photos (images)\n   */\n  roverPhotos?: RoverPhoto[];\n  /**\n   * Total number of rover photos (images)\n   */\n  roverPhotosTotalItems?: number;\n  /**\n   * Total number of rover photo pages (images)\n   */\n  roverPhotosTotalPages?: number;\n  /**\n   * Number of rover photo page that is shown (images)\n   */\n  roverPhotosCurrentPage?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RoverListItem.html":{"url":"interfaces/RoverListItem.html","title":"interface - RoverListItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RoverListItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/rovers.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for rover item for lists\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            camera\n                                        \n                                \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        camera\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        camera:         CAMERA[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CAMERA[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Camera list of camera\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Rover code\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Rover name\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { CAMERA } from \"./constants\";\nimport { Manifest } from \"./manifest\";\n\n/**\n * Inteface with values for request a rover photos list\n */\nexport interface RoverPhotosRequest {\n  /**\n   * Maritan sol for request the photos\n   */\n  sol: string;\n  /**\n   * Rover camera for request the photos\n   */\n  camera?: string;\n}\n\n/**\n * Interface for rover item for lists\n */\nexport interface RoverListItem {\n  /**\n   * Rover code\n   */\n  code: string;\n  /**\n   * Rover name\n   */\n  name: string;\n  /**\n   * Camera list of camera\n   */\n  camera: CAMERA[];\n}\n\n/**\n * Interface with information for a rover camera\n */\nexport interface RoverCamera {\n  /**\n   * Camera code\n   */\n  camera: CAMERA;\n  /**\n   * Camera description\n   */\n  description?: string;\n}\n\n/**\n * Interface with information for a rover photo\n */\nexport interface RoverPhoto {\n  /**\n   * Id of photo\n   */\n  id: number;\n  /**\n   * Photo camera code\n   */\n  camera: CAMERA;\n  /**\n   * Photo camera full name\n   */\n  cameraFullName: string;\n  /**\n   * Photo earth date\n   */\n  earthDate: string;\n  /**\n   * Photo martian sol\n   */\n  sol: number;\n  /**\n   * URL of the photo\n   */\n  imgSrc: string;\n}\n\n/**\n * Interface with information about a rover\n */\nexport interface Rover extends Manifest {\n  /**\n   * Identificator for the rover\n   */\n  id: string;\n  /**\n   * Code for the rover\n   */\n  code: string;\n  /**\n   * Tab index selected in the pnanel\n   */\n  selectedIndex: number;\n  /**\n   * List of rover cameras\n   */\n  cameras: RoverCamera[];\n  /**\n   * Indicator that the manifest info of rover is in\n   */\n  haveManifest: boolean;\n  /**\n   * Indicator that is loading the manifest information\n   */\n  loadingManifest: boolean;\n  /**\n   * Indicator that the manifest information is loaded\n   */\n  loadedManifest: boolean;\n  /**\n   * Indicator that an error has occurred loading manifest information\n   */\n  errorLoadingManifest: boolean;\n  /**\n   * Total number of information photo pages\n   */\n  photosPages?: number;\n  /**\n   * The current photo page is showing\n   */\n  currentPhotosPage?: number;\n  /**\n   * Code to show in the error dialog\n   */\n  errorCode?: string;\n  /**\n   * Message to show in the error dialog\n   */\n  errorMessage?: string;\n  /**\n   * List of rover photos (images)\n   */\n  roverPhotos?: RoverPhoto[];\n  /**\n   * Total number of rover photos (images)\n   */\n  roverPhotosTotalItems?: number;\n  /**\n   * Total number of rover photo pages (images)\n   */\n  roverPhotosTotalPages?: number;\n  /**\n   * Number of rover photo page that is shown (images)\n   */\n  roverPhotosCurrentPage?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RoverPanelComponent.html":{"url":"components/RoverPanelComponent.html","title":"component - RoverPanelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RoverPanelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/dashboard/components/rover-panel/rover-panel.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component that shows a panel with information about a rover\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-rover-panel\n            \n\n            \n                styleUrls\n                ./rover-panel.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./rover-panel.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                camerasList\n                            \n                            \n                                currentPage\n                            \n                            \n                                errorLoadingManifestData\n                            \n                            \n                                firstPageAction\n                            \n                            \n                                hasManifest\n                            \n                            \n                                isErrorLoadingManifest\n                            \n                            \n                                isExpanded\n                            \n                            \n                                isLoadedManifest\n                            \n                            \n                                isLoadingManifest\n                            \n                            \n                                landingDate\n                            \n                            \n                                lastPageAction\n                            \n                            \n                                launchDate\n                            \n                            \n                                loadAction\n                            \n                            \n                                maxDate\n                            \n                            \n                                maxSol\n                            \n                            \n                                nextButtonEnabled\n                            \n                            \n                                nextPageAction\n                            \n                            \n                                noManifestLoading\n                            \n                            \n                                photosList\n                            \n                            \n                                previousButtonEnabled\n                            \n                            \n                                previousPageAction\n                            \n                            \n                                selectedIndex\n                            \n                            \n                                status\n                            \n                            \n                                totalPages\n                            \n                            \n                                totalPhotos\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                afterCollapse\n                            \n                            \n                                afterExpand\n                            \n                            \n                                changeSelectedTab\n                            \n                            \n                                closeErrorModal\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                setActions\n                            \n                            \n                                    Private\n                                setSubscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                code\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    storeRef\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/dashboard/components/rover-panel/rover-panel.component.ts:136\n                            \n                        \n\n                \n                    \n                            Constructor for the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Store for app data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        code\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/dashboard/components/rover-panel/rover-panel.component.ts:26\n                            \n                        \n                \n                    \n                        Code of the rover that contains the panel\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        afterCollapse\n                        \n                    \n                \n            \n            \n                \nafterCollapse()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/dashboard/components/rover-panel/rover-panel.component.ts:164\n                \n            \n\n\n            \n                \n                    Dispatchs an action after a rover panel is collapsed\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        afterExpand\n                        \n                    \n                \n            \n            \n                \nafterExpand()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/dashboard/components/rover-panel/rover-panel.component.ts:157\n                \n            \n\n\n            \n                \n                    Dispatchs an action after a rover panel is expanded\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeSelectedTab\n                        \n                    \n                \n            \n            \n                \nchangeSelectedTab(tab: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/dashboard/components/rover-panel/rover-panel.component.ts:172\n                \n            \n\n\n            \n                \n                    Changes the selected tab of a rover panel\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    tab\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        number of the selected tab\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closeErrorModal\n                        \n                    \n                \n            \n            \n                \ncloseErrorModal()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/dashboard/components/rover-panel/rover-panel.component.ts:182\n                \n            \n\n\n            \n                \n                    Closes the modal that shows information about an error\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/dashboard/components/rover-panel/rover-panel.component.ts:149\n                \n            \n\n\n            \n                \n                    Angular life cycle: sets the actions needed in the component and inits the subscriptions\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setActions\n                        \n                    \n                \n            \n            \n                \n                    \n                    setActions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/dashboard/components/rover-panel/rover-panel.component.ts:218\n                \n            \n\n\n            \n                \n                    Sets the actions for the component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setSubscriptions\n                        \n                    \n                \n            \n            \n                \n                    \n                    setSubscriptions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/dashboard/components/rover-panel/rover-panel.component.ts:191\n                \n            \n\n\n            \n                \n                    Sets the subscritpions for the component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        camerasList\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/dashboard/components/rover-panel/rover-panel.component.ts:96\n                        \n                    \n\n            \n                \n                    List of cameras availables for the rover\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/dashboard/components/rover-panel/rover-panel.component.ts:117\n                        \n                    \n\n            \n                \n                    Current page to show the list\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorLoadingManifestData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/dashboard/components/rover-panel/rover-panel.component.ts:55\n                        \n                    \n\n            \n                \n                    Information about the error occurred loading the manifest\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstPageAction\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Action\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/dashboard/components/rover-panel/rover-panel.component.ts:101\n                        \n                    \n\n            \n                \n                    Action to dispatch on press 'First' button\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasManifest\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/dashboard/components/rover-panel/rover-panel.component.ts:39\n                        \n                    \n\n            \n                \n                    Indicator if panel has the manifest information loaded\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isErrorLoadingManifest\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/dashboard/components/rover-panel/rover-panel.component.ts:51\n                        \n                    \n\n            \n                \n                    Indicator that an error was occurred loading the manifest\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isExpanded\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/dashboard/components/rover-panel/rover-panel.component.ts:35\n                        \n                    \n\n            \n                \n                    Indicator that the panel is expanded or not\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoadedManifest\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/dashboard/components/rover-panel/rover-panel.component.ts:47\n                        \n                    \n\n            \n                \n                    Indicator that the manifest is loaded\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoadingManifest\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/dashboard/components/rover-panel/rover-panel.component.ts:43\n                        \n                    \n\n            \n                \n                    Indicator that the manifest is loading\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        landingDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/dashboard/components/rover-panel/rover-panel.component.ts:72\n                        \n                    \n\n            \n                \n                    Landing date of the rover\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastPageAction\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Action\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/dashboard/components/rover-panel/rover-panel.component.ts:113\n                        \n                    \n\n            \n                \n                    Action to dispatch on press 'Last' button\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        launchDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/dashboard/components/rover-panel/rover-panel.component.ts:68\n                        \n                    \n\n            \n                \n                    Launch date of the rover\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadAction\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Action\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/dashboard/components/rover-panel/rover-panel.component.ts:63\n                        \n                    \n\n            \n                \n                    Action to dispatch for load the manifest\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        maxDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/dashboard/components/rover-panel/rover-panel.component.ts:76\n                        \n                    \n\n            \n                \n                    Last earth date with photo\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        maxSol\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/dashboard/components/rover-panel/rover-panel.component.ts:80\n                        \n                    \n\n            \n                \n                    Last martian sol with photo\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nextButtonEnabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/dashboard/components/rover-panel/rover-panel.component.ts:125\n                        \n                    \n\n            \n                \n                    If the 'next' and 'last' buttons can be enabled\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nextPageAction\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Action\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/dashboard/components/rover-panel/rover-panel.component.ts:109\n                        \n                    \n\n            \n                \n                    Action to dispatch on press 'Next' button\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        noManifestLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/dashboard/components/rover-panel/rover-panel.component.ts:59\n                        \n                    \n\n            \n                \n                    Indicator if the manifest isn't loaded\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        photosList\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/dashboard/components/rover-panel/rover-panel.component.ts:88\n                        \n                    \n\n            \n                \n                    List of days that the rover took a photo\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        previousButtonEnabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/dashboard/components/rover-panel/rover-panel.component.ts:121\n                        \n                    \n\n            \n                \n                    If the 'previous' and 'first' buttons can be enabled\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        previousPageAction\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Action\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/dashboard/components/rover-panel/rover-panel.component.ts:105\n                        \n                    \n\n            \n                \n                    Action to dispatch on press 'Previous' button\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedIndex\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/dashboard/components/rover-panel/rover-panel.component.ts:31\n                        \n                    \n\n            \n                \n                    Index of the selected tab into the panel\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/dashboard/components/rover-panel/rover-panel.component.ts:92\n                        \n                    \n\n            \n                \n                    Status of the rover\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalPages\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/dashboard/components/rover-panel/rover-panel.component.ts:129\n                        \n                    \n\n            \n                \n                    Total pages of the information photos list\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalPhotos\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/dashboard/components/rover-panel/rover-panel.component.ts:84\n                        \n                    \n\n            \n                \n                    Total photos taken by the rover\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        storeRef\n                    \n                \n\n                \n                    \n                        getstoreRef()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/dashboard/components/rover-panel/rover-panel.component.ts:134\n                                \n                            \n                    \n                        \n                                Returns a reference to the store\n\n\n                                \n                                    Returns :         Store\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\nimport { Action, Store } from '@ngrx/store';\nimport { map, Observable } from 'rxjs';\nimport * as ROVER_ACTIONS from '../../../../store/app/app.actions';\nimport * as ROVER_SELECTORS from '../../../../store/app/app.selectors';\nimport { StoreState } from '../../../../store/app/app.state';\nimport { ManifestPhoto } from '../../../../models/manifest';\nimport { STATUS } from '../../../../models/constants';\nimport { RoverCamera } from '../../../../models/rovers';\nimport { ErrorDialogData } from '../../../../models/error';\nimport { Utils } from '../../../../modules/shared/utils.class';\n\n/**\n * Component that shows a panel with information about a rover\n */\n@Component({\n  selector: 'app-rover-panel',\n  templateUrl: './rover-panel.component.html',\n  styleUrls: ['./rover-panel.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RoverPanelComponent implements OnInit {\n  /**\n   * Code of the rover that contains the panel\n   */\n  @Input() code!: string;\n\n  /**\n   * Index of the selected tab into the panel\n   */\n  selectedIndex!: Observable;\n  /**\n   * Indicator that the panel is expanded or not\n   */\n  isExpanded!: Observable;\n  /**\n   * Indicator if panel has the manifest information loaded\n   */\n  hasManifest!: Observable;\n  /**\n   * Indicator that the manifest is loading\n   */\n  isLoadingManifest!: Observable;\n  /**\n   * Indicator that the manifest is loaded\n   */  \n  isLoadedManifest!: Observable;\n  /**\n   * Indicator that an error was occurred loading the manifest\n   */\n  isErrorLoadingManifest!: Observable;\n  /**\n   * Information about the error occurred loading the manifest\n   */\n  errorLoadingManifestData!: Observable;\n  /**\n   * Indicator if the manifest isn't loaded\n   */\n  noManifestLoading!: Observable;\n  /**\n   * Action to dispatch for load the manifest\n   */\n  loadAction!: Action;\n\n  /**\n   * Launch date of the rover\n   */\n  launchDate!: Observable;\n  /**\n   * Landing date of the rover\n   */\n  landingDate!: Observable;\n  /**\n   * Last earth date with photo\n   */\n  maxDate!: Observable;\n  /**\n   * Last martian sol with photo\n   */\n  maxSol!: Observable;\n  /**\n   * Total photos taken by the rover\n   */\n  totalPhotos!: Observable;\n  /**\n   * List of days that the rover took a photo\n   */\n  photosList!: Observable;\n  /**\n   * Status of the rover\n   */\n  status!: Observable;\n  /**\n   * List of cameras availables for the rover\n   */\n  camerasList!: Observable;\n\n  /**\n   * Action to dispatch on press 'First' button\n   */\n  firstPageAction!: Action;\n  /**\n   * Action to dispatch on press 'Previous' button\n   */  \n  previousPageAction!: Action;\n  /**\n   * Action to dispatch on press 'Next' button\n   */\n  nextPageAction!: Action;\n  /**\n   * Action to dispatch on press 'Last' button\n   */  \n  lastPageAction!: Action;\n  /**\n   * Current page to show the list\n   */\n  currentPage!: Observable;\n  /**\n   * If the 'previous' and 'first' buttons can be enabled\n   */\n  previousButtonEnabled!: Observable;\n  /**\n   * If the 'next' and 'last' buttons can be enabled\n   */  \n  nextButtonEnabled!: Observable;\n  /**\n   * Total pages of the information photos list \n   */\n  totalPages!: Observable;\n\n  /**\n   * Returns a reference to the store\n   */\n  get storeRef(): Store {\n    return this.store;\n  }\n\n  /**\n   * Constructor for the component\n   * @param {Store} store Store for app data\n   */\n  constructor(\n    private readonly store: Store\n  ) {}\n\n  /**\n   * Angular life cycle: sets the actions needed in the component and inits the subscriptions\n   */\n  ngOnInit(): void {\n    this.setActions();\n    this.setSubscriptions();\n  }\n\n  /**\n   * Dispatchs an action after a rover panel is expanded\n   */\n  afterExpand(): void {\n    this.store.dispatch(ROVER_ACTIONS.expandedPanel({ rover: this.code }));\n  }\n\n  /**\n   * Dispatchs an action after a rover panel is collapsed\n   */\n  afterCollapse(): void {\n    this.store.dispatch(ROVER_ACTIONS.collapsedPanel({ rover: this.code }));\n  }\n\n  /**\n   * Changes the selected tab of a rover panel\n   * @param {number} tab number of the selected tab\n   */\n  changeSelectedTab(tab: number): void {\n    this.store.dispatch(ROVER_ACTIONS.selectedTabChanged({\n      rover: this.code,\n      tab,\n    }));\n  }\n\n  /**\n   * Closes the modal that shows information about an error\n   */\n  closeErrorModal(): void {\n    this.store.dispatch(ROVER_ACTIONS.collapsedPanel({ rover: this.code }));\n    this.store.dispatch(ROVER_ACTIONS.resetErrorRover({ rover: this.code }));\n    this.store.dispatch(ROVER_ACTIONS.resetRoverManifestLoad({ rover: this.code }));\n  }\n\n  /**\n   * Sets the subscritpions for the component\n   */\n  private setSubscriptions(): void {\n    this.noManifestLoading = this.store.select(ROVER_SELECTORS.getNoManifestLoading);\n    this.selectedIndex = Utils.getRoverValueFromStore(this.store, ROVER_SELECTORS.getSelectedIndex, this.code);\n    this.isExpanded = Utils.getRoverValueFromStore(this.store, ROVER_SELECTORS.getExpandedPanelStatus, this.code);\n    this.hasManifest = Utils.getRoverValueFromStore(this.store, ROVER_SELECTORS.getHasManifest, this.code);\n    this.isLoadingManifest = Utils.getRoverValueFromStore(this.store, ROVER_SELECTORS.getIsLoadingManifest, this.code);\n    this.isLoadedManifest = Utils.getRoverValueFromStore(this.store, ROVER_SELECTORS.getIsLoadedManifest, this.code);\n    this.isErrorLoadingManifest = Utils.getRoverValueFromStore(this.store, ROVER_SELECTORS.getIsErrorLoadingManifest, this.code);\n    this.errorLoadingManifestData = Utils.getRoverValueFromStore(this.store, ROVER_SELECTORS.getErrorLoadingManifestData, this.code);\n    this.launchDate = Utils.getRoverValueFromStore(this.store, ROVER_SELECTORS.getLaunchDates, this.code);\n    this.landingDate = Utils.getRoverValueFromStore(this.store, ROVER_SELECTORS.getLandingDates, this.code);\n    this.maxDate = Utils.getRoverValueFromStore(this.store, ROVER_SELECTORS.getMaxDate, this.code);\n    this.maxSol = Utils.getRoverValueFromStore(this.store, ROVER_SELECTORS.getMaxSol, this.code);\n    this.totalPhotos = Utils.getRoverValueFromStore(this.store, ROVER_SELECTORS.getTotalPhotos, this.code);\n    this.photosList = Utils.getRoverValueFromStore(this.store, ROVER_SELECTORS.getPhotosList, this.code);\n    this.status = Utils.getRoverValueFromStore(this.store, ROVER_SELECTORS.getStatus, this.code);\n    this.camerasList = Utils.getRoverValueFromStore(this.store, ROVER_SELECTORS.getCamerasList, this.code);\n\n    this.currentPage = Utils.getRoverValueFromStore(this.store, ROVER_SELECTORS.getCurrentPhotosPage, this.code).pipe(map(value => value ?? 1));\n    this.previousButtonEnabled = Utils.getRoverValueFromStore(this.store, ROVER_SELECTORS.getEnablePreviousButton, this.code).pipe(map(value => value ?? false));\n    this.nextButtonEnabled = Utils.getRoverValueFromStore(this.store, ROVER_SELECTORS.getEnableNextButton, this.code).pipe(map(value => value ?? false));\n    this.totalPages = Utils.getRoverValueFromStore(this.store, ROVER_SELECTORS.getPhotosPages, this.code).pipe(map(value => value ?? 1));\n  }\n\n  /**\n   * Sets the actions for the component\n   */\n  private setActions(): void {\n    this.loadAction = ROVER_ACTIONS.loadRoverManifest({ rover: this.code });\n    this.firstPageAction = ROVER_ACTIONS.goToFirstPhotosPage({ rover: this.code });\n    this.previousPageAction = ROVER_ACTIONS.goToPreviousPhotosPage({ rover: this.code });\n    this.nextPageAction = ROVER_ACTIONS.goToNextPhotosPage({ rover: this.code });\n    this.lastPageAction = ROVER_ACTIONS.goToLastPhotosPage({ rover: this.code });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n        {{ code | titlecase }}\n      \n    \n  \n  \n    \n      \n        \n          \n            calendar_month\n          \n          {{ launchDate | async | date: 'fullDate' }}\n        \n      \n      \n        \n          \n            calendar_month\n          \n          {{ landingDate | async | date: 'fullDate' }}\n        \n      \n      \n        \n          \n            calendar_month\n          \n          {{ maxDate | async | date: 'fullDate' }}\n        \n        The most recent Earth date from which photos exist\n        \n          (Description from https://api.nasa.gov)\n        \n      \n      \n        \n          \n            calendar_month\n          \n          {{ maxSol | async | number:'0.0-0' }}\n        \n        The most recent Martian sol from which photos exist\n        \n          (Description from https://api.nasa.gov)\n        \n      \n      \n        \n          \n            monitor_heart\n          \n          {{ status | async | uppercase }}\n        \n      \n      \n        \n          \n            photo_camera\n          \n          {{ camera.camera}}: {{ camera.description }}\n        \n      \n      \n        \n          \n            photo_library\n          \n          {{ totalPhotos | async | number:'0.0-0' }}\n        \n      \n      \n        \n          \n            Note: You can see the photos for only a camera by clicking in the button with their name in the card actions section, or see all of them by clicking the ALL button.\n          \n          \n          \n        \n        \n          \n            \n          \n        \n        \n        \n      \n    \n  \n  \n    \n    \n  \n\n\n\n    \n\n    \n                \n                    ./rover-panel.component.scss\n                \n                .mat-expansion-panel {\n  margin-bottom: 1rem;\n}\n\na {\n  text-decoration: none;\n  font-weight: bold;\n  color: #000;\n}\n\n.title-bar {\n  &__wrapper {\n    display: flex;\n    align-items: center;\n    justify-content: flex-start;\n  }\n\n  &__avatar {\n    width: 2rem;\n    height: 2rem;\n    border-radius: 50%;\n    margin-right: 1rem;\n    background-size: cover;\n  }\n}\n\n.data-box {\n  &__wrapper {\n    margin: 1rem;\n    overflow: hidden;\n    border-radius: .25rem;\n    display: inline-flex;\n    align-items: center;\n    justify-content: flex-start;\n  }\n\n  &__icon {\n    display: flex;\n    background-color: #D8D8D8;\n  }\n\n  &__icon,\n  &__value {\n    padding: .35rem .75rem .5rem .75rem;\n  }\n\n  &__value {\n    padding-bottom: .25rem;\n  }\n\n  &__list-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    & > * {\n      flex: 1 1;\n    }\n  }\n}\n\n.list-photo-info {\n  &__wrapper {\n    display: grid;\n    grid-template-columns: 25% 25% 25% 25%;\n    grid-template-rows: auto;\n\n    @media only screen and (max-width: 600px) {\n      grid-template-columns: 100%;\n    }\n  }\n\n  &__item {\n    padding: .5rem;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            {{ code | titlecase }}                                                      calendar_month                    {{ launchDate | async | date: \\'fullDate\\' }}                                                  calendar_month                    {{ landingDate | async | date: \\'fullDate\\' }}                                                  calendar_month                    {{ maxDate | async | date: \\'fullDate\\' }}                The most recent Earth date from which photos exist                  (Description from https://api.nasa.gov)                                                  calendar_month                    {{ maxSol | async | number:\\'0.0-0\\' }}                The most recent Martian sol from which photos exist                  (Description from https://api.nasa.gov)                                                  monitor_heart                    {{ status | async | uppercase }}                                                  photo_camera                    {{ camera.camera}}: {{ camera.description }}                                                  photo_library                    {{ totalPhotos | async | number:\\'0.0-0\\' }}                                                  Note: You can see the photos for only a camera by clicking in the button with their name in the card actions section, or see all of them by clicking the ALL button.                                                                                                                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'ErrorDialogLauncherComponent', 'selector': 'app-error-dialog-launcher'},{'name': 'ErrorDialogPopupComponent', 'selector': 'app-error-dialog-popup'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'PaginatorComponent', 'selector': 'app-paginator'},{'name': 'RoverPanelComponent', 'selector': 'app-rover-panel'},{'name': 'RoverPhotosComponent', 'selector': 'app-rover-photos'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RoverPanelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RoverPhoto.html":{"url":"interfaces/RoverPhoto.html","title":"interface - RoverPhoto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RoverPhoto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/rovers.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface with information for a rover photo\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            camera\n                                        \n                                \n                                \n                                        \n                                            cameraFullName\n                                        \n                                \n                                \n                                        \n                                            earthDate\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            imgSrc\n                                        \n                                \n                                \n                                        \n                                            sol\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        camera\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        camera:         CAMERA\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CAMERA\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Photo camera code\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cameraFullName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cameraFullName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Photo camera full name\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        earthDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        earthDate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Photo earth date\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Id of photo\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imgSrc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        imgSrc:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    URL of the photo\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sol\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sol:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Photo martian sol\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { CAMERA } from \"./constants\";\nimport { Manifest } from \"./manifest\";\n\n/**\n * Inteface with values for request a rover photos list\n */\nexport interface RoverPhotosRequest {\n  /**\n   * Maritan sol for request the photos\n   */\n  sol: string;\n  /**\n   * Rover camera for request the photos\n   */\n  camera?: string;\n}\n\n/**\n * Interface for rover item for lists\n */\nexport interface RoverListItem {\n  /**\n   * Rover code\n   */\n  code: string;\n  /**\n   * Rover name\n   */\n  name: string;\n  /**\n   * Camera list of camera\n   */\n  camera: CAMERA[];\n}\n\n/**\n * Interface with information for a rover camera\n */\nexport interface RoverCamera {\n  /**\n   * Camera code\n   */\n  camera: CAMERA;\n  /**\n   * Camera description\n   */\n  description?: string;\n}\n\n/**\n * Interface with information for a rover photo\n */\nexport interface RoverPhoto {\n  /**\n   * Id of photo\n   */\n  id: number;\n  /**\n   * Photo camera code\n   */\n  camera: CAMERA;\n  /**\n   * Photo camera full name\n   */\n  cameraFullName: string;\n  /**\n   * Photo earth date\n   */\n  earthDate: string;\n  /**\n   * Photo martian sol\n   */\n  sol: number;\n  /**\n   * URL of the photo\n   */\n  imgSrc: string;\n}\n\n/**\n * Interface with information about a rover\n */\nexport interface Rover extends Manifest {\n  /**\n   * Identificator for the rover\n   */\n  id: string;\n  /**\n   * Code for the rover\n   */\n  code: string;\n  /**\n   * Tab index selected in the pnanel\n   */\n  selectedIndex: number;\n  /**\n   * List of rover cameras\n   */\n  cameras: RoverCamera[];\n  /**\n   * Indicator that the manifest info of rover is in\n   */\n  haveManifest: boolean;\n  /**\n   * Indicator that is loading the manifest information\n   */\n  loadingManifest: boolean;\n  /**\n   * Indicator that the manifest information is loaded\n   */\n  loadedManifest: boolean;\n  /**\n   * Indicator that an error has occurred loading manifest information\n   */\n  errorLoadingManifest: boolean;\n  /**\n   * Total number of information photo pages\n   */\n  photosPages?: number;\n  /**\n   * The current photo page is showing\n   */\n  currentPhotosPage?: number;\n  /**\n   * Code to show in the error dialog\n   */\n  errorCode?: string;\n  /**\n   * Message to show in the error dialog\n   */\n  errorMessage?: string;\n  /**\n   * List of rover photos (images)\n   */\n  roverPhotos?: RoverPhoto[];\n  /**\n   * Total number of rover photos (images)\n   */\n  roverPhotosTotalItems?: number;\n  /**\n   * Total number of rover photo pages (images)\n   */\n  roverPhotosTotalPages?: number;\n  /**\n   * Number of rover photo page that is shown (images)\n   */\n  roverPhotosCurrentPage?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RoverPhotosComponent.html":{"url":"components/RoverPhotosComponent.html","title":"component - RoverPhotosComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RoverPhotosComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/dashboard/components/rover-photos/rover-photos.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component to show rover photo information from a day\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-rover-photos\n            \n\n            \n                styleUrls\n                ./rover-photos.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./rover-photos.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                viewCameraPhotos\n                            \n                            \n                                viewRoverPhotos\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                code\n                            \n                            \n                                data\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/dashboard/components/rover-photos/rover-photos.component.ts:23\n                            \n                        \n\n                \n                    \n                            Constructor of the component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        code\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/dashboard/components/rover-photos/rover-photos.component.ts:23\n                            \n                        \n                \n                    \n                        Code of the rover to get the information\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :         ManifestPhoto\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/dashboard/components/rover-photos/rover-photos.component.ts:19\n                            \n                        \n                \n                    \n                        Information about the photos for a day\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        viewCameraPhotos\n                        \n                    \n                \n            \n            \n                \nviewCameraPhotos(day: number, camera: CAMERA)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/dashboard/components/rover-photos/rover-photos.component.ts:38\n                \n            \n\n\n            \n                \n                    Navigates to the detail page to show the photos for a day and a camera\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    day\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        martian sol when the photo was taken\n\n                                    \n                                \n                                \n                                    camera\n                                    \n                                                CAMERA\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        code of camera that was took the photo\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewRoverPhotos\n                        \n                    \n                \n            \n            \n                \nviewRoverPhotos(day: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/dashboard/components/rover-photos/rover-photos.component.ts:46\n                \n            \n\n\n            \n                \n                    Navigates to the detail page to show the photos for a day\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    day\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        martian sol when the photo was taken\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { CAMERA } from \"../../../../models/constants\";\nimport { ManifestPhoto } from \"../../../../models/manifest\";\n\n/**\n * Component to show rover photo information from a day\n */\n@Component({\n  selector: 'app-rover-photos',\n  templateUrl: './rover-photos.component.html',\n  styleUrls: ['./rover-photos.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush \n})\nexport class RoverPhotosComponent {\n  /**\n   * Information about the photos for a day\n   */\n  @Input() data!: ManifestPhoto;\n  /**\n   * Code of the rover to get the information\n   */\n  @Input() code!: string;\n\n  /**\n   * Constructor of the component\n   * @param {Store} store Store for app data\n   */\n  constructor(\n    private readonly router: Router\n  ) {}\n\n  /**\n   * Navigates to the detail page to show the photos for a day and a camera\n   * @param {number} day martian sol when the photo was taken\n   * @param {CAMERA} camera code of camera that was took the photo\n   */\n  viewCameraPhotos(day: number, camera: CAMERA): void {\n    this.router.navigate(['details', this.code, day, camera]);\n  }\n\n  /**\n   * Navigates to the detail page to show the photos for a day\n   * @param {number} day martian sol when the photo was taken\n   */\n  viewRoverPhotos(day: number): void {\n    this.router.navigate(['details', this.code, day]);\n  }\n}\n    \n\n    \n        \n  \n    \n    {{ data.total_photos }} photos\n    {{ data.sol }}: {{ data.earth_date | date: 'fullDate' }}\n  \n  \n  \n    \n      Cameras\n      \n        photo_camera\n        {{ camInfo.camera }}\n        {{ camInfo.description }}\n      \n    \n  \n  \n  \n    \n      {{ cam }}\n    \n    \n      ALL\n    \n  \n\n\n    \n\n    \n                \n                    ./rover-photos.component.scss\n                \n                .rover-avatar {\n  background-size: cover;\n}\n\n.mat-card-actions {\n  padding-left: .75rem !important;\n  padding-right: .75rem !important;\n}\n\n.mat-button {\n  margin-bottom: .5rem !important;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{ data.total_photos }} photos    {{ data.sol }}: {{ data.earth_date | date: \\'fullDate\\' }}                Cameras              photo_camera        {{ camInfo.camera }}        {{ camInfo.description }}                          {{ cam }}              ALL      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DetailsComponent', 'selector': 'app-details'},{'name': 'ErrorDialogLauncherComponent', 'selector': 'app-error-dialog-launcher'},{'name': 'ErrorDialogPopupComponent', 'selector': 'app-error-dialog-popup'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'PaginatorComponent', 'selector': 'app-paginator'},{'name': 'RoverPanelComponent', 'selector': 'app-rover-panel'},{'name': 'RoverPhotosComponent', 'selector': 'app-rover-photos'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RoverPhotosComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RoverPhotosRequest.html":{"url":"interfaces/RoverPhotosRequest.html","title":"interface - RoverPhotosRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RoverPhotosRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/rovers.ts\n        \n\n\n            \n                Description\n            \n            \n                Inteface with values for request a rover photos list\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            camera\n                                        \n                                \n                                \n                                        \n                                            sol\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        camera\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        camera:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Rover camera for request the photos\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sol\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sol:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Maritan sol for request the photos\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { CAMERA } from \"./constants\";\nimport { Manifest } from \"./manifest\";\n\n/**\n * Inteface with values for request a rover photos list\n */\nexport interface RoverPhotosRequest {\n  /**\n   * Maritan sol for request the photos\n   */\n  sol: string;\n  /**\n   * Rover camera for request the photos\n   */\n  camera?: string;\n}\n\n/**\n * Interface for rover item for lists\n */\nexport interface RoverListItem {\n  /**\n   * Rover code\n   */\n  code: string;\n  /**\n   * Rover name\n   */\n  name: string;\n  /**\n   * Camera list of camera\n   */\n  camera: CAMERA[];\n}\n\n/**\n * Interface with information for a rover camera\n */\nexport interface RoverCamera {\n  /**\n   * Camera code\n   */\n  camera: CAMERA;\n  /**\n   * Camera description\n   */\n  description?: string;\n}\n\n/**\n * Interface with information for a rover photo\n */\nexport interface RoverPhoto {\n  /**\n   * Id of photo\n   */\n  id: number;\n  /**\n   * Photo camera code\n   */\n  camera: CAMERA;\n  /**\n   * Photo camera full name\n   */\n  cameraFullName: string;\n  /**\n   * Photo earth date\n   */\n  earthDate: string;\n  /**\n   * Photo martian sol\n   */\n  sol: number;\n  /**\n   * URL of the photo\n   */\n  imgSrc: string;\n}\n\n/**\n * Interface with information about a rover\n */\nexport interface Rover extends Manifest {\n  /**\n   * Identificator for the rover\n   */\n  id: string;\n  /**\n   * Code for the rover\n   */\n  code: string;\n  /**\n   * Tab index selected in the pnanel\n   */\n  selectedIndex: number;\n  /**\n   * List of rover cameras\n   */\n  cameras: RoverCamera[];\n  /**\n   * Indicator that the manifest info of rover is in\n   */\n  haveManifest: boolean;\n  /**\n   * Indicator that is loading the manifest information\n   */\n  loadingManifest: boolean;\n  /**\n   * Indicator that the manifest information is loaded\n   */\n  loadedManifest: boolean;\n  /**\n   * Indicator that an error has occurred loading manifest information\n   */\n  errorLoadingManifest: boolean;\n  /**\n   * Total number of information photo pages\n   */\n  photosPages?: number;\n  /**\n   * The current photo page is showing\n   */\n  currentPhotosPage?: number;\n  /**\n   * Code to show in the error dialog\n   */\n  errorCode?: string;\n  /**\n   * Message to show in the error dialog\n   */\n  errorMessage?: string;\n  /**\n   * List of rover photos (images)\n   */\n  roverPhotos?: RoverPhoto[];\n  /**\n   * Total number of rover photos (images)\n   */\n  roverPhotosTotalItems?: number;\n  /**\n   * Total number of rover photo pages (images)\n   */\n  roverPhotosTotalPages?: number;\n  /**\n   * Number of rover photo page that is shown (images)\n   */\n  roverPhotosCurrentPage?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SharedModule_declarations\n\n\n\n\nErrorDialogLauncherComponent\n\nErrorDialogLauncherComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nErrorDialogLauncherComponent->SharedModule\n\n\n\n\n\nErrorDialogPopupComponent\n\nErrorDialogPopupComponent\n\nSharedModule -->\n\nErrorDialogPopupComponent->SharedModule\n\n\n\n\n\nLoaderComponent\n\nLoaderComponent\n\nSharedModule -->\n\nLoaderComponent->SharedModule\n\n\n\n\n\nPaginatorComponent\n\nPaginatorComponent\n\nSharedModule -->\n\nPaginatorComponent->SharedModule\n\n\n\n\n\nErrorDialogLauncherComponent \n\nErrorDialogLauncherComponent \n\nErrorDialogLauncherComponent  -->\n\nSharedModule->ErrorDialogLauncherComponent \n\n\n\n\n\nErrorDialogPopupComponent \n\nErrorDialogPopupComponent \n\nErrorDialogPopupComponent  -->\n\nSharedModule->ErrorDialogPopupComponent \n\n\n\n\n\nLoaderComponent \n\nLoaderComponent \n\nLoaderComponent  -->\n\nSharedModule->LoaderComponent \n\n\n\n\n\nPaginatorComponent \n\nPaginatorComponent \n\nPaginatorComponent  -->\n\nSharedModule->PaginatorComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/shared/shared.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Module for shared features\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ErrorDialogLauncherComponent\n                        \n                        \n                            ErrorDialogPopupComponent\n                        \n                        \n                            LoaderComponent\n                        \n                        \n                            PaginatorComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ErrorDialogLauncherComponent\n                        \n                        \n                            ErrorDialogPopupComponent\n                        \n                        \n                            LoaderComponent\n                        \n                        \n                            PaginatorComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule, DatePipe, DecimalPipe } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatExpansionModule } from \"@angular/material/expansion\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatProgressSpinnerModule } from \"@angular/material/progress-spinner\";\nimport { MatTabsModule } from \"@angular/material/tabs\";\nimport { LoaderComponent } from \"./components/loader/loader.component\";\nimport { PaginatorComponent } from \"./components/paginator/paginator.component\";\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatListModule } from '@angular/material/list';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { ErrorDialogLauncherComponent } from \"./components/error-dialog/error-dialog-launcher/error-dialog-launcher.component\";\nimport { ErrorDialogPopupComponent } from \"./components/error-dialog/error-dialog-popup/error-dialog-popup.component\";\nimport { MatSelectModule } from '@angular/material/select';\n\n/**\n * Module for shared features\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    MatProgressSpinnerModule,\n    MatExpansionModule,\n    MatTabsModule,\n    MatIconModule,\n    MatCardModule,\n    MatDividerModule,\n    MatListModule,\n    MatDialogModule,\n    MatSelectModule\n  ],\n  declarations: [\n    LoaderComponent,\n    PaginatorComponent,\n    ErrorDialogLauncherComponent,\n    ErrorDialogPopupComponent\n  ],\n  providers: [\n    DatePipe,\n    DecimalPipe\n  ],\n  exports: [\n    CommonModule,\n    MatButtonModule,\n    MatProgressSpinnerModule,\n    MatExpansionModule,\n    MatTabsModule,\n    MatIconModule,\n    MatCardModule,\n    MatDividerModule,\n    MatListModule,\n    MatDialogModule,\n    MatSelectModule,\n    DatePipe,\n    DecimalPipe,\n    LoaderComponent,\n    PaginatorComponent,\n    ErrorDialogLauncherComponent,\n    ErrorDialogPopupComponent\n  ]\n})\nexport class SharedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StoreEffects.html":{"url":"injectables/StoreEffects.html","title":"injectable - StoreEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StoreEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/app/app.effects.ts\n        \n\n\n            \n                Description\n            \n            \n                Effects for store actions that needs to use services of the API\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadCamPhotos$\n                            \n                            \n                                loadRoverManifest$\n                            \n                            \n                                routerNavigated$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, apiService: ApiService, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/store/app/app.effects.ts:19\n                            \n                        \n\n                \n                    \n                            Constructor of the service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                actions of the store\n\n                                                        \n                                                \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                service to call the endpoints of the Nasa API\n\n                                                        \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Store for app data\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loadCamPhotos$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadCamPhotos),\n      concatLatestFrom(() => [\n        this.store.select(selectRouteParams),\n        this.store.select(SELECTORS.getHasManifest),\n        this.store.select(SELECTORS.getHasDetailsMinimumParams)\n      ]),\n      switchMap(([_action, params, hasManifest, hasMinimumParams]) => {\n        let errorCode!: string;\n        let errorMessage!: string;\n\n        if (hasMinimumParams && !!hasManifest.get(params[DETAILS_PARAMS.CODE])) {\n          const requestParams: RoverPhotosRequest = {\n            sol: params[DETAILS_PARAMS.SOL],\n            camera: params[DETAILS_PARAMS.CAMERA]\n          }\n          return this.apiService.loadRoverPhotos(params[DETAILS_PARAMS.CODE], requestParams).pipe(\n            map((data: APIPhotoResponse) => ({\n              type: ACTIONS.LOAD_CAM_PHOTOS_SUCCESS,\n              data: data,\n              rover: params[DETAILS_PARAMS.CODE],\n              camera: params[DETAILS_PARAMS.CAMERA]\n            })),\n            catchError((e) => {\n              errorCode = e?.error?.error?.code ?? e?.name;\n              errorMessage = e?.error?.error?.message ?? e?.message;\n              return of({\n                type: ACTIONS.LOAD_CAM_PHOTOS_ERROR,\n                errorCode,\n                errorMessage\n              })\n            })\n          );\n        }\n\n        errorCode = hasMinimumParams ? 'NO MANIFEST': 'NO ROUTE PARAMS';\n        errorMessage = hasMinimumParams ? `No manifest loaded for ${params[DETAILS_PARAMS.CODE]}` : 'Missing needed params to load data';\n\n        return of({\n          type: ACTIONS.LOAD_CAM_PHOTOS_ERROR,\n          errorCode,\n          errorMessage\n        }).pipe(delay(0));\n      })\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/store/app/app.effects.ts:76\n                        \n                    \n\n            \n                \n                    Effect to load the list of photos for a rover\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadRoverManifest$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadRoverManifest),\n      switchMap(action =>\n        this.apiService.loadRoverManifest(action.rover).pipe(\n          map((data: ApiManifest) => ({\n            type: ACTIONS.LOAD_ROVER_MANIFEST_SUCCESS,\n            data: data.photo_manifest,\n            rover: action.rover\n          })),\n          catchError((e) => {\n            const errorCode = e?.error?.error?.code ?? e?.name;\n            const errorMessage = e?.error?.error?.message ?? e?.message;\n            return of({\n              type: ACTIONS.LOAD_ROVER_MANIFEST_ERROR,\n              rover: action.rover,\n              errorCode,\n              errorMessage\n            })\n          })\n        )\n      )\n    )\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/store/app/app.effects.ts:48\n                        \n                    \n\n            \n                \n                    Effect to load a rover manifest\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        routerNavigated$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n    this.actions$.pipe(\n      ofType(ROUTER_NAVIGATED),\n      switchMap(() => {\n        return of({ type: ACTIONS.RESET_LOAD_STATUS })\n      })\n    ),\n    { useEffectsErrorHandler: false }\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/store/app/app.effects.ts:35\n                        \n                    \n\n            \n                \n                    Effect to execute when the app finish navigation to one page\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { Actions, createEffect, ofType, concatLatestFrom } from \"@ngrx/effects\";\nimport { map, switchMap, catchError, of, delay } from \"rxjs\";\nimport { ApiService } from '../../services/app.services';\nimport { ApiManifest, APIPhotoResponse } from \"../../models/manifest\";\nimport { ROUTER_NAVIGATED } from \"@ngrx/router-store\";\nimport { StoreState } from \"./app.state\";\nimport { Store } from \"@ngrx/store\";\nimport { selectRouteParams } from \"../router/router.selectors\";\nimport { RoverPhotosRequest } from \"../../models/rovers\";\nimport { ACTIONS, loadCamPhotos, loadRoverManifest } from \"./app.actions\";\nimport * as SELECTORS from './app.selectors';\nimport { DETAILS_PARAMS } from \"../../models/constants\";\n\n/**\n * Effects for store actions that needs to use services of the API\n */\n@Injectable()\nexport class StoreEffects {\n  /**\n   * Constructor of the service\n   * @param {Actions} actions$ actions of the store\n   * @param {ApiService} apiService service to call the endpoints of the Nasa API\n   * @param {Store} store Store for app data\n   */\n  constructor(\n    private readonly actions$: Actions,\n    private readonly apiService: ApiService,\n    private readonly store: Store\n  ) {}\n\n  /**\n   * Effect to execute when the app finish navigation to one page\n   */\n  routerNavigated$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(ROUTER_NAVIGATED),\n      switchMap(() => {\n        return of({ type: ACTIONS.RESET_LOAD_STATUS })\n      })\n    ),\n    { useEffectsErrorHandler: false }\n  );\n\n  /**\n   * Effect to load a rover manifest\n   */\n  loadRoverManifest$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadRoverManifest),\n      switchMap(action =>\n        this.apiService.loadRoverManifest(action.rover).pipe(\n          map((data: ApiManifest) => ({\n            type: ACTIONS.LOAD_ROVER_MANIFEST_SUCCESS,\n            data: data.photo_manifest,\n            rover: action.rover\n          })),\n          catchError((e) => {\n            const errorCode = e?.error?.error?.code ?? e?.name;\n            const errorMessage = e?.error?.error?.message ?? e?.message;\n            return of({\n              type: ACTIONS.LOAD_ROVER_MANIFEST_ERROR,\n              rover: action.rover,\n              errorCode,\n              errorMessage\n            })\n          })\n        )\n      )\n    )\n  );\n\n  /**\n   * Effect to load the list of photos for a rover\n   */\n  loadCamPhotos$ = createEffect(() =>\n    this.actions$.pipe(\n      ofType(loadCamPhotos),\n      concatLatestFrom(() => [\n        this.store.select(selectRouteParams),\n        this.store.select(SELECTORS.getHasManifest),\n        this.store.select(SELECTORS.getHasDetailsMinimumParams)\n      ]),\n      switchMap(([_action, params, hasManifest, hasMinimumParams]) => {\n        let errorCode!: string;\n        let errorMessage!: string;\n\n        if (hasMinimumParams && !!hasManifest.get(params[DETAILS_PARAMS.CODE])) {\n          const requestParams: RoverPhotosRequest = {\n            sol: params[DETAILS_PARAMS.SOL],\n            camera: params[DETAILS_PARAMS.CAMERA]\n          }\n          return this.apiService.loadRoverPhotos(params[DETAILS_PARAMS.CODE], requestParams).pipe(\n            map((data: APIPhotoResponse) => ({\n              type: ACTIONS.LOAD_CAM_PHOTOS_SUCCESS,\n              data: data,\n              rover: params[DETAILS_PARAMS.CODE],\n              camera: params[DETAILS_PARAMS.CAMERA]\n            })),\n            catchError((e) => {\n              errorCode = e?.error?.error?.code ?? e?.name;\n              errorMessage = e?.error?.error?.message ?? e?.message;\n              return of({\n                type: ACTIONS.LOAD_CAM_PHOTOS_ERROR,\n                errorCode,\n                errorMessage\n              })\n            })\n          );\n        }\n\n        errorCode = hasMinimumParams ? 'NO MANIFEST': 'NO ROUTE PARAMS';\n        errorMessage = hasMinimumParams ? `No manifest loaded for ${params[DETAILS_PARAMS.CODE]}` : 'Missing needed params to load data';\n\n        return of({\n          type: ACTIONS.LOAD_CAM_PHOTOS_ERROR,\n          errorCode,\n          errorMessage\n        }).pipe(delay(0));\n      })\n    )\n  );\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StoreState.html":{"url":"interfaces/StoreState.html","title":"interface - StoreState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StoreState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/store/app/app.state.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for the store\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            camerasList\n                                        \n                                \n                                \n                                        \n                                            errorCode\n                                        \n                                \n                                \n                                        \n                                            errorLoading\n                                        \n                                \n                                \n                                        \n                                            errorMessage\n                                        \n                                \n                                \n                                        \n                                            expandedPanel\n                                        \n                                \n                                \n                                        \n                                            initialDataReady\n                                        \n                                \n                                \n                                        \n                                            loaded\n                                        \n                                \n                                \n                                        \n                                            loading\n                                        \n                                \n                                \n                                        \n                                            roverCodesList\n                                        \n                                \n                                \n                                        \n                                            roversList\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        camerasList\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        camerasList:     RoverCamera[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     RoverCamera[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    List of cameras avaiables for the rovers\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errorCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Error code for show in the error modal\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errorLoading\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorLoading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Indicator that an error was occurred loading data\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errorMessage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorMessage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Error message for show in the error modal\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expandedPanel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expandedPanel:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    List of the panels that are expanded\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        initialDataReady\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        initialDataReady:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Indicator if initial data is ready for the app\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loaded\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loaded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Indicator that data is loaded\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Indicator that data is loading\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roverCodesList\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roverCodesList:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    List of rover codes\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roversList\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roversList:         Rover[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Rover[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    List of rovers\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Rover, RoverCamera } from \"../../models/rovers\";\n\n/**\n * Interface for the store\n */\nexport interface StoreState {\n  /**\n   * List of cameras avaiables for the rovers\n   */\n  camerasList: RoverCamera[];\n  /**\n   * List of rovers\n   */\n  roversList: Rover[];\n  /**\n   * List of rover codes\n   */\n  roverCodesList: string[];\n  /**\n   * Indicator if initial data is ready for the app\n   */\n  initialDataReady: boolean;\n  /**\n   * List of the panels that are expanded\n   */\n  expandedPanel: string[];\n  /**\n   * Indicator that data is loading\n   */\n  loading: boolean;\n  /**\n   * Indicator that data is loaded\n   */\n  loaded: boolean;\n  /**\n   * Indicator that an error was occurred loading data\n   */  \n  errorLoading: boolean;\n  /**\n   * Error code for show in the error modal\n   */\n  errorCode: string;\n  /**\n   * Error message for show in the error modal\n   */  \n  errorMessage: string;\n}\n\n/**\n * Initial state of the store\n */\nexport const initialState: StoreState = {\n  camerasList: [],\n  roversList: [],\n  roverCodesList: [],\n  initialDataReady: false,\n  expandedPanel: [],\n  loading: false,\n  loaded: false,\n  errorLoading: false,\n  errorCode: '',\n  errorMessage: ''\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Utils.html":{"url":"classes/Utils.html","title":"class - Utils","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Utils\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/shared/utils.class.ts\n        \n\n\n            \n                Description\n            \n            \n                Class with utils for the app\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getRoverValueFromStore\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getRoverValueFromStore\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRoverValueFromStore(store: Store, selector: any, code: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/shared/utils.class.ts:15\n                \n            \n\n\n            \n                \n                    Returns the value for a rover from the map received of the store, according their name\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    store\n                                    \n                                            Store\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        store to extract the data\n\n                                    \n                                \n                                \n                                    selector\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        selector of the store that provides the data\n\n                                    \n                                \n                                \n                                    code\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        name of the rover for filter the data\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        the data obtained from the selector filtered by the rover\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Store } from \"@ngrx/store\";\nimport { map } from \"rxjs\";\n\n/**\n * Class with utils for the app\n */\nexport class Utils {\n  /**\n   * Returns the value for a rover from the map received of the store, according their name\n   * @param {Store} store store to extract the data\n   * @param {any} selector selector of the store that provides the data\n   * @param {string} code name of the rover for filter the data\n   * @returns {any} the data obtained from the selector filtered by the rover\n   */\n  static getRoverValueFromStore(store: Store, selector: any, code: string) {\n    return store.select(selector).pipe(map(data => (data as Map).get(code)));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/models/constants.ts\n            \n            variable\n            DETAIL_PHOTOS_PER_PAGE\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/models/constants.ts\n            \n            variable\n            PHOTOS_PER_PAGE\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/models/error.ts\n            \n            interface\n            ErrorDialogData\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/models/manifest.ts\n            \n            interface\n            ApiManifest\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/models/manifest.ts\n            \n            interface\n            APIPhotoCameraResponse\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/models/manifest.ts\n            \n            interface\n            APIPhotoDataReponse\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/models/manifest.ts\n            \n            interface\n            APIPhotoResponse\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/models/manifest.ts\n            \n            interface\n            APIPhotoRoverResponse\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/models/manifest.ts\n            \n            interface\n            Manifest\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/models/manifest.ts\n            \n            interface\n            ManifestPhoto\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/models/rovers.ts\n            \n            interface\n            Rover\n            \n                100 %\n                (17/17)\n            \n        \n        \n            \n                \n                src/app/models/rovers.ts\n            \n            interface\n            RoverCamera\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/models/rovers.ts\n            \n            interface\n            RoverListItem\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/models/rovers.ts\n            \n            interface\n            RoverPhoto\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/models/rovers.ts\n            \n            interface\n            RoverPhotosRequest\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/models/store.ts\n            \n            interface\n            PanelLoadStatus\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/modules/dashboard/components/dashboard/dashboard.component.ts\n            \n            component\n            DashboardComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/modules/dashboard/components/rover-panel/rover-panel.component.ts\n            \n            component\n            RoverPanelComponent\n            \n                100 %\n                (35/35)\n            \n        \n        \n            \n                \n                src/app/modules/dashboard/components/rover-photos/rover-photos.component.ts\n            \n            component\n            RoverPhotosComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/modules/details/components/details/details.component.ts\n            \n            component\n            DetailsComponent\n            \n                100 %\n                (16/16)\n            \n        \n        \n            \n                \n                src/app/modules/shared/components/error-dialog/error-dialog-launcher/error-dialog-launcher.component.ts\n            \n            component\n            ErrorDialogLauncherComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/modules/shared/components/error-dialog/error-dialog-popup/error-dialog-popup.component.ts\n            \n            component\n            ErrorDialogPopupComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/modules/shared/components/loader/loader.component.ts\n            \n            component\n            LoaderComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/modules/shared/components/paginator/paginator.component.ts\n            \n            component\n            PaginatorComponent\n            \n                100 %\n                (21/21)\n            \n        \n        \n            \n                \n                src/app/modules/shared/utils.class.ts\n            \n            class\n            Utils\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/services/app.services.ts\n            \n            injectable\n            ApiService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/store/app/app.actions.ts\n            \n            variable\n            collapsedPanel\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/app/app.actions.ts\n            \n            variable\n            expandedPanel\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/app/app.actions.ts\n            \n            variable\n            goToFirstPhotosPage\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/app/app.actions.ts\n            \n            variable\n            goToLastPhotosPage\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/app/app.actions.ts\n            \n            variable\n            goToNextPhotosPage\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/app/app.actions.ts\n            \n            variable\n            goToPhotosPage\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/app/app.actions.ts\n            \n            variable\n            goToPreviousPhotosPage\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/app/app.actions.ts\n            \n            variable\n            loadCamPhotos\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/app/app.actions.ts\n            \n            variable\n            loadCamPhotosError\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/app/app.actions.ts\n            \n            variable\n            loadCamPhotosSuccess\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/app/app.actions.ts\n            \n            variable\n            loadRoverManifest\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/app/app.actions.ts\n            \n            variable\n            loadRoverManifestError\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/app/app.actions.ts\n            \n            variable\n            loadRoverManifestSuccess\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/app/app.actions.ts\n            \n            variable\n            resetErrorRover\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/app/app.actions.ts\n            \n            variable\n            resetLoadStatus\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/app/app.actions.ts\n            \n            variable\n            resetRoverManifestLoad\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/app/app.actions.ts\n            \n            variable\n            selectedTabChanged\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/app/app.actions.ts\n            \n            variable\n            setInitialData\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/app/app.effects.ts\n            \n            injectable\n            StoreEffects\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/store/app/app.reducers.ts\n            \n            function\n            _collapsedPanel\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/app/app.reducers.ts\n            \n            function\n            _expandPanel\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/app/app.reducers.ts\n            \n            function\n            _goToFirstPhotosPage\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/app/app.reducers.ts\n            \n            function\n            _goToLastPhotosPage\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/app/app.reducers.ts\n            \n            function\n            _goToNextPhotosPage\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/app/app.reducers.ts\n            \n            function\n            _goToPhotosPage\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/app/app.reducers.ts\n            \n            function\n            _goToPreviousPhotosPage\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/app/app.reducers.ts\n            \n            function\n            _loadCamPhotos\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/app/app.reducers.ts\n            \n            function\n            _loadCamPhotosError\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/app/app.reducers.ts\n            \n            function\n            _loadCamPhotosSuccess\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/app/app.reducers.ts\n            \n            function\n            _loadRoverManifest\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/app/app.reducers.ts\n            \n            function\n            _loadRoverManifestError\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/app/app.reducers.ts\n            \n            function\n            _loadRoverManifestSuccess\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/app/app.reducers.ts\n            \n            function\n            _resetErrorRover\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/app/app.reducers.ts\n            \n            function\n            _resetLoadStatus\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/app/app.reducers.ts\n            \n            function\n            _resetRoverManifestLoad\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/app/app.reducers.ts\n            \n            function\n            _selectedTabChanged\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/app/app.reducers.ts\n            \n            function\n            _setInitialData\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/app/app.reducers.ts\n            \n            function\n            _updateCurrentPhotosPage\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/app/app.reducers.ts\n            \n            function\n            storeReducer\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/app/app.reducers.ts\n            \n            variable\n            _storeReducer\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/app/app.selectors.ts\n            \n            function\n            createValueMap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/app/app.selectors.ts\n            \n            function\n            getNotPaginatedPhotoList\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/app/app.selectors.ts\n            \n            variable\n            getCamerasList\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/app/app.selectors.ts\n            \n            variable\n            getCodesList\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/app/app.selectors.ts\n            \n            variable\n            getCurrentPhotosPage\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/app/app.selectors.ts\n            \n            variable\n            getDetailRoverPhotosList\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/app/app.selectors.ts\n            \n            variable\n            getDetailsCurrentPage\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/app/app.selectors.ts\n            \n            variable\n            getDetailsRover\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/app/app.selectors.ts\n            \n            variable\n            getEnableNextButton\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/app/app.selectors.ts\n            \n            variable\n            getEnablePreviousButton\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/app/app.selectors.ts\n            \n            variable\n            getErrorData\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/app/app.selectors.ts\n            \n            variable\n            getErrorLoadingManifestData\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/app/app.selectors.ts\n            \n            variable\n            getExpandedPanelStatus\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/app/app.selectors.ts\n            \n            variable\n            getHasDetailRoverPhotosList\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/app/app.selectors.ts\n            \n            variable\n            getHasDetailsMinimumParams\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/app/app.selectors.ts\n            \n            variable\n            getHasManifest\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/app/app.selectors.ts\n            \n            variable\n            getInitialDataIsReady\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/app/app.selectors.ts\n            \n            variable\n            getIsErrorLoading\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/app/app.selectors.ts\n            \n            variable\n            getIsErrorLoadingManifest\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/app/app.selectors.ts\n            \n            variable\n            getIsLoaded\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/app/app.selectors.ts\n            \n            variable\n            getIsLoadedManifest\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/app/app.selectors.ts\n            \n            variable\n            getIsLoading\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/app/app.selectors.ts\n            \n            variable\n            getIsLoadingManifest\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/app/app.selectors.ts\n            \n            variable\n            getLandingDates\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/app/app.selectors.ts\n            \n            variable\n            getLaunchDates\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/app/app.selectors.ts\n            \n            variable\n            getLoadManifestStatus\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/app/app.selectors.ts\n            \n            variable\n            getMaxDate\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/app/app.selectors.ts\n            \n            variable\n            getMaxSol\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/app/app.selectors.ts\n            \n            variable\n            getNoManifestLoading\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/app/app.selectors.ts\n            \n            variable\n            getPhotosList\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/app/app.selectors.ts\n            \n            variable\n            getPhotosPages\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/app/app.selectors.ts\n            \n            variable\n            getRoverPhotoListTotalPages\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/app/app.selectors.ts\n            \n            variable\n            getSelectedIndex\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/app/app.selectors.ts\n            \n            variable\n            getStatus\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/app/app.selectors.ts\n            \n            variable\n            getTotalPhotos\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/app/app.selectors.ts\n            \n            variable\n            selectState\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/app/app.state.ts\n            \n            interface\n            StoreState\n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                src/app/store/app/app.state.ts\n            \n            variable\n            initialState\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/store/router/router.selectors.ts\n            \n            variable\n            \n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~13.3.0\n        \n            @angular/cdk : ^13.3.5\n        \n            @angular/common : ~13.3.0\n        \n            @angular/compiler : ~13.3.0\n        \n            @angular/core : ~13.3.0\n        \n            @angular/forms : ~13.3.0\n        \n            @angular/material : ^13.3.5\n        \n            @angular/platform-browser : ~13.3.0\n        \n            @angular/platform-browser-dynamic : ~13.3.0\n        \n            @angular/router : ~13.3.0\n        \n            @ngrx/effects : ^13.1.0\n        \n            @ngrx/router-store : ^13.1.0\n        \n            @ngrx/store : ^13.1.0\n        \n            @ngrx/store-devtools : ^13.1.0\n        \n            rxjs : ~7.5.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ACTIONS   (src/.../app.actions.ts)\n                        \n                        \n                            DETAILS_PARAMS   (src/.../constants.ts)\n                        \n                        \n                            ROVER_FIELDS   (src/.../constants.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/store/app/app.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        ACTIONS\n                    \n                \n                        \n                            \n                                 SET_INITIAL_DATA\n                            \n                        \n                        \n                            \n                                Value : [NASA MARS ROVER PHOTOS] Set initial data\n                            \n                        \n                        \n                            \n                                 LOAD_ROVER_MANIFEST\n                            \n                        \n                        \n                            \n                                Value : [NASA MARS ROVER PHOTOS] Load rover manifest\n                            \n                        \n                        \n                            \n                                 LOAD_ROVER_MANIFEST_SUCCESS\n                            \n                        \n                        \n                            \n                                Value : [NASA MARS ROVER PHOTOS] Load rover manifest success\n                            \n                        \n                        \n                            \n                                 LOAD_ROVER_MANIFEST_ERROR\n                            \n                        \n                        \n                            \n                                Value : [NASA MARS ROVER PHOTOS] Load rover manifest error\n                            \n                        \n                        \n                            \n                                 RESET_ROVER_MANIFEST_LOAD\n                            \n                        \n                        \n                            \n                                Value : [NASA MARS ROVER PHOTOS] Reset rover manifest load\n                            \n                        \n                        \n                            \n                                 RESET_ERROR_ROVER\n                            \n                        \n                        \n                            \n                                Value : [NASA MARS ROVER PHOTOS] Reset error rover\n                            \n                        \n                        \n                            \n                                 GO_TO_FIRST_PHOTOS_PAGE\n                            \n                        \n                        \n                            \n                                Value : [NASA MARS ROVER PHOTOS] Go to first photos page\n                            \n                        \n                        \n                            \n                                 GO_TO_PREVIOUS_PHOTOS_PAGE\n                            \n                        \n                        \n                            \n                                Value : [NASA MARS ROVER PHOTOS] Go to previous photos page\n                            \n                        \n                        \n                            \n                                 GO_TO_NEXT_PHOTOS_PAGE\n                            \n                        \n                        \n                            \n                                Value : [NASA MARS ROVER PHOTOS] Go to next photos page\n                            \n                        \n                        \n                            \n                                 GO_TO_LAST_PHOTOS_PAGE\n                            \n                        \n                        \n                            \n                                Value : [NASA MARS ROVER PHOTOS] Go to last photos page\n                            \n                        \n                        \n                            \n                                 GO_TO_PHOTOS_PAGE\n                            \n                        \n                        \n                            \n                                Value : [NASA MARS ROVER PHOTOS] Go to photos page\n                            \n                        \n                        \n                            \n                                 EXPANDED_PANEL\n                            \n                        \n                        \n                            \n                                Value : [NASA MARS ROVER PHOTOS] Expanded panel\n                            \n                        \n                        \n                            \n                                 COLLAPSED_PANEL\n                            \n                        \n                        \n                            \n                                Value : [NASA MARS ROVER PHOTOS] Collapsed panel\n                            \n                        \n                        \n                            \n                                 SELECTED_TAB_CHANGED\n                            \n                        \n                        \n                            \n                                Value : [NASA MARS ROVER PHOTOS] Selected tab change\n                            \n                        \n                        \n                            \n                                 RESET_LOAD_STATUS\n                            \n                        \n                        \n                            \n                                Value : [NASA MARS ROVER PHOTOS] Reset load status\n                            \n                        \n                        \n                            \n                                 LOAD_CAM_PHOTOS\n                            \n                        \n                        \n                            \n                                Value : [NASA MARS ROVER PHOTOS] Load cam photos\n                            \n                        \n                        \n                            \n                                 LOAD_CAM_PHOTOS_SUCCESS\n                            \n                        \n                        \n                            \n                                Value : [NASA MARS ROVER PHOTOS] Load cam photos success\n                            \n                        \n                        \n                            \n                                 LOAD_CAM_PHOTOS_ERROR\n                            \n                        \n                        \n                            \n                                Value : [NASA MARS ROVER PHOTOS] Load cam photos error\n                            \n                        \n            \n        \n\n    src/app/models/constants.ts\n    \n        \n            \n                \n                    \n                        \n                        DETAILS_PARAMS\n                    \n                \n                    \n                        \n                            Params for the details apge\n\n                        \n                    \n                        \n                            \n                                 CODE\n                            \n                        \n                        \n                            \n                                Value : code\n                            \n                        \n                        \n                            \n                                 SOL\n                            \n                        \n                        \n                            \n                                Value : sol\n                            \n                        \n                        \n                            \n                                 CAMERA\n                            \n                        \n                        \n                            \n                                Value : camera\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ROVER_FIELDS\n                    \n                \n                    \n                        \n                            Rovers data fields for the store\n\n                        \n                    \n                        \n                            \n                                 LOADING_MANIFEST\n                            \n                        \n                        \n                            \n                                Value : loadingManifest\n                            \n                        \n                        \n                            \n                                 LOADED_MANIFEST\n                            \n                        \n                        \n                            \n                                Value : loadedManifest\n                            \n                        \n                        \n                            \n                                 ERROR_LOADING_MANIFEST\n                            \n                        \n                        \n                            \n                                Value : errorLoadingManifest\n                            \n                        \n                        \n                            \n                                 CODE\n                            \n                        \n                        \n                            \n                                Value : code\n                            \n                        \n                        \n                            \n                                 SELECTED_INDEX\n                            \n                        \n                        \n                            \n                                Value : selectedIndex\n                            \n                        \n                        \n                            \n                                 CAMERAS\n                            \n                        \n                        \n                            \n                                Value : cameras\n                            \n                        \n                        \n                            \n                                 HAVE_MANIFEST\n                            \n                        \n                        \n                            \n                                Value : haveManifest\n                            \n                        \n                        \n                            \n                                 LANDING_DATE\n                            \n                        \n                        \n                            \n                                Value : landing_date\n                            \n                        \n                        \n                            \n                                 LAUNCH_DATE\n                            \n                        \n                        \n                            \n                                Value : launch_date\n                            \n                        \n                        \n                            \n                                 STATUS\n                            \n                        \n                        \n                            \n                                Value : status\n                            \n                        \n                        \n                            \n                                 MAX_SOL\n                            \n                        \n                        \n                            \n                                Value : max_sol\n                            \n                        \n                        \n                            \n                                 MAX_DATE\n                            \n                        \n                        \n                            \n                                Value : max_date\n                            \n                        \n                        \n                            \n                                 TOTAL_PHOTOS\n                            \n                        \n                        \n                            \n                                Value : total_photos\n                            \n                        \n                        \n                            \n                                 PHOTOS\n                            \n                        \n                        \n                            \n                                Value : photos\n                            \n                        \n                        \n                            \n                                 PHOTOS_PAGES\n                            \n                        \n                        \n                            \n                                Value : photosPages\n                            \n                        \n                        \n                            \n                                 CURRENT_PHOTOS_PAGE\n                            \n                        \n                        \n                            \n                                Value : currentPhotosPage\n                            \n                        \n                        \n                            \n                                 ERROR_CODE\n                            \n                        \n                        \n                            \n                                Value : errorCode\n                            \n                        \n                        \n                            \n                                 ERROR_MESSAGE\n                            \n                        \n                        \n                            \n                                Value : errorMessage\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNASA Mars Rovers Photos\n\nThis application shows information about the photos taken by the rovers that the NASA launched to Mars.\nFor make this uses an API provided by the NASA.\nYou can get more information about the NASA APIs in this url:\nhttps://api.nasa.gov/\nDevelopment server\nThis is a typical Angular application, so, you can run in your local machine running the development server.\nFor this you must navigate to the folder of the application, run, if it's necessary, npm i for install the dependencies and run the server with npm start. When the server is up, you can navigate to http://localhost:4200 to load the application in a browser.\nDeployed version\nYou can use a deployed version of the application in this url:\nhttps://theguitxo.github.io/marsRoverPhotos/\nDocumentation\nThere are a Compodoc page with the code documentation of the application:\nhttps://theguitxo.github.io/marsRoverPhotos/documentation/index.html\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DashboardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DashboardRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DetailsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DetailsRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_DashboardModule\n\n\n\ncluster_DashboardModule_declarations\n\n\n\ncluster_DashboardModule_imports\n\n\n\ncluster_DetailsModule\n\n\n\ncluster_DetailsModule_declarations\n\n\n\ncluster_DetailsModule_imports\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\n\n\nDashboardModule\n\nDashboardModule\n\nDashboardModule -->\n\nDashboardComponent->DashboardModule\n\n\n\n\n\nRoverPanelComponent\n\nRoverPanelComponent\n\nDashboardModule -->\n\nRoverPanelComponent->DashboardModule\n\n\n\n\n\nRoverPhotosComponent\n\nRoverPhotosComponent\n\nDashboardModule -->\n\nRoverPhotosComponent->DashboardModule\n\n\n\n\n\nDashboardRoutingModule\n\nDashboardRoutingModule\n\nDashboardModule -->\n\nDashboardRoutingModule->DashboardModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nDashboardModule -->\n\nSharedModule->DashboardModule\n\n\n\n\n\nDetailsModule\n\nDetailsModule\n\nDetailsModule -->\n\nSharedModule->DetailsModule\n\n\n\n\n\nErrorDialogLauncherComponent \n\nErrorDialogLauncherComponent \n\nErrorDialogLauncherComponent  -->\n\nSharedModule->ErrorDialogLauncherComponent \n\n\n\n\n\nErrorDialogPopupComponent \n\nErrorDialogPopupComponent \n\nErrorDialogPopupComponent  -->\n\nSharedModule->ErrorDialogPopupComponent \n\n\n\n\n\nLoaderComponent \n\nLoaderComponent \n\nLoaderComponent  -->\n\nSharedModule->LoaderComponent \n\n\n\n\n\nPaginatorComponent \n\nPaginatorComponent \n\nPaginatorComponent  -->\n\nSharedModule->PaginatorComponent \n\n\n\n\n\nDetailsComponent\n\nDetailsComponent\n\nDetailsModule -->\n\nDetailsComponent->DetailsModule\n\n\n\n\n\nDetailsRoutingModule\n\nDetailsRoutingModule\n\nDetailsModule -->\n\nDetailsRoutingModule->DetailsModule\n\n\n\n\n\nErrorDialogLauncherComponent\n\nErrorDialogLauncherComponent\n\nSharedModule -->\n\nErrorDialogLauncherComponent->SharedModule\n\n\n\n\n\nErrorDialogPopupComponent\n\nErrorDialogPopupComponent\n\nSharedModule -->\n\nErrorDialogPopupComponent->SharedModule\n\n\n\n\n\nLoaderComponent\n\nLoaderComponent\n\nSharedModule -->\n\nLoaderComponent->SharedModule\n\n\n\n\n\nPaginatorComponent\n\nPaginatorComponent\n\nSharedModule -->\n\nPaginatorComponent->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    9 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    15 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        9 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CAMERA   (src/.../constants.ts)\n                        \n                        \n                            STATUS   (src/.../constants.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/models/constants.ts\n    \n    \n        \n            \n                \n                    \n                    CAMERA\n                \n            \n            \n                \n                    Types of rover cameras\n\n                \n            \n            \n                \n                        \"FHAZ\" | \"RHAZ\" | \"MAST\" | \"CHEMCAM\" | \"MAHLI\" | \"MARDI\" | \"NAVCAM\" | \"PANCAM\" | \"MINITES\" | \"EDL_RUCAM\" | \"EDL_RDCAM\" | \"EDL_DDCAM\" | \"EDL_PUCAM1\" | \"EDL_PUCAM2\" | \"NAVCAM_LEFT\" | \"NAVCAM_RIGHT\" | \"MCZ_RIGHT\" | \"MCZ_LEFT\" | \"FRONT_HAZCAM_LEFT_A\" | \"FRONT_HAZCAM_RIGHT_A\" | \"REAR_HAZCAM_LEFT\" | \"REAR_HAZCAM_RIGHT\" | \"SKYCAM\" | \"SHERLOC_WATSON\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    STATUS\n                \n            \n            \n                \n                    Status that can have a camera\n\n                \n            \n            \n                \n                        \"active\" | \"complete\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            _storeReducer   (src/.../app.reducers.ts)\n                        \n                        \n                            collapsedPanel   (src/.../app.actions.ts)\n                        \n                        \n                            DETAIL_PHOTOS_PER_PAGE   (src/.../constants.ts)\n                        \n                        \n                            expandedPanel   (src/.../app.actions.ts)\n                        \n                        \n                            getCamerasList   (src/.../app.selectors.ts)\n                        \n                        \n                            getCodesList   (src/.../app.selectors.ts)\n                        \n                        \n                            getCurrentPhotosPage   (src/.../app.selectors.ts)\n                        \n                        \n                            getDetailRoverPhotosList   (src/.../app.selectors.ts)\n                        \n                        \n                            getDetailsCurrentPage   (src/.../app.selectors.ts)\n                        \n                        \n                            getDetailsRover   (src/.../app.selectors.ts)\n                        \n                        \n                            getEnableNextButton   (src/.../app.selectors.ts)\n                        \n                        \n                            getEnablePreviousButton   (src/.../app.selectors.ts)\n                        \n                        \n                            getErrorData   (src/.../app.selectors.ts)\n                        \n                        \n                            getErrorLoadingManifestData   (src/.../app.selectors.ts)\n                        \n                        \n                            getExpandedPanelStatus   (src/.../app.selectors.ts)\n                        \n                        \n                            getHasDetailRoverPhotosList   (src/.../app.selectors.ts)\n                        \n                        \n                            getHasDetailsMinimumParams   (src/.../app.selectors.ts)\n                        \n                        \n                            getHasManifest   (src/.../app.selectors.ts)\n                        \n                        \n                            getInitialDataIsReady   (src/.../app.selectors.ts)\n                        \n                        \n                            getIsErrorLoading   (src/.../app.selectors.ts)\n                        \n                        \n                            getIsErrorLoadingManifest   (src/.../app.selectors.ts)\n                        \n                        \n                            getIsLoaded   (src/.../app.selectors.ts)\n                        \n                        \n                            getIsLoadedManifest   (src/.../app.selectors.ts)\n                        \n                        \n                            getIsLoading   (src/.../app.selectors.ts)\n                        \n                        \n                            getIsLoadingManifest   (src/.../app.selectors.ts)\n                        \n                        \n                            getLandingDates   (src/.../app.selectors.ts)\n                        \n                        \n                            getLaunchDates   (src/.../app.selectors.ts)\n                        \n                        \n                            getLoadManifestStatus   (src/.../app.selectors.ts)\n                        \n                        \n                            getMaxDate   (src/.../app.selectors.ts)\n                        \n                        \n                            getMaxSol   (src/.../app.selectors.ts)\n                        \n                        \n                            getNoManifestLoading   (src/.../app.selectors.ts)\n                        \n                        \n                            getPhotosList   (src/.../app.selectors.ts)\n                        \n                        \n                            getPhotosPages   (src/.../app.selectors.ts)\n                        \n                        \n                            getRoverPhotoListTotalPages   (src/.../app.selectors.ts)\n                        \n                        \n                            getSelectedIndex   (src/.../app.selectors.ts)\n                        \n                        \n                            getStatus   (src/.../app.selectors.ts)\n                        \n                        \n                            getTotalPhotos   (src/.../app.selectors.ts)\n                        \n                        \n                            goToFirstPhotosPage   (src/.../app.actions.ts)\n                        \n                        \n                            goToLastPhotosPage   (src/.../app.actions.ts)\n                        \n                        \n                            goToNextPhotosPage   (src/.../app.actions.ts)\n                        \n                        \n                            goToPhotosPage   (src/.../app.actions.ts)\n                        \n                        \n                            goToPreviousPhotosPage   (src/.../app.actions.ts)\n                        \n                        \n                            initialState   (src/.../app.state.ts)\n                        \n                        \n                            loadCamPhotos   (src/.../app.actions.ts)\n                        \n                        \n                            loadCamPhotosError   (src/.../app.actions.ts)\n                        \n                        \n                            loadCamPhotosSuccess   (src/.../app.actions.ts)\n                        \n                        \n                            loadRoverManifest   (src/.../app.actions.ts)\n                        \n                        \n                            loadRoverManifestError   (src/.../app.actions.ts)\n                        \n                        \n                            loadRoverManifestSuccess   (src/.../app.actions.ts)\n                        \n                        \n                            PHOTOS_PER_PAGE   (src/.../constants.ts)\n                        \n                        \n                            resetErrorRover   (src/.../app.actions.ts)\n                        \n                        \n                            resetLoadStatus   (src/.../app.actions.ts)\n                        \n                        \n                            resetRoverManifestLoad   (src/.../app.actions.ts)\n                        \n                        \n                            selectedTabChanged   (src/.../app.actions.ts)\n                        \n                        \n                            selectState   (src/.../app.selectors.ts)\n                        \n                        \n                            setInitialData   (src/.../app.actions.ts)\n                        \n                        \n                               (src/.../router.selectors.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/store/app/app.reducers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        _storeReducer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createReducer (\n  initialState,\n  on(ACTIONS.setInitialData, (state: StoreState, { camerasList, roversList }) => ({..._setInitialData({...state}, camerasList, roversList)})),\n  on(ACTIONS.loadRoverManifest, (state: StoreState, { rover }) => ({ ..._loadRoverManifest({...state}, rover)})),\n  on(ACTIONS.loadRoverManifestSuccess, (state: StoreState, { data, rover }) => ({ ..._loadRoverManifestSuccess({...state}, data, rover) })),\n  on(ACTIONS.loadRoverManifestError, (state: StoreState, { rover, errorCode, errorMessage }) => ({..._loadRoverManifestError({...state}, rover, errorCode, errorMessage)})),\n  on(ACTIONS.resetRoverManifestLoad, (state: StoreState, { rover }) => ({ ..._resetRoverManifestLoad({...state}, rover)})),\n  on(ACTIONS.resetErrorRover, (state: StoreState, { rover }) => ({ ..._resetErrorRover({...state}, rover)})),\n  on(ACTIONS.goToFirstPhotosPage, (state: StoreState, { rover }) => ({..._goToFirstPhotosPage({...state}, rover)})),\n  on(ACTIONS.goToPreviousPhotosPage, (state: StoreState, { rover }) => ({..._goToPreviousPhotosPage({...state}, rover)})),\n  on(ACTIONS.goToNextPhotosPage, (state: StoreState, { rover }) => ({..._goToNextPhotosPage({...state}, rover)})),\n  on(ACTIONS.goToLastPhotosPage, (state: StoreState, { rover }) => ({..._goToLastPhotosPage({...state}, rover)})),\n  on(ACTIONS.goToPhotosPage, (state: StoreState, { rover, page }) => ({..._goToPhotosPage({...state}, rover, page)})),\n  on(ACTIONS.expandedPanel, (state: StoreState, { rover }) => ({..._expandPanel({...state}, rover)})),\n  on(ACTIONS.collapsedPanel, (state: StoreState, { rover }) => ({..._collapsedPanel({...state}, rover)})),\n  on(ACTIONS.selectedTabChanged, (state: StoreState, { rover, tab }) => ({..._selectedTabChanged({...state}, rover, tab)})),\n  on(ACTIONS.resetLoadStatus, (state: StoreState) => ({..._resetLoadStatus({...state})})),\n  on(ACTIONS.loadCamPhotos, (state: StoreState) => ({..._loadCamPhotos({...state})})),\n  on(ACTIONS.loadCamPhotosSuccess, (state: StoreState, { rover, data, camera }) => ({..._loadCamPhotosSuccess({...state}, data, rover, camera)})),\n  on(ACTIONS.loadCamPhotosError, (state: StoreState, { errorCode, errorMessage }) => ({..._loadCamPhotosError({...state}, errorCode, errorMessage)}))\n)\n                    \n                \n\n            \n                \n                    Creates a reducer to manage the state changes in the store\n\n                \n            \n\n        \n    \n\n    src/app/store/app/app.actions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        collapsedPanel\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction (\n  ACTIONS.COLLAPSED_PANEL,\n  props()\n)\n                    \n                \n\n            \n                \n                    Action to execute when the information panel for a rover is collapsed\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        expandedPanel\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction (\n  ACTIONS.EXPANDED_PANEL,\n  props()\n)\n                    \n                \n\n            \n                \n                    Action to execute when the information panel for a rover is expanded\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goToFirstPhotosPage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction (\n  ACTIONS.GO_TO_FIRST_PHOTOS_PAGE,\n  props()\n)\n                    \n                \n\n            \n                \n                    Moves the current page to the first\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goToLastPhotosPage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction (\n  ACTIONS.GO_TO_LAST_PHOTOS_PAGE,\n  props()\n)\n                    \n                \n\n            \n                \n                    Moves the current page to the last\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goToNextPhotosPage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction (\n  ACTIONS.GO_TO_NEXT_PHOTOS_PAGE,\n  props()\n)\n                    \n                \n\n            \n                \n                    Moves the current page to the next\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goToPhotosPage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction (\n  ACTIONS.GO_TO_PHOTOS_PAGE,\n  props()\n)\n                    \n                \n\n            \n                \n                    Moves the current page to the chosen in the selector\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goToPreviousPhotosPage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction (\n  ACTIONS.GO_TO_PREVIOUS_PHOTOS_PAGE,\n  props()\n)\n                    \n                \n\n            \n                \n                    Moves the current page to the previous\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadCamPhotos\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction (\n  ACTIONS.LOAD_CAM_PHOTOS\n)\n                    \n                \n\n            \n                \n                    Loads the list of photos according the values for camera, martian sol and rover: start of the process\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadCamPhotosError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction (\n  ACTIONS.LOAD_CAM_PHOTOS_ERROR,\n  props()\n)\n                    \n                \n\n            \n                \n                    Loads the list of photos according the values for camera, martian sol and rover: finished with error\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadCamPhotosSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction (\n  ACTIONS.LOAD_CAM_PHOTOS_SUCCESS,\n  props()\n)\n                    \n                \n\n            \n                \n                    Loads the list of photos according the values for camera, martian sol and rover: finished with success\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadRoverManifest\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction (\n  ACTIONS.LOAD_ROVER_MANIFEST,\n  props()\n)\n                    \n                \n\n            \n                \n                    Loads the manifest information for a rover: start of the process\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadRoverManifestError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction (\n  ACTIONS.LOAD_ROVER_MANIFEST_ERROR,\n  props()\n)\n                    \n                \n\n            \n                \n                    Loads the manifest information for a rover: finished with error\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadRoverManifestSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction (\n  ACTIONS.LOAD_ROVER_MANIFEST_SUCCESS,\n  props()\n)\n                    \n                \n\n            \n                \n                    Loads the manifest information for a rover: finished with success\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetErrorRover\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction (\n  ACTIONS.RESET_ERROR_ROVER,\n  props()\n)\n                    \n                \n\n            \n                \n                    Resets the values used for show the error modal\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetLoadStatus\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction (\n  ACTIONS.RESET_LOAD_STATUS\n)\n                    \n                \n\n            \n                \n                    Reset the values for control the load status in the app\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetRoverManifestLoad\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction (\n  ACTIONS.RESET_ROVER_MANIFEST_LOAD,\n  props()\n)\n                    \n                \n\n            \n                \n                    Resets the values used for load the rover manifest information\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedTabChanged\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction (\n  ACTIONS.SELECTED_TAB_CHANGED,\n  props()\n)\n                    \n                \n\n            \n                \n                    Action to execute when the tab of a rover panel changes\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setInitialData\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createAction (\n  ACTIONS.SET_INITIAL_DATA,\n  props()\n)\n                    \n                \n\n            \n                \n                    Sets the initial data needed for the app (cameras and rovers information)\n\n                \n            \n\n        \n    \n\n    src/app/models/constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DETAIL_PHOTOS_PER_PAGE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 50\n                    \n                \n\n            \n                \n                    Number of photos (files) in photo details page\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PHOTOS_PER_PAGE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 40\n                    \n                \n\n            \n                \n                    Number of items for photo information each page\n\n                \n            \n\n        \n    \n\n    src/app/store/app/app.selectors.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getCamerasList\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector (\n  selectState,\n  (state: StoreState): Map => createValueMap(state, ROVER_CONSTANTS.ROVER_FIELDS.CAMERAS)\n)\n                    \n                \n\n            \n                \n                    Returns the cameras list for each rover\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCodesList\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector (\n  selectState,\n  (state: StoreState): string[] => state?.roverCodesList\n)\n                    \n                \n\n            \n                \n                    Returns the list of rovers codes\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentPhotosPage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector (\n  selectState,\n  (state: StoreState): Map => createValueMap(state, ROVER_CONSTANTS.ROVER_FIELDS.CURRENT_PHOTOS_PAGE)\n)\n                    \n                \n\n            \n                \n                    Returns the current page for the list of rovers photo information for each rover\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDetailRoverPhotosList\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector (\n  selectState,\n  selectRouteParams,\n  (state: StoreState, params: Params): RoverPhoto[] => {\n    const notPagined = getNotPaginatedPhotoList(state, params);\n\n    const roverPage = state?.roversList?.find(roverPageItem => roverPageItem.code === params[ROVER_CONSTANTS.DETAILS_PARAMS.CODE]);\n    if (roverPage) {\n      const init = (roverPage.roverPhotosCurrentPage! - 1) * ROVER_CONSTANTS.DETAIL_PHOTOS_PER_PAGE;\n      const end = (init + ROVER_CONSTANTS.DETAIL_PHOTOS_PER_PAGE);\n      return notPagined.slice(init, end);\n    }\n    return [];\n  }\n)\n                    \n                \n\n            \n                \n                    Returns a paginated list of detail photos for a rover\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDetailsCurrentPage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector (\n  selectState,\n  selectRouteParams,\n  (state: StoreState, params: Params): number => {\n    return state?.roversList?.find(item => item.code === params[\"code\"])?.roverPhotosCurrentPage!;\n  }\n)\n                    \n                \n\n            \n                \n                    Returns the current page in the list of detail photos for a rover\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDetailsRover\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector (\n  selectRouteParam(ROVER_CONSTANTS.DETAILS_PARAMS.CODE),\n  (code: string | undefined): string => code!\n)\n                    \n                \n\n            \n                \n                    Returns the code of the rover from the route params\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getEnableNextButton\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector (\n  selectState,\n  (state: StoreState): Map => {\n    const data = new Map();\n    state?.roversList?.forEach(rover => {\n      const entries = Object.entries(rover);\n      const code = entries.find(item => item[0] === ROVER_CONSTANTS.ROVER_FIELDS.CODE);\n      const currentPage = entries.find(item => item[0] === ROVER_CONSTANTS.ROVER_FIELDS.CURRENT_PHOTOS_PAGE);\n      const totalPages = entries.find(item => item[0] === ROVER_CONSTANTS.ROVER_FIELDS.PHOTOS_PAGES);\n      if (code && currentPage && totalPages) {\n        data.set(code[1], currentPage[1] \n                    \n                \n\n            \n                \n                    Returns a value that indicates if the \"next\" button for the paginator can be enabled\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getEnablePreviousButton\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector (\n  selectState,\n  (state: StoreState): Map => {\n    const data = new Map();\n    state?.roversList?.forEach(rover => {\n      const entries = Object.entries(rover);\n      const code = entries.find(item => item[0] === ROVER_CONSTANTS.ROVER_FIELDS.CODE);\n      const currentPage = entries.find(item => item[0] === ROVER_CONSTANTS.ROVER_FIELDS.CURRENT_PHOTOS_PAGE);\n      if (code && currentPage) {\n        data.set(code[1], currentPage[1] > 1);\n      }\n    });\n    return data;\n  }\n)\n                    \n                \n\n            \n                \n                    Returns a value that indicates if the \"previous\" button for the paginator can be enabled\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getErrorData\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector (\n  selectState,\n  (state: StoreState): ErrorDialogData => ({\n    errorCode: state?.errorCode,\n    errorMessage: state?.errorMessage\n  })\n)\n                    \n                \n\n            \n                \n                    Returns the error information produced when an error has occurred\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getErrorLoadingManifestData\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector (\n  selectState,\n  (state: StoreState): Map => {\n    const data = new Map();\n    state?.roversList?.forEach(rover => {\n      data.set(rover.code, {\n        errorCode: rover.errorCode,\n        errorMessage: rover.errorMessage\n      });\n    });\n    return data;\n  }\n)\n                    \n                \n\n            \n                \n                    Returns the error information loading the manifest for each rover panel\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getExpandedPanelStatus\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector (\n  selectState,\n  getCodesList,\n  (state: StoreState, list: string[]): Map => {\n    const data = new Map();\n    list?.forEach(item => data.set(item, state?.expandedPanel?.indexOf(item) > - 1));\n    return data;\n  }\n)\n                    \n                \n\n            \n                \n                    Returns a map with information about the panels, if there are expanded or not\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHasDetailRoverPhotosList\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector (\n  selectState,\n  selectRouteParams,\n  (state: StoreState, params: Params): boolean => {\n    const rover = state?.roversList?.find(roverItem => roverItem.code === params[ROVER_CONSTANTS.DETAILS_PARAMS.CODE]);\n    const camsRover = rover?.photos?.find(photosRover => photosRover.sol === +params[ROVER_CONSTANTS.DETAILS_PARAMS.SOL])?.cameras;\n    const camsRoverPhotos = Array.from(new Set(rover?.roverPhotos?.\n      filter(roverSol => roverSol.sol === +params[ROVER_CONSTANTS.DETAILS_PARAMS.SOL]).\n      map(roverPhoto => roverPhoto.camera)));\n\n    if (!(!!params[ROVER_CONSTANTS.DETAILS_PARAMS.CAMERA])) {\n      return (camsRover?.length === camsRoverPhotos?.length);\n    }\n\n    return (camsRoverPhotos?.indexOf(params[ROVER_CONSTANTS.DETAILS_PARAMS.CAMERA]) > -1);\n  }\n)\n                    \n                \n\n            \n                \n                    Returns a value that indicates if the details information about the photos for a rover is loaded\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHasDetailsMinimumParams\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector (\n  selectRouteParams,\n  (params: Params): boolean => (!!(params[ROVER_CONSTANTS.DETAILS_PARAMS.CODE]) && !!(params[ROVER_CONSTANTS.DETAILS_PARAMS.SOL]))\n)\n                    \n                \n\n            \n                \n                    Returns a value that indicates that the route has the minimum parameters\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHasManifest\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector (\n  selectState,\n  (state: StoreState): Map =>  createValueMap(state, ROVER_CONSTANTS.ROVER_FIELDS.HAVE_MANIFEST)\n)\n                    \n                \n\n            \n                \n                    Returns the indicator if there are manifest for each rover panel\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getInitialDataIsReady\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector (\n  selectState,\n  (state: StoreState): boolean => state?.initialDataReady\n)\n                    \n                \n\n            \n                \n                    Returns a value that indicates if the initial data is ready to use\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getIsErrorLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector (\n  selectState,\n  (state: StoreState): boolean => state?.errorLoading\n)\n                    \n                \n\n            \n                \n                    Returns a value that indicates if there was any error loading data\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getIsErrorLoadingManifest\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector (\n  selectState,\n  (state: StoreState): Map => createValueMap(state, ROVER_CONSTANTS.ROVER_FIELDS.ERROR_LOADING_MANIFEST)\n)\n                    \n                \n\n            \n                \n                    Returns the indicator if an error has occurred loading the manifest for each rover panel\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getIsLoaded\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector (\n  selectState,\n  (state: StoreState): boolean => state?.loaded\n)\n                    \n                \n\n            \n                \n                    Returns a value that indicates if any data is loaded\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getIsLoadedManifest\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector (\n  selectState,\n  (state: StoreState): Map => createValueMap(state, ROVER_CONSTANTS.ROVER_FIELDS.LOADED_MANIFEST)\n)\n                    \n                \n\n            \n                \n                    Returns the indicator if manifest is loaded for each rover panel\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getIsLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector (\n  selectState,\n  (state: StoreState): boolean => state?.loading\n)\n                    \n                \n\n            \n                \n                    Returns a value that indicates if any data is loading\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getIsLoadingManifest\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector (\n  selectState,\n  (state: StoreState): Map => createValueMap(state, ROVER_CONSTANTS.ROVER_FIELDS.LOADING_MANIFEST)\n)\n                    \n                \n\n            \n                \n                    Returns the indicator if is loading manifest for each rover panel\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLandingDates\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector (\n  selectState,\n  (state: StoreState): Map => createValueMap(state, ROVER_CONSTANTS.ROVER_FIELDS.LANDING_DATE)\n)\n                    \n                \n\n            \n                \n                    Returns the landing date for each rover\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLaunchDates\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector (\n  selectState,\n  (state: StoreState): Map => createValueMap(state, ROVER_CONSTANTS.ROVER_FIELDS.LAUNCH_DATE)\n)\n                    \n                \n\n            \n                \n                    Returns the launch date for each rover\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLoadManifestStatus\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector (\n  selectState,\n  (state: StoreState): Map => {\n    const data = new Map();\n    state?.roversList?.forEach(rover => {\n      data.set(rover.code, {\n        loading: rover.loadingManifest,\n        loaded: rover.loadedManifest,\n        error: rover.errorLoadingManifest\n      });\n    });\n    return data;\n  }\n)\n                    \n                \n\n            \n                \n                    Returns a map with the loading status for the manifest of each rover panel\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMaxDate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector (\n  selectState,\n  (state: StoreState): Map => createValueMap(state, ROVER_CONSTANTS.ROVER_FIELDS.MAX_DATE)\n)\n                    \n                \n\n            \n                \n                    Returns the last earth date with photo for each rover\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMaxSol\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector (\n  selectState,\n  (state: StoreState): Map => createValueMap(state, ROVER_CONSTANTS.ROVER_FIELDS.MAX_SOL)\n)\n                    \n                \n\n            \n                \n                    Returns the last martian sol with photo for each rover\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNoManifestLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector (\n  selectState,\n  (state: StoreState): boolean => state?.roversList?.every(item => !item.loadingManifest)\n)\n                    \n                \n\n            \n                \n                    Returns the indicator that neither panel is loading their manifest\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPhotosList\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector (\n  selectState,\n  (state: StoreState): Map => {\n    const data = new Map();\n    state?.roversList?.forEach(rover => {\n      const entries = Object.entries(rover);\n      const code = entries.find(item => item[0] === ROVER_CONSTANTS.ROVER_FIELDS.CODE);\n      const currentPage = entries.find(item => item[0] === ROVER_CONSTANTS.ROVER_FIELDS.CURRENT_PHOTOS_PAGE);\n      const photosList = entries.find(item => item[0] === ROVER_CONSTANTS.ROVER_FIELDS.PHOTOS);\n\n      if (code && currentPage && photosList) {\n        const init = (currentPage[1] - 1) * ROVER_CONSTANTS.PHOTOS_PER_PAGE;\n        const end = (init + ROVER_CONSTANTS.PHOTOS_PER_PAGE);\n        data.set(code[1], photosList[1].slice(init, end));\n      }\n    });\n    return data;\n  }\n)\n                    \n                \n\n            \n                \n                    Returns a paged list of photos information for a rover\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPhotosPages\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector (\n  selectState,\n  (state: StoreState): Map => createValueMap(state, ROVER_CONSTANTS.ROVER_FIELDS.PHOTOS_PAGES)\n)\n                    \n                \n\n            \n                \n                    Returns the total pages for the list of rovers photo information for each rover\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRoverPhotoListTotalPages\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector (\n  selectState,\n  selectRouteParams,\n  (state: StoreState, params: Params): number => {\n    return Math.ceil(getNotPaginatedPhotoList(state, params)?.length / ROVER_CONSTANTS.DETAIL_PHOTOS_PER_PAGE);\n  }\n)\n                    \n                \n\n            \n                \n                    Returns the total pages of detail photos for a rover\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSelectedIndex\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector (\n  selectState,\n  (state: StoreState): Map => createValueMap(state, ROVER_CONSTANTS.ROVER_FIELDS.SELECTED_INDEX)\n)\n                    \n                \n\n            \n                \n                    Returns the index of the selected tab for each rover panel\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getStatus\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector (\n  selectState,\n  (state: StoreState): Map => createValueMap(state, ROVER_CONSTANTS.ROVER_FIELDS.STATUS)\n)\n                    \n                \n\n            \n                \n                    Returns the status for each rover\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTotalPhotos\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createSelector (\n  selectState,\n  (state: StoreState): Map => createValueMap(state, ROVER_CONSTANTS.ROVER_FIELDS.TOTAL_PHOTOS)\n)\n                    \n                \n\n            \n                \n                    Returns the total days with photos for each rover\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createFeatureSelector('store')\n                    \n                \n\n            \n                \n                    Returns the state of the store\n\n                \n            \n\n        \n    \n\n    src/app/store/app/app.state.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        initialState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StoreState\n\n                    \n                \n                \n                    \n                        Default value : {\n  camerasList: [],\n  roversList: [],\n  roverCodesList: [],\n  initialDataReady: false,\n  expandedPanel: [],\n  loading: false,\n  loaded: false,\n  errorLoading: false,\n  errorCode: '',\n  errorMessage: ''\n}\n                    \n                \n\n            \n                \n                    Initial state of the store\n\n                \n            \n\n        \n    \n\n    src/app/store/router/router.selectors.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : getSelectors()\n                    \n                \n\n            \n                \n                    Selectors for get information like route params, query string, ...\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
